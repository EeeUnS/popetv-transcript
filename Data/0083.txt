요번에도 또 포프 t 올리기 하루 전에 이 퓨전 인가 하루 전이다 하루
전에 밀자 것도 만드는 거에요
요즘 자꾸만 이런 데 바빠서 그런것도 있고
야이 로 일주일에 2번 계속 만들 수 있을까 걱정까지 되더라구요 이제 요
어쨌든 간에 음 오늘 깔리기 는 아 그 뭐라 그럴까
그 문서화 에 대해서 조금 이야기를 해보려고 해요
예 어찌보면 그냥 현재 게임 코드를 작성 하시는 분들에게는 별루 상관이
없는 얘기일 수도 있어요
왜냐하면 이제 자체적으로 그 뭐야
게임 만드는 회사 않은 보통 자기 소스 코드 다 볼 수 있고 그렇기
때문에 저는 코드 자체가 훌륭한 문서라고 보거든요 그래서 코드를 읽는
것만으로 아니면 함수의 봇은 뭐 헤더를 읽는 것만으로 그 함수가 무슨
일을 하는지 문서와 가 그렇게 주도로 되는 거라고 생각을 해요
정말 아닌 부분에 대해서는 뭐 주석 달고 뭐 이렇게 해서 문서화를 하겠죠
보통 문서를 따로 만든 다기 보다는 코드 안에 코드 자체가 문서 하고 그
주석이 문서를 만드는 그런 경우라고 생각을 하거든요
물론 뭐 그 외에 뭐 나중에 교육용 자료 라던가 이런것 때문에 좀 이렇게
그 전체적인 피쳐 그니까 좀 큰
그리고 전체적인 시스템 디자인을 보여 주거나 이러기 위해서 문서를 따로
만들어 건 나쁘지 않다고 생각을 하는데 문제는 보통 문서를 이렇게 따
이렇게 만들다보면 은 나중에 코드가 바뀌어도 그 문서를 안 바뀌면 경우
많잖아요 그래서 이 둘 사이에 그
연관성이 깨진다 그러나 더 이상 관련이 없는 문서가 되 버리기 때문에 저
개인적으로는
어차피 또 스코다 볼 수 있는 곳이면 소스 코드 자체가 무척 아 된다고
생각하는 편이에요
최근에 제가 그 어느 회사 끼의 렌더링 엔진을 이제 콘솔 용어로 포팅을
해주고 있어요
1 4개 콘솔 4개 용으로 코팅을 해주고 있는데 이게 저 재밌더라 고
이제 그 그래픽 라이브러리 같은 경우에는
뭐 주택 처럼 꽤나 하이 의 랩의 그가 고 수준의
api 도 있지만 콘솔 쪽 api 는 정말 넣은 레벨로 가는 경우가
많거든요 그래서 막 c 스타일의 그런 어 함수를 막 호출하고
그럼 거미 들어가는 매개 변수에서 되게 좀 많은게 많아요 그리고 매개
변수의 의미도 굉장히 뚜렷하지 못한 경우가 있고 심지어는 그 화면
리프레쉬 레이트 있잖아요 그래서 백서 플립 해야 되는 거야 이제 그거를
할 때 인자로 0을 넣으면 은
60 펄 치구 뭐 1을 넣으면 30 월 최고 잃으면 무슨 월츠 이렇게까지
api 전이되는 경우가 있어요 어찌 보면은
뭐라 그럴까 이제 하드웨어 엔지니어링 쪽 하시는 분들이 좀 그런 식으로
많이 하시는데
그래서 이제 소프트웨어 공학 쪽에 아니라 지 하드웨어 0 앞쪽에서 그런
분들이 모터 에게 콘솔 디자인을 많이 하니까 그런 게 곧바로 반영이 되는
거죠 그래서 뭐 그런 경우가 있는데 이게 문제는 그런 api 가 a
피해를 제가 써야 되니까 이게 사실은 문서화가 없이는 굉장히 알아 먹기
힘든 레이 피해가 돼 있어 일단 뭐 apa 디자인이 잘못된걸 수도 있죠
어떤 의미에서는
아니면 이제 뭐 말그대로 하드웨어 쪽에 직접 제어를 하니까 굳이 목 장
케 모인 원 만들고 이런거 없이 등이 인테리어가 때라 박제 이런 개념을
수도 있고 그래서 아니면은 또 말 그대로 이제 코스 올 쪽은 이제
하드웨어 쪽이 니까 자기네들이 어떤 효율성을 높이기 위해 특별한
하드웨어를 장착하게 되요 일반적으로 볼 수 없는 하드웨어를 왜냐하면 은
다른 경쟁사보다 어느 부분이 우리 훨씬 더 효율적이다 라는 걸 보여줘야
되기 때문에 그런 경우에는 정말 보통 지어 이제 그래픽 프로그래머가
생각할 때 존재하지 않는 그런 개념이 들어오니까 그런 개념을 못잡는 걸
수도 있고 그럴 때 이제 문서를 보게 되는데 여기서 되게 최근에
이게 두 플랫폼 인데 같은 회사의 플랫폼 이에요 근데
api 구조만 봐도 그렇고 샘플 코드 1 받아 보였고 이 두 팀은
확연하게 다른 팀 이게 딱 보이는 거에요
한 팀은 짜 순수하게 하드웨어 엔지니어 의 조금 완벽해 가는 사랑
샘플코드 받아 그냥 c 스타일의 처음 때까지 한번 쫙 만드는거 또 다른
쪽 한쪽은 아 이게 좀 젊은 애들이 아닌가 생각이 되고요 소프트웨어 공학
쪽 환생을 많이 들어왔고 뭐 이넘 같은 것도 많이 썼고 인테 저보다는
그리고 샘플 코드를 만들 때도 이렇게 프레임워크 잡고 이렇게 딱딱해 갖고
샘플 얻자 남는거
일단 샘플코드 만 갖고 얘기를 하며 는 그런 하드웨어 콘솔 샘플 api
들어가는 것은 순수하게 씨스타의 레이 pic 스타일의 코딩 스타일 1
그냥 함선에 바쳐 받고 그냥 보여주는거 프레임워크 앉지 않은 거 이게
이해하기 훨씬 쉬워요 왜냐하면 어차피 제가 각 프레임 워크를 만들더라도
그 프레임워크 내부에서 함수 호출하는 걸 제가 결과적으로 다 해야 되는
거기 때문에 그 파일 하나에 있어 글자 볼수 있는게 오히려 프레임워크
제대로 짜놓고 무슨 뭐 op 제대로 해놓고 하는것보다는 얘도 보이가
쉽더라구요 그랬을 땐 그것은 잠깐 얘기를 드리고 싶었고
이제 그 다음에 이제 문서와 라는게 재밌는게 있어요 제가 아까 이 두
플랫폼이 다르다 그랬잖아요
여태 재밌었던 게 이 올드스쿨 안시 스타일의 그 플랫폼은
문서화가 헤더 파일에 다 돼 있어요
그래서 일단 어떤 함수를 볼 때 이게 뭔지 모르겠다는 레프트 웹을 딱
놀러오면 디젤 스튜디오에서 요
ftl 홀딱 눌러보면 은 그 d 컬러 에디션 으로 가잖아요
그 deli 션에
그 모든 매개 변수의 의미야 그게 정말 웬만한 api 다큐멘트 보는
것처럼 완벽하게 있어서 이 매개변수는 모름 이라고 여기에 받을 수 있는
값은 일어 이런 값이 있는데 이런 값을 때 저렇게 되고 저렇게 되고 그게
말 그대로 함수 헤더 한줄의 설명
보통 문서와 ap 에 설명된 은거한 20 지성도 되지 않게 쫙 써 있는
거예요 그래서 그런 api 를 솔직히 제가 별로 본 적이 없었어요 콘솔
쪽에서 근데
보면서 되게 편하다 생각을 했어요
왜냐하면 은 따른 걸 필요가 없는가 빚을 수도 안 해서 그냥 다 보고
이해하고 할 수가 있는 거예요 그 샘플 코드 하고 이것만 있으면 그
하드웨어 그래픽스 하드웨어에 직접 접근하고 뭐 하는데 필요하게 닫혀
있더라구요 근데 이제 두 번째로 아까 말했던 이제 그 프레임워크 뭐
제대로 짧은 이런 좀 새로운 경향의 아콘 솔 api 있죠
이쪽이
전반적으로 는 솔직히 쪽이 좀 났어요 새로운 api
그쪽이 왜냐하면 은 그 문서와 의 문제가 아니라 딸려오는 툴이나
이런것들도 정말 소프트웨어 프로그래머 공학 소프트웨어공학 짜듯
프로그래머들이 다룰 수 있는 편리한 툴들을 많이 제공했고 비주얼스튜디오
lte 태그 해서 좀 잘 됐고 이 올드스쿨 한 사람들은 좀 아 디버깅이
나 이런거 에서 자체 디버거 띄워야 되고 만 이런 부분이 있었어요 뭐
비결 스피드도 지원하지만 거의 뭐 속도도 엄청 느리고 안된다고 원 만나고
그렇게 했는데 문서가 쪽에서는
아까 말씀 드리니까 올드스쿨 쪽이 좀 났던 게 여기 문서와 는
헤더 파일에는 정말 별 내용이 없었어요 그냥 헤더 파일은 이런거 하는
함수 다 별 의미없는 설명 그리고 거기다 자세한 걸 알고 싶은 매뉴얼을
봐라 매뉴얼을 딱 열어보면 그 아까 헤더 파일에서 일단 내용 이제
매뉴얼에서 볼 수 있는 거에요 근데 이제 매뉴얼이 보통 chm 파일로
많이 제공해 줘 요즘은 그 뭘 헬프 아이린 html 기반 된거 그걸
하나가 봐가면서
결과적으로 내용은 똑같은데 그 chf 파일에서 뭐야 찾으려 그러면 또
여기서 있는 함수 이름 7 9 뭐 이렇게 api 보고 또 여기서 이거
본래부터 클릭하고 이런 게 있잖아요 근데 그런 과정을 겪는 것보다는 그냥
비쥬얼 쓰자 sf 틀고 누른다면 필요한거 차라서 그냥 카피 앤 페이스트
가 그 수는 훨씬 빠르더라구요
그래서
물론 요즘은 이제
뭐 닭 씨젠 이라던가 이런 걸 쓰면 이제 함수 헤더 파일이 나 이런거 써
넣은 그 커멘트 블락 자체를 이제
아 박씨 장판을 내추럴 바로 뽑아 낼 수가 있잖아요 그래서 결과적으로
헤더 파일에 넣으면 똑같이 뽑아낼 수 있는 것 같긴 한데 결국 그렇다면은
저는 헤더 파일에 상당히 많은 그 문 소화가 돼 있고 정말 그 chm
파일을 보고 싶은 보고 싶어하는 사람들을 위해서는 박씨 죄인으로 그
해롭다 뭐야
매뉴얼 파일을 제너레이션 해갖고 보여주면 되는 게 아닌가 생각이
들더라구요 그래서
엎드려 굉장히 신선한 충격이었어요 아 어찌 보면은 따른 쪽에서 많이 쓸
수 있으 고 있던 방법일 지도 모르겠는데 제가 콘솔 쪽에서는 그렇게
되는것 첨 봤어요 그래서 그 올드스쿨 아니 그런 헤더파일 거기에 들어가
있는 문서 밖에 괜찮지 않나 보면서
많은 걸 느꼈고 옵션 이제 뭐 이건 이제 아까 말씀드렸듯이 그냥 게임을
제작하는 회사에서는 별의미가 없을 거에요
오히려 라이브러리 만들어서 잎의 내가 파는 회사가 더 의미가 있을 거지
그런 회사라면 은 이런 식으로 문서화를 헤더 빨아 쳐 박는 방법 한번
생각을 해보고 50만 한 것 같아요
부르고 뭐 닥친 따로 제공해 왔고 매뉴얼 제공하게 될 것 같고 그래서
최근에 그냥 보면서 아 좀 새로운 데 좋았는데 라고 느꼈던 게 난 우비
위에서 아 포프 tv 를 만들었고요
절대 그 시간에 급해서 대충 만들어서 만든 건 아니에요 절대 아니에요 예
그랬구요 에 포프 였읍니다
