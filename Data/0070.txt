예 안녕하세요 포프 입니다 아 오늘은 오랜만에 다시 c 플러스 플러스 를
내분 얘기를 해보려고 해요
10불 1 에 아 얼마전에 모 회사가 했더라
아 얼마전에 무슨
아 의료 영상 기기 의료 영상 기기 제작 향과 아니 뭐 그런거 있어요 그
어디 스타트업이 있었는데 왠 그거에
거기에서 한번 면접을 보고 싶냐고 물어 봐서 음
면접 왔죠 그때 이제 처음 면접볼때 숙제로 내준 문제가 뭐 이런 우리가
이런 시스템을 만들려고 하는데 그걸 디자인에서 제출해 라이거 거 냐 3일
정도 쉬고
그때 이제 c 플러스 플러스 제 역할을 해서 뭐 했는데 저는 아무리
생각해도 e 그제 가짜야 되는 컴포넌트가 멀티 뚫어야 되니 되야 되는거
같더라구요 그러니까 다른 쓰레드에서 계속 진행이 되어야 되는 그런
컴포넌트로 생각을 했기 때문에
아 그러면은 이모 레이스 컨디션 이라고 하잖아요
그 멀티 스레딩 환경에서 여러 가지 뜰에 드가 어 1 에 변수를 같이 뭐
쓰거나 있거나 할 때 그 타이밍이 안맞으면 은 서로 덮어쓰는 그런게 병
생기는거 그래서 그거를
미 텍스를 그니까 이제 한 쓰레드에서 그 데이터를 고치 때마다 미 텍스를
걸어줘야 되는게 맞잖아요 그래서 이제 암이 텍스를 해야 겟다 라고 했는데
저는 이제 제가 직접 10 플러스 플러스 1 앱에서 미 텍스를 짤리는
없었거든요 근데 이제
원래 주면 크리티컬 섹션 이렇게 해서 짤려 그러다가 혹시 있지 않을까
그래서 10 플러스 플러스 일레븐
그 더 크네 테이션을 잠깐 봤어요 니까 은미 텍스 있더라구요
자 이제 아비 텍스 가 이미 지원이 되는구나 그래서 이제 std 콜론
콜론 위 텍스 인거 같구요
맞을 거에요 아마 아 예 맞아요 그 밑에 쓰고
아 이렇게 모링 클로디아 들어오더라 코는 머물 써보시고
금에 모링가 메모리가 그럴 수도 있 거니 밑에 x 가 따로 이제 헤더파일
수도 있고
그럼 이 텍스 하면 이전에 밑에 x 가 건 나 이렇게 말하면 되잖아요
그래서 이제 변수 바꿀 때마다 위해서나 건강만 해주면 되니까 그렇게
하다가 아 이게 막 하고 안락을 따로따로 호출 해주다 보면 은 뭐라
그러죠
어쩌다 까먹고 안락을 안 하게 되면은 이게 되더라 컨디션이 발생할 수가
있어요 1 뜰에 되는 조건을 잡고 있는데 따른 스웻 다른 뚫어야 대해서
아 그거 를 다시 라카 려 그럼 기다려야 하니까 엄마가 될 때까지 의
식재 모 게임 개발 하는 도중에도 그런 경우도 가끔 있고 어
그래서 이제 또 그게 처음에 코드 잘 자라던 나중에 누군가 고치다 보면
잎새 베프 잘 못써 갖고 한 조건에서 만나게 되는 경우도 있고 뭐 이런
여러가지 그런 상황이 있거든요 그래서 이제 저희가 많이 쓰는 기법 중의
하나 가이드의 스코프 드 음악이라는 게 있어요 한마디로 스코프 라고 하면
어떤 범위 이거든요 그래서 이제 뭐 함수 같은 경우 예를 들어 면은 함수
처음에 들어왔을 때 무슨 로컬 변수 다시 어서와 해주면 함수 끝날 때까
로컬 다 없어지지 않아요
그런 식으로 이제 범위에 따라서 씨나 c 플러스 플러스 는 그냥 알아서
로컬 은정아 타락 던져 주기 때문에
그리곤 유루 만든게 아닌 그냥 오브젝트로 맞는거 면 범위를 끝나는 순간
그리고 사라지죠
그래서 그거를 그런 비헤이비어 라고 하지요 그럼 비헤이비어 를 이용해서
자동으로 범위를 넘어 갈때 안나게 되게 하는 그런 방식이 있어요 이제
스코프 각 이라고 해요
뭐 개념은 사실 간단해요 스코프 터가 게 뭐냐면 그냥 따른 없이 제트를
1 만들어요 클래스를 그래 스코프 더락 이라고 해놓고 이걸 생성자에 그
밑에 x 를 받아 주는 거에요
그새 손자의 섬이 텍스를 받아 곡을 곧바로 낙을 하고 어 파괴자 디스
트럭 저어 라고 하죠 소멸자 파괴자 그 소멸자 에서는 그걸 언락 한번
호출해 주면 끝이
그래서 그렇게 하는건데 저는 이거는 10 플러스 플러스 일레븐 표준의
없어 줄 알았어요 근데 음
보니까 있더라구요 그래서 오 이런것도 있네 그래서 그냥 벌써 거 되게
편하게 썼거든요
그 이제 그거는 뭐 라고 불린 하면 뭐라고 부르더라 가득 어쩌고 했는데
막 언더 스코어와 과 얻은 에요 가 lock 언더 스코어의 밑줄
주유 ard 하고 이제 템플렛 알아요 그 템플러 astd 미 텍스를
받으면 되는 거죠 그래서 그렇게 하면 그냥 뭐 함수의 시작 가까이 함수
전체가 이제 그
변수 제어 하는 부분은 락을 해야 되는 거라면 함수 시작할 때 - 꼭
스쿠터가 게 아니지 아 아 가을 드 해놓고
std 밑에 x2 템플릿 인자를 해주고
이제 생성자에 들어가는건 아까 만들었던 밑에 x
저같으면 엘락 이라고만 들었었거든요 그 m 막을 거기다 집어넣고 그 이제
함수가 끝날 때는 자동으로 이제 지워야 없나 그 해 주고 해제가 되는
거죠
일단 그 이건 성상의 별로 큰 문제가 없어요 왜냐하면
아스코 프 트 나 그러니까 그 가득 맨날 헷갈려 락 것 를 만들 때 그
이게 뉴 를 불러서 메모리를 할당하는 게 아니라 그냥 그 스펙 메모리
안에서 그냥 오브젝트를 만든 거거든요 포인터 없이 그렇기 때문에 해제
하는거 되게 빨라요 어쨌든 말에 그래서 그런 성능상의 문제를 크게 없고
아 그 대신에 이제 프로그램을 실수를 막아줄 수 있는 좋은 방법이죠
어 그런데 이제 뭐 이렇게 함수 전체에서 도막을 거래되지 않고 코드 1
부분에서만 걸어야 한다면
그와 걸려야 되는 부분 있잖아요 고 위아래로 그냥 그 뭐야
컬리 vs 드시라고 1 뭐라 그러지 그 이렇게 동그랗게 된 가로 말고
이렇게 삐쭉 하게 나온 가로 있죠
어쩜 커리 브레이슬릿 브레이스 플레이스에 vs 브레이스 클립을 a 스펜스
모르겠다
컬리 프라이즈 자 그런 같은데 저희는 그 걸었어요 그래서 아 그냥 그걸
해 주시고 그 안에 스코프 도나 걸리면 그 위에 있던 그 옆에 적합한
괄호
그거하고 만나는 밑에 똑같은 바로 있잖아요 거 나갈 때 알아서 그건 해제
해 주니까 그것도 좀 먹는 것 같아요
그래서 최근에 아 예상치도 못하게 찾아낸 아 그런 c 플러스 플러스 표준
이라 양 나누고 싶 싶었구요
아
아 뭐
멀티플레이 딩 에선 그 외에도 만 쳐 뭐 이제 어 이렇게 아 꺼낸 게
아무래도 느릴 수가 있으니까 사실 일이거든요
뭐 컨텍스트 스위치 문제도 있고 뭐 어쨌든 그 이러저런 들인데 그것
대신에 이제 막 을 걸지 않고 무슨 뭐 어 락 없이 아기 없이 거는 그런
것도 있죠 뭐 아톰의 인플레 만추 하던가
아톰 2기 프렌즈 라든가 그러니까 라가 없이도 알아서 그냥 할 수 있게
해주는거 이제 cpu 자체의 지원을 확인하는데
굉장히 기본적인 연산에 대해서
근데 그게 그냥 빠른 야 하는 것도 사실은 좀 되게 애매해요 사실은
아 그 아까 말씀드린 컨텍스트 위치 문제도 있고 그리고 상당히 실수를
많이 할 수 있는 부분이기도 하고
뭐 여러가지 쓰는 곳은 있어요 뭐 이제 뭐 왜 프랑스 카운터 이렇게 올라
올려주거나 내려 주거나 이럴 때 그런 때는 좀 쓰는데
뭐 뭐 그럴 때 이거 자주 쓰면 내려지고 똑같이 나쁘다는 빨라요 박히게
나쁘다는 빠른데
정말 제가 써본 경험으로는 처음 멀리 떨어진 뭐 반드시 되는 그냥 막으로
다 쓰시고
그리고 이제 그게 나중에 내려 준다고 판단이 되면 은
그러나 토 메인 클래스와 tqm it 를 쓰는 건 나쁘지 않아요 근데
제가 그 아톰의 잉크로 마트는 제가 이제 하드웨어 레벨에서 많이 써 왔기
때문에 cpu 따라 다르게 쓰는 그러는거 아닙니다
그런거 있잖아요 뭐 어떤 cpu 에 지원하는 이런 아트 메링 클레멘트
라든가 아니면 어떤 특정 컴파일러 더 시원한 라운드 스코어 안 더 쓰고
와 써주고 해주는 그런 함수 라던가
그런게 많았는데 그게 지금 c 플러스 플러스 의 표준으로 올라오지 는
올라 왔는지 모르겠어요 아니라고 생각을 하는데 곳 한번 뒤져 보긴
뒤져봐야 될 거 안 돼 제가 확실하게 알려면 그래서
5 모든 간의 이제 프로그램이 습관적으로 는 그런거 보다는 락의 나 엄마
글 직접 써주는 게 아무래도 아 앉아 나니까 일단은 그리고 뭐 웬만한
경우에는 왜 성능이 문제가 되는 버틀 애기 될 가능성이 굉장히 적기
때문에 그런 보틀 내게 될 때만 고쳐 주라고 말씀드리고 싶고 그 때까지는
나 건 막을 써 주시고 밑에 으로 그냥 아 그리고
락 언락 할 때죠 그걸 두 개를 꼭 맞춰야 되니까 쌍을 그거 실수를 할
수 있으니까 그 대신 아까 말씀드린 그 스코프와 그러니까 어 10 플러스
플러스 에서는 라 언더 스코어가 바지 라고 하는거 그것을 좀 많이 써
주시라고
아 말씀드리려고 비디오를 만들었어요 뭐 이게 이제
당연히 이렇게 표준으로 지원되면 더 좋은거 줘 예 그래서 그렇게 말씀을
드리고 그 정도는 끝인 것 같네요 오늘은 예 뽑혔습니다
