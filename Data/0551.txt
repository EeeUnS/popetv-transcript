예 안녕하세요 포프입니다. 제가 예전에 '이거 못 하면 당신은 주니어입니다'라는 시리즈를 몇 편 만든다고 예고했어요. 그중에 하나예요. 

어떤 제품이나 프로젝트를 시작을 했어요. 우리 팀에서 누군가 주문했어요. '자! 프로젝트 이제부터 코드 할 수 있게 프로젝트 세팅 만들어 오세요. 프로젝트, 빌드 세팅되고 소스파일, java파일이던, cs파일이던, c파일이던 추가하고 컴파일하면 최종 exe 파일 나오게, 그리고 디버깅도 곧바로 가능하고 배포도 만들게 프로젝트 세팅해오세요' 그랬어요. 그거를 못 한다? 그럼 당신은 주니어입니다. 별로 복잡하게 말할 이유가 없어요. 왜냐하면 내가 주니어라는 건 굉장히 조그만 부분을 하나 맡아서 코딩을 하는 거예요.

내가 Intermediate으로 가게 되면 아주 멋들어지게는 아니지만 최소한 어떤 제품도 완성을 시킬 순 있어요. 비효율적 일순 있지만... 그럼 제품을 완성시키는 게 뭐예요? 무(無)에서 제품이 나올 수 있는 프로그래밍 환경을 만드는 겁니다. 그거를 내가 못해요? '아 저 한 번도 안 해봤는데요?' 그럼 주니어예요. '제가 이거 할 일이 없어요. 회사에서 다 만들어줬어요.' 그럼 주니어예요. 이유는 복잡하지 않아요. 당신이 어떤 회사 있든 간에 집에서 최소한 뭔가를 만들 순 있어야 해요. 내가 안드로이드 빌드 환경이 되었든, 안드로이드+깃허브 액션 꼽아갖고 최종 Deploy를 만들든, 애저 데브옵스에 넣어서 서버까지 Deploy 되는 거 만들든, End-to-end Deployment 할 수 있는 그 정도의 실력은 갖춰야 되는 겁니다. 디버그, 릴리스 빌드가 뭔지도 모르고, uglifier가 뭔지도 모르고, obfuscate가 뭔지도 모르는 당신이 어떻게 Intermediate이겠습니까? 아닙니다. 내가 뭔가 하나를 책임질 준비가 크게 안 되어 있다는 거예요. 누군가 나를 관리해주고, 나는 거기에서 조그만 거 떼어 갖고 만들어주면서 조그만 공헌을 하고 있다는 것뿐이지, 내가 무언가의 큰 부분을 떼어 내서 할 수가 없다는 겁니다.

저는 많은 거를 다른 업체랑 많이 비교를 해요. 예를 들면 제가 흔히 좋아하는 비교 대상이 되는 거... 목수라던가 아니면 인테리어 디자인 이런 거 얘기를 많이 해요. 목수를 예를 들어 볼게요. 제가 오늘 목수한테 갔어요. '제가요 이번에 이런 테이블을 좀 만들어야 하는데, 이런 테이블 쫌 만들어 주세요' 그러면은 목수는 알아서 '그러면은 나무는 이런 걸로 하실까요? 뭐 할까요?' 하고 만들어 줘요. 그게 굉장히 안 좋거나 마감이 좋지 않을 수는 있어요. 하지만 목수는 최소한 저한테 테이블을 만들어 줄 겁니다. 그리고 만드는 과정에서 다른 사람의 도움을 받아서 '이거를 뭐 어떻게 하죠?' 이런 거 아니에요. 그런 게 필요하다면 견습생, 주니어 이런 겁니다. 그게 '뭐가 복잡해요?' 하겠지만 실제 가구를 제대로 만들려면 원래대로라면 가구 만들다 사고 터지고 일 있잖아요? 그런 일이 없도록 가구를 만들어야 되는 겁니다. 그거까지 할 수 있고 설계도 제대로 할 수 있는 사람들이 주니어를 벗어났다고 하는 거죠. 그게 아니면은 '그냥 뭐 하면 돼', '뚝딱 두들겨줘' 이런 것뿐이에요. 그렇기 때문에 build는 주니어냐 아니냐를 나누는 좋은 기준이 됩니다.

아무리 코딩을 오래 했고 '저는 DB도 만져봤고, 몽고 DB 도 해 봤고, 이것도 해봤어요.' '아 그래요? 다음 프로젝트 진행해야 되니까, 우리 이거 예전 프로젝트 이렇게 되어 있으니까, 그거랑 비슷한 세팅으로 맞춰 보세요'. 근데 어떻게 할지 모른다는 거예요. 왜 몰라요? 그러면 안 해 봤대요. 그러면 보고 베끼면 되잖아요? 뭘 베껴야 될지 모르겠대요. 열어보니 텍스트 파일인데 세팅 다 보고 맞추면 되는 건데 그걸 못한다는 건 무슨 얘기죠? 어떤 도구가 있고 그 도구에 세팅 파일 넣어서 자동화시키는 개념이거든요? 그 세팅을 못 한다는 거예요. 한 마디로 컴맹 까진 아니어도 프로그래밍의 필요한 도구 사용법 모른다는 거예요. 도구가 어떻게 쓰이는지도 몰라요. 당연히 모를 순 있어요. 배워 가면 돼요. 배울 준비도 안 돼 있다는 거야? 그럼 주니어예요. 뭘 고민을 해요? 

예전에 한 20년 전쯤에 동료 프로그래머가 그런 얘기를 한 적이 있어요. '요즘 대학생들 이상한 거 같다' 이런 소문이 들린대요. 자기 학교 이제는 같이 졸업한 여학생이었는데 회사에 갔는데 회사에서 '요번에 컴퓨터를 새로 들여왔으니까 OS를 새로 설치하세요' 그랬다는 거예요. 근데 여자 프로그래머가 윈도를 설치하는 법을 모르는 거예요. 반나절이 지나도 아무것도 안 하고 있어서 '왜 안 했어요?' 그러니까 설치하는 법을 모른다는 거예요. 그거는 컴맹 이거든요? 컴맹은 주니어도 안 되는 거예요. 제 기준에서 이건 취업했다는 게 기적(Miracle)이에요.

요즘은 20년 전보다 취업의 문턱이 많이 낮아졌습니다. 왜냐하면 최저임금도 안주는 코드 몽키가 굉장히 많아졌으니까... 그런 분들이 있기 때문에 그럴 수 있다고 생각을 하지만 그분들은 계속 주니어에서 멈춰 있겠죠. 지금 기준의 주니어. 예전 기준의 주니어 말고요. 하지만 그 사람들은 결과적으로 도구 세팅하고 뭐 할 때까지 오려면 어떻게 해야 하는 걸까요? OS 설치할 수 있어야 하고, 새 컴퓨터 주면 OS 설치하고 프로그램 설치하고 한마디로 컴맹을 벗어나야 되고요, 그다음 단계 개발도구의 컴맹을 벗어나야 되는 거죠. 참고로 말씀드리면 일반 사용자를 위한 프로그램들은 굉장히 친절하고 직관적이에요. 직관적이라는 얘기는 눈에 뭔가가 반짝반짝 보인다는 거죠. 
프로그래머를 위한 도구들은 프로그래머한테는 굉장히 직관적이에요. 무슨 의미냐하면 텍스트 파일 열어보면 다 나오고, 세팅 파일 열어보면 모든 데이터가 나옵니다. 단 눈에 버튼이 없기 때문에 모를 수 있죠. 한마디로 읽는 능력만 되어 있고 어떤 파일이 바이너리 타입이고, 어떤 파일이 텍스트 타입이고, 어떤 파일이 압축된 텍스트인지만 알아도 굉장히 많은 걸 할 수 있습니다. 하지만 생각보다 많은 사람들이 이 고민도 안 하는 경우가 있더라고요. 
그런 사람들은 어쨌든 간에 주니어예요. 

그래서 굉장히 간단하게 말했어요. 프로젝트 세팅 못 한다? 당신은 주니어입니다. 지금 내가 못 하고 있는 일들? 주니어에서 벗어나고 싶은 일들 그럼 하세요? 회사에서 못 하면 개인 프로젝트라도 하세요. 안드로이드 앱 만드는 거, 처음부터 출시까지 할 수 있는 모든 과정 본인이 만들어 보길 바랍니다. 포프였습니다.