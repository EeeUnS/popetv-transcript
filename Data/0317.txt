얘네가 스코프 입니다
오늘은 음 utc 타임 에 대해 얘기를 좀 해보려고 해요
그때 재미있는 것 중에 하는데 이런 부분이
예전에 한때 그 처음의 이제 유닉스 타이페이 시스템이 아니구나
처음에 이제 ms 도스 같은데서 시간을 적을 때 밀레니엄 그 y2k 문제
그때 달리 적당 그런데 비슷한 건데 어이가 없지만 그 해를 마지막 뒤 두
자리만 적었어요 왜냐하면 은
뭐 그때는 100년 이상 사는 사람들 잘 없었고 그래서 그냥 그래 뭐 두
자리만 있어도 크게 문제 없겠지 이렇게 색을 했었죠 그러다가
2000년도 가 되면서 앞의 두 자리가 바꿔 버리니까
쑥 그때부터 이제 그 아이 뭐 2 그런데 뭐라고 내 해를 정릉 걸 이제
내 자리로 드려야 되는 이 하면서 뭐 그게 큰 문제라 니모 하느님
그래왔고 뭔가 날 2척 엄청 본 보라 먹었던 그 사건이 y2k 인데 그런
것도 있었고 그리고 한동안 그 뭐 이거는 좀 레전드 같은 얘기죠 사실은
뭐 빅 h 어 나 누가 옛날에 아이가 메모리가 640 킬로바이트 이상
필요한 게 뭐 있겠니 라고 했는데 지금 메모리가 32 이가 달고 살고
있고 그런 식으로
예전에 만들었던 그런 썸 전 들 가정들 아니면 그때는 단지 필요가 없었기
때문에 신경을 안 썼던 부분들이
으 점점 사회가 발전해 가고 뭐 해 가 흘러가고 기술이 발전하면서 새로운
표준으로 받게 되는 경우가 점점 나오고 있어요
그래서 제가 그 중에 하나라고 생각하는 게 바로 이 utc 타임 이에요
일반적으로 이제 뭐 자바를 쓰시는 분도 그렇고
c 샵 을 좀 옛날 코드를 쓰시는 분도 그렇고 이제 뭐 그 뭐야 뭐
유닉스 타임 일하던 다 e10 idc 타임 이런거를 봐도 뭐 이제 시간을
표현하는 방식이 되게끔 옛날 스러운 것들이 있어요 사실은
그리고 지금 제가 말하려고 하는 utc 타임 결과적 뭐냐면
각 나라마다 원래 타임 존이 있잖아요
특히 이제 따라가 쪼금 연 크게 문제가 안돼요 한국 타임 존 은 무슨 뭐
플러스 7 인가 하니까 영국 그리니치 천문대 는 거의 가 타임 존이 0
이에요 그럼 거기가
만약에 12시면 은 타임 좀 플러스 원 이면 그게 아마 1 1 쉬고
타임존 - 원이면 11시 고 이럴 거에요 그래서 각 지구를 돌아 가면서
타임 존을 이제 플러스 cb - 12 로 나 나 나 맞겠죠
그래서 이제 한국이 아마 - 치즈가 플라스크 인가 그렇고 제가 있는 쪽이
에마 프랑스 파리가 - 파리가 그래요 그래서 저쪽으로 이제 뭐 퍼시픽
타임에서 pst 라고도 하고 la 타임 이라고도 하는데 그럼 이제
미국이나 이제 캐나다 같이 큰 나라들은
타이트 지원이 여러개 수밖에 없잖아요 나라가 워낙 크니까 저희가 타임
존이 얘기예요
이제 한국은 하나밖에 없지 근데 한국하고 중국도 1시간 차이가 나요
베이징이 사실은
그래서 그런 타임 전에 문제가 뭐냐면
예전에 그냥 인턴의 없고 대한 그냥 로 칼 서버에서
아 그냥 쓸 때 나는 한국 사람만 서비스 할 거야 나는 요 쪼그만 지방만
서비스 할 거야 라고 할 때 시간을 정릉 걸을 그냥 그 로컬 타임을 더
크게 문제가 없었어요 그래서 그 당시에 많이 했던 코딩 스타일 중에
하나가 바로 칼 타임으로 저장 하는거 로 칼 템은 어디서 뭐냐
서버 에 시간 셋을 서버 타입이죠 사실은 서버를 이제 내가 서버를 서울의
두면서도 서버에 타임 존을 미국으로 들수도 있어요
그럼 그냥 미국 시간이 들어가는 거죠 그런 식으로 서비스를 많이 했어요
근데 이제 모든 게 인터넷에서 연결이 되고 사람들이 이제 한군데 서비스가
아니라 세계를 서비스하는 그런게 나오잖아요
그러면 내가 무슨 예를 들어서 여기서 트위터를 아침 9시 없다 썼다고
해서 한국 사람들 보내서 트위터가 치마 없이 떴다고 나온 건 말이 안
되잖아요
아니면 한국에서 트위터를 썼어 한국 못 하루가 빠르 거든요 저희보다
그런 거기서 이제 어떻게 또 쓴게 이제 새 했는데 2017년 5
나는 아직까지 2016년 인데 왜 새로 나오지 이런 문제가 있고요
내
생각보다 아직도 굉장히 많은 서비스들이
유틸 안써요 그 utc 를 쓴 얘기가 뭐냐면 시간을 적을 때
타임존 정보까지 같이 정 법이 있어요 이거는 2시간 인데 이 시간에
타임존 a 거였다 라고 적는 법이 있고 아니면 시간을 그 저장할 때 서버
같은데 그냥 아까 말했던 그 리니지 시간 그게 이제 표 되니까 타임 존이
영어로 보는 거니까 그 시간으로 적어두고
아 이거는 그린티 시간으로 이식 아니었어
그러면 나는 지금 서울에 있으니까 서울식 인연이 게 * 실 까 그러면
그것을 시간을 추가 하든 빼주는 해서 그냥 보여주면 되는 거잖아요 보여줄
때만 그 시간을 변화 해주면 되는 거거든요
근데 아직도 서버 에 너무나 많이 염산 많이 내놓게 타임을 봐요
그래서 아 이건 좀 아니지 않나 제가 한국 서비스 볼때마다 로컬 탐방
등을 너무 많이 봤었고
그리고 그 두 번째로 이제 최근에 한번 또
이거는 미국회사 긴 했는데 그 사건을 하는데
어 시간을 utc 로 안 주는 거야
표준 상으로 보면 그래서 걔들이 쓰던게 이제 유닉스 f 치 타임
이었거든요
us fg 타임 은 기본적으로 원래 그린치 시간을 주게 돼 있어요 근데
서버 세팅이 잘못되어 있다 보니까 시간이 그 utc 로 나누고
말도 안되게 무슨 인디아 시간 이었나 뭐 이상한 시간이 오는 거에요
그래서 그것까지 한번 좀 걔 들고 몇 번 왔다갔다 많이 알고 논의 utc
아니라 보니까 아침에 맞다고 우기는 단유 해보라고 아니라고
그거 되게 많이 얘기 했었죠 근데 이제 문제가 뭐냐면
걔네들은 뭐 코딩을 짤 때 그냥 서버 시간을 그냥 db 에 반응 거에요
그니까 생각이 없는거죠 그냥 서버 신을 받으면 되겠구나
그리고 아니면 이제 서버 세팅을 utc 로 하면 되겠구나 생각을 하는거
있죠 근데 서버 세팅 느끼실 안 한 거야 그래서
적정 알수 없는 이제 사실이라
그래서 는 db 에 기본적으로
데이트 타입 를 받을 때는 전 utc 로 무조건 봐요
그리고 만약에 거기에 이제 시간 존이 안 타임 존이 안 들어가 있는 그런
컬럼 이라면 이름의
무조건 utc 를 보고 굳이 이거를 따른 시간 존으로 쓰고 싶으면 거기다
이제 그 어떤 시간 전에 들어갔는지 를 컬럼 냄 있어주면 깨끗하고
보거든요
그 전에 이렇게 하는데 제가 하고 싶은 말은
그렇게 서버에 발단 utc 로 박자 왜냐면 왠만한 언어에서 utc 시간을
구해오는 함수들이 있거든요
아
제가 썼던 자바에서는 막 타임 없애 놓고 조금 복잡하게 됐는데
음 시작 같은 경우에는 그냥
데이트 타임 utc 나오고 이런 함수가 있어요 그럼 밑에 시간에 그냥
좋아요
아 그리고 그렇게 더 데이 타임 오브젝트를 받을 때 이 데이터 오브젝트에
이 께 카인의 어떤 정도인지 이게 utc 인지 아니면 은 뭐 서 버
타입이라면 로 칼 인지 나온 게 있어요 그래서 그 멤버 변수를 보는
것만으로도 e 타임 인 자 이제 볼 수도 있고
근데 시 샵에 그런
데이타임 카인드 종류 멤버를 없는거죠 아마 해결하고 생각해요
그냥 옛날에 데이타임 오브젝트 썼으니까 ut 생각없이
그거를 아 옛날 꺼라 심리 스하게 지원을 해주기 위해서 없이 눈 것
같은데 그거 말고 이제 데이타임 오프셋이 라는 오브젝트 있거든요
그것은 기본적으로 오브젝트 안에 옵 셋이 같이 들어가 있는거죠 이게
업소의 0 인지 옵스 의 파리 인지
오브젝트를 보는것만으로도 아 이게 어떤 타임 존을 가지고 있는 거구나
라는 생각을 할 수 있으니까 좀 더 안전하게 수가 있죠
데이타임 을 쓰는 사람은 아 걍 흔히 봤을 때 그냥 이게 utc 자 이제
생각 하네요 그냥 아 그 데이터 이미 겠지
그가 확인하라고 서버 권하는 경우도 있죠 그래서
utc 시간을 기본적으로 2골을 하지 않았던 과거 때문에 이런 현상이
일어나는 것 같은데 그나마 c 샵 은 이나마
잘 정리를 한 거고 지금 아직은 좀 문제가 있지만
잡아 쪽에서 타임오프 데 썩 그렇게 바꾸는 것은 좀 되게 큼 캐나다로
생각이 들어요 괜히 좀 으 근데 잡아도 역시 뭐 후방 호환성 지원하기
위해서 많이 깰 수가 없으니까 그렇게 낭 거겠죠
근데 이제 후 방어선을 지원하는 방법도 조금 깔끔한 어묵과 조그만 깔끔한
가고 있는데 시 #2 아무래도 좀 더 못 하다 보니까 조금 남아 였던것
같고
모씨는
역시 는 할 말 없이 그냥 그냥 안좋아요 일단은 잡아 괜찮을 있다는것과
그런 부분은 그래서 그거 그냥 언어의 나이에 따라 그리고 아까 말했던
기술의 발전에 따라
아
후박 5 완성을 적당히 깨 가면서 발전 언어와 후방 우승을 해서
유지하려고 했던 언어와의
차인 것 같아요 그래서 적당히 깨는 것은 좋은데 아직 못 그러고 있는게
문제인것 같고 그래서 서버 에디트 씨를 박자 좋아요 그래서 etc 가
아니기 때문에 컬럼에 새로운 이름을 박자 아 좋아
아 그리고 뭐 오브젝트에서 만들 때는
그래 댁은 저는 서버 코드에서 돌리는 데이타임 도 모두 위치를 올려요
그래서 저는 데이트 타이 오브젝트를 쓸때도
모이게 로컬 타임은 이런 고민할 이유가 없어요 무조건 위 tc 나올 쓰고
전 db 에서 읽어와서 유치 시 기 때문에 그 최종적으로 이제 뭐 사용자
한테 보여주거나 뭐 로컬 타임으로 변화 할 때가 있으며 는 그 로컬
변소에서 잠깐 바꿔서 쓰고 끝나는 거죠
그렇기 때문에 저는 코드가 이제 미스테이크 로 만들 경우 가 적긴 한데
또 하나 재미있는 게 제가 최근 봤던게
제이썬 파일로 데이터 주고 받을 때 제 있어 은 파일이 되게 좀 느슨한
표준 이에요 사실은 그래서 제일 쓴 에서 이제 시간을 팩스 해줄 때
있잖아요 그때 이제 딱히 어떤 시간 타입으로 패스 해주라는 그런
아
아 뭐랄까 귀하기 없어요 그래서 어떤 이제 제이썬 파일을 주고받는 그런
apl 보면 어떤 경우에는 레포츠 타임을 줘요
유닉스 시간이죠 처음 뭐 몇 년 몇시부터 얼마가 시간이 시간이야
그런데 어떤 5mm 세컨 들어주고 어떤 넘어 세컨 들어주고 어떻게 그
마이클 3칸 들어 줘
회복제 보면서 근데 문제는 제이썬 그 컬럼 이름의 변수 이름의 이게 밀리
세컨드 g 마이크로 세컨드 4 컴즈 다 안 씀 하 여 그래 우리 api
는 이런거를 저라고 맞서 나의 토지 타임을 그걸 나보고 거쳐 라고
그렇게 api 따 보고 이제 아 이게 밀린 g
마이크론 지지가 판단해야 되는 거죠 그래서 그런 표현이 없어요
그리고 시간을 패스할 때 그래프 템을 주는 경우도 있고 아니면 이제 그냥
뭐 몇 년 몇 월 며칠 이런식으로 주는 경우도 있고 아니면 은
그걸 그냥 그걸 스트링이 뿐이니까 거기에
타임 좀 까지 놓았고 보내주는 경우가 있어요
그래서 그 틀린 이었기 때문에 어떻게 하라는 못 베스트 프랙티스 도 없고
악 중구난방이 에요 막 제이썬 의 데이터에 들어가면 은
아 이게 어떤 포멧이 그러면 일반적인 포멧은
그 시작 같은 언어에서 이제 뭐 제이썬 단 되셨으면 은 일반적인 것은
그냥 아 알아서 지가 판단해서 변 해줘요 4 밀리 세컨드 마이크 3건
2건 활동 보였고
그냥 아까 말했던 시간이 제나이 엄호 먼 스
뭐 뭐 데이 이런건 어떻게 시샵 에서 데이터 오브젝트 2 때 만들때
스트링 없고 만들 때 자동으로 8시간은 우리들이 있기 때문에 적당히
봤거든요 근데 제가
제이썬 파일 한참 고민하다 결과죠 내린 결정 뭐냐면
에 포츠 하이패스 하지 말고 이건 밀리 세컨드 마이크로 세컨드 씩
주셨잖아요 그냥 데이트 우리가 이제 몇 년 몇 월 며칠 머시 이런걸
스트링으로 노조 대 표 수난이 아이소 표준연 있어요 뭐 이소라 곳 하겠죠
이소 표준안 중에 데이트 타임을 타임 좀 까지 놓았고 이제 해주는 거라
스트링으로 표현하는 표준이 있어요
그래서 제 있었는데 쓰시는 분들은 그 표준 그냥 뭐 간단히 셀 라이즈
세팅만 넣어주면 바뀌 거든요 그래서 그렇게 하자 라고 저는 얘기하고 있어
가면 갈수록 왜냐면 아까 말한 utc 이런 타입이 있고
왜 포츠 타 이미지 내가 기본적으로는 그 2
그리니치 천문대 시간이라고 하지만 ap 해 보면 그냥 서버 씨가 좀
나와요
그리고 제 4 4g 타입이라 그럼 아주 깔끔하게 제 깔끔하게 그냥 몇 년
8 마치
그리고 시간이 있고 거기다 좋은 인가 그게 제트 로 들어갈 거야 아마
튀어나 튀 어떤 것도 같고 그리고 어느 존에 있는 데까지 나와요
그러면 이 스트링 자체 모든 정보가 있거든요
그러면 그걸 써봐서 어떻게 쓰는지 맘이 것 은 그래서 제가 제일 선까지
봤을 때 음 확실히
이소 봄에 타라가 따라갔고 하는게 좋을것 같고
제이썬 담배 쓰시는 분들은 그냥 아까 말했듯이 세팅과 넣으시면 되고요
아 뭐 잡아 헤나 그런 쪽에도 뭐 그런게 있겠죠
뭐지 써니 이런 것도 있으니까 제가 서버 진 많이 써보진 않아서 잘
모르겠어요 정확히 주제 있음
deli 저쪽을 대충 썼거든요 자바 쪽에서
그래서 뭐 제이썬 담배처럼 간단하게 지원해 주면 더 좋은것 같고 제가
볼때는
음 그래서 오늘 했던 얘기 그 거에요
이제 제발 시간에는 저장하는 시간 서버 가 되든 못보니 든 뭐 어디든
저장을 하시고 위 칩스 자
왜냐하면 은 만약에 내 서비스가 잘 떴어요 여기서 그럼 이것을 다른
나라로 이제 서버 서비스를 같이 또 염 연동을 시키려고 해
그러면은
시간 같은 어떡하지 기본적으로 한국시간 있을까 나머지는 이제 따라 시간을
해야 되는데 그러면
존 인포메이션 어떻게 집어넣고
그러다가 이제 뭐 회사를 딴데로 옮긴다고 자 그럼 또 한번 뒤집어야 되고
코드 잠드는 별 차이가 없거든요 타인 존나 많아
으 기본적으로 시작할 때부터 그냥
가장 표 전 스러운 타임 존을 만드니 좋은것 같아요
그냥 이거는 죽어도 한국 밖에 안 나갔나
그런 100% 자신이 있다면 한국에 있는 사람은 서비스 r13 강의 없다
뭐 그런 자신이 있다면 안 써도 되죠 그런데
점점 굉장히 많은 서비스 들이 뜻이 되는 게 좋은 것 같아요
특히 저는 이것저것 이제
아 저는 또 이제 이쪽 대륙이 넓은데 있어 그럴 수도 있죠
중국만 하더라도 탄 좀 필요할 거예요 서버 쪽에 가능성이 뒤 쓰고 음
프랙티스 를 통해서 id 테이트 타이머를 무조건 utc 로 쓰는 습관을
기르거나 그게 안되는 경우 아예 그 오프 3 까지 포함하는 데이터
오브젝트를 쓰게 하거나
아 그 서버에 살래 그리고 제이썬 에서는
시간을 표현하는 방법에 여러가지 방법이 있지만 그냥
아이 소품에 쓰자 그래서 그냥 utg 얘기를 했어요
내포 보였습니다
