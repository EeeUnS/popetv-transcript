네 안녕하세요 포프 입니다 오늘은 예전에 만들었던 비디오 2개를
그래 좀 합쳐 같고 다른 이것 좀 해보려고 해요
처음 하체 비디오는 코딩 스탠다드 가 이렇게 박스에 필요가 있나 라는
말을 얘를 했어요 그래서 되게 오래 전 하는 얘긴데
어차피 규칙은 깨우는 맡긴다고 건 이게 있었죠 그리고 다음 할 비디오는
예전에 한번 아키텍트 코스를 다녀 왔다는 얘기 했잖아요 그래서 거기서
당사가 이제 뭐 애들 다 코드 몽키 다 걔 말 그대로 별로 생각이 없고
그냥 주면 코드만 숫자일 뿐이다 걔는 뭔진 이어가 아니다 이런 얘기
있었죠
그건 그 사람이 했던 얘기 중에 그런게 있어서 얘기하려고 해요
코딩 스탠다드 가 왜 필요하냐 그런 얘기 했어요 그래서 이제 코딩
스탠다드 그 사람이 한약의 뭐냐면
코딩 스탠다드 는 길면 안 된다 그것처럼 이해가 똑같아요
길면 안 된다 뭐 몇페이지 않아 딱 주하고
코딩 스트라 드는 반드시 5를 하고 5를 하지 말고 마 써야지
그 외에 왜 그럼에 안되고 왜 그래야 되는 일을 하지 말라는 거예요
어차피 그거 해봐야 걔네가 이 해서 뭐 할만한 사람들 별로 없고 어차피
코드 몽키 들은 규칙 정해주고 따라해 뭐 조삼모사 1가
뭐 그런 것처럼 따라오게 만 할 뿐이지 걔네들이 무슨 뛰어나 엔지니어가
되고 이런거 생각하지 말라는 그런 사람이 없거든요
이제 저는 이제 개인적으로
돌아갈까 그 사람이 말하는 의도가 뭔지는 알아요
워낙 그럴
8 10% 90% 의 코드 몽키 d 를 많이 봤기 때문에 하는데 그 처음
맡은 코드 몽키 막 쥬니어 이들 중에서도 분명 엔지니어 그만 이건 뭐
엑스퍼트 그 아키텍트 급으로 올라갈 수 있는 애들이 있거든요 그런데 이를
알고 싶어 하거든요
그런 애들을 교육학의 저는 오히려 그런 것까지도 설명을 좀 눈 것까지
포함해서 몇장이 안넘어가는 생각을 했었는데 그 지금 뭐가 옳은 방법인지
에 대해서는
암 확신 속 그 적립은 안써요 그런데
제가 예전에 이제 코드 몽키 아이코드 ok 레코드 스탠다드를 까다로운
필요 없다고 했을 때 그걸 이제 코드 테니까 다뤄야 된다고 말하면서
이런저런 코딩 스탠다드를 말하는 사람도 있었어요 사실은 그 중에 무엇보
당연히 올바른 말들을 한 사람도 있었고 근데 또 하나의 문제는 그 중에
굉장히 헛소리로 한 사람들이 쌍의 너 문제에요
그런 사람들이 맞는 코딩 스탠드를 보면 정말 이 2 의 의미 없고 이
오면 코딩 산이 스탠다드 인 경우가 있었거든요
그냥 내가 이렇게 짱 쓰니까 편해서 이런 희게 개념 이에요
한마디로 이제 뭐 어쩌면 종교전쟁 인데 이거 내가 믿는 종교의 거고 내가
믿는 종현이 거고 우리 신이 맞다 이거 의 개념으로 가서 저는 그걸 안
좋아하는 건데
문제는 그런 사람들이 많은 코딩 스타들을 따라서 하면은
그 정말 말그대로 뭐 정말 제대로 코드 이해하고 컴퓨터 제대로 이용하고
이해하고 언어를 이해해서 코딩 스텐으로 만들 수 있는 사람들 진짜 많지
않아요 그래서 대부분 이제 따른 코딩 센서 가져다가 많이 적용을 하는
거고 근데 그런 이렇게 좀 딴 나라에 사는 사람들이 스스로 코딩 스탠다드
를 만들어 버리면
복잡한 복잡할수록 저는 예전에도 말했지만 장점보다 단점이 많다고
생각하거든요
이것은 말그대로 그런거 있잖아요
정말 똑똑한 사람들이 뭔가 하면은 정말 뭔가 잘하는 사람들이 뭔가 하면은
뭔가 잘해
그리고 정말 그런 사람이 아닌데 아 그래 남은 이걸 할 수 없어
그리고 4자리를 찾아야지 그리고 내일을 더 열심히 한 사람들도 잘해요
근데 그 그런 사람 있잖아요 나 정말 못해 그렇죠 자기가 정말 잘 없다고
믿는 데 한번 잘 아는게 없어 내 아집으로 버텨 어 찾았다는 걸 증명하고
싶어
뭔가 이상하 주세요 그럼 이제 그런 아이들이 만든 코딩 스타들이 뭐 이런
게 있거든요 그거 당하면 정말 힘들어 지거든요
제가 회사 다니면서 뭐 이런건 유수의 다단 많이 다녀봤지만
동 코딩 스틸라 중에서 훌륭한 코딩 스탠다드 는
확률적으로 되게 적었어요 사실
그리고 이게 사실은 코딩 스텔라 드의 문제보다는
정말 언어가 브리스 레코딩 스타들을 만들어 되는 부분이 있어요 언어 실수
할 수 있는 기본 동작들이 있기 때문에 그것을 제외하고는
정말 코딩 스타는 문제가 많은 경우가 있어요 혹시 랙 각하
이렇게 문제가 반대 한다고 생각하는데 저도 개인 나름의 코닝 스탠드가
있거든요 근데 제 코니스 하드가 남들이 연예 했을 때 딱 봤을때 온
그것도 상관 없어 이러면 그가 둘다 공카 봤을 때 문제 없는 거면 다
그냥 같이 써요 저는 특별히 뭐 닷지 처럼 무슨 뭐 반드시 뭐 이
캐릭터가 이거 뭐 이런건 없어요 저는 가독성 만 되면 코딩 사는 크게
문제란 삶을 가족성 되고
크게 뭐라 그럴까
시스템 을 날려 먹지 않을 그런 이렇게 실수를 시스템을 날려 먹을만한
실수를 막을 수 있는 코딩 스탠다드
그런건 찬성을 하는데 가끔 그냥 스타일 갖고 이렇게 한 사람도 있었고
그건 좀 문제 인것 같아요
그래서 모든 간의 체험하고 싶었던 얘기는 그 사람이 말한 것처럼 코딩
스탠다드 가 존재하게 되는 이유는 있긴 있어요
단지 코드 몽키 들이 따라 오게 하기 위해서라면
그리고 말 그대로 걔들이 말 그대로 뛰어나 엔지니어가 될 사람들이 아니라
그냥 매일매일 코딩 하면서 그냥 그런거 있잖아요
뭐 예전에도 이제 뭐 자동차 뭐 공장 얘기를 들으며 는 3차 0
자동 척 그 설계하는 사람들이 있고
결과적으로는 그 설계 보러 갔고 그대로 맞춰서 만든 사람들이 있어요
그럼 그 맞춰서 만들어 온 사람들이 우리가 흔히 말하는 코드 몽키 라고
본다면 이 사람들은 어떻게 설계를 안 한다고 본다면 그런 규격을 줘야
되는 것은 맞을 수도 있다고 생각을 해요
제가 그런 직업이 지루하기 때문에 저는 그 지려고 그런 일을 하고 싶지가
않아서
다른 사람들이 제지용 할 것 같기 때문에 저는 이제 그 그 사람들 코드
몽키 를 다루고 싶지 않다 는 그 마음이 있는 것 뿐이죠
네 그게 이해는 개요 얘는 되고 마는 얘기고 코딩 상의는 그렇게 있고
그리고 그래서 코딩 스캐너를 만든다면 은 말 그대로 이유는 없는게 맞아요
이렇게 해야 되고 저렇게 하면 된다 그 그게 마치 꼭 맞아요 제가 질문을
던지면
그제서야 나중에 뭐 이렇게 설명을 할 수 있겠죠
근데 뭐
모르겠어요 그래서 아직도 이 부분에 대해서는 그 사람한테 100% 동일
못해요
그 아키텍트 강아 강의한 사람한테 근데 코딩 스레드가 적어야 한다는 건
이해를 하고 그러기 위해서 설명을 안 쓰는게 막 맡기도 한 건데
코딩 스탠드도 많아지면 누가 그걸 왜 안 쓰지 그런 생각이 들고 그럼
결과적으로는
전에 말했던 그런 규칙을 어기는 넘어 어딨나 그랬잖아요
그러면 그런 애들은 결과적으로 짤라 내야 된다는 얘기인데
과연 회사의 입장에서 당장 사람이 없는 상황에서 그 애들 다 잡아낼 수도
없고 그런 애들을 위해 코믹스를 만들면 결과적으로 언제나 규칙을 잘
지키는 애들은 점점 할일만 많아지고 웰컴 많은 힘들어지고
1,000원 1,000원 거기서 언제나 갈리는 것 같아요
코딩 스탠드 보다는 전에도 말했지만
똑같은 분야의 일을 여러 명 한테 다 바꿔 가면서 주는거 돌아가면서
주는게 되게 중요한 것 같고 서로 간에 코딩은 이 해머 터치 망하기
때문에 서로 이해가 되면 되는거고
그리고 정말 코딩 스탠다드 가 엄청 빡세 갖고 따른 그거랑 다른 코드를
이해할 수 없는 사람이 있다면 은 까 결과 어떤 사람은 그런 주장을
하거든요
이계안 일으킨다 이렇게 다른 스타일로 쓰면 은 근데 다른 스타일로
쓰더라도
익히는 코드들이 굉장히 많아요 사실은 그거를 모디 것 정도의 사람들이라면
어차피 그 사람도 프로그램을 자주 해주는 없다고 보거든요
그런거 있잖아요 제가 만약에 뭐 어느 일을 하다가 뭐 이 커피숍에 이라
다른 컵 씨를 일어서 다른 머신 을 만들더라도 내가 커피를 잘 만드는
사람 이면 다른 머신을 가정은 가져서 한다거나 못 만들지 않거든요
그러니까 그런 거에 개념이 요가 상황이 바뀌는 거 툴이 바뀌는거 유역의
바뀌는거 규칙에 바뀌는거 에 대해서 잘 적용을 하냐 마냐 내가 잘 적응할
수 있냐 마냐 그것도 굉장히 중요한 프로그램을 찾을 이거든요 뭐 엔진
여자들이 기도하고 그리고 마찬가지로 어느 회사나 프로세스가 다르기 때문에
뭐 그런 사람이 있잖아요 이제
한 회사에서 굳이 있을 필요 없고 여러 회사가 면서 크게 프로젝트별로 과
맞춰주고 가는 사람들 그런 사람들 말 그대로 여러 가지 돌아 다녀야 돼요
그런데 가장 돈 많이 받는 엔지니어 기도하고 사실은 그런 사람들은
결과적으론 그런 새로운 환경에서 보고 적응하고 빨리 이해하고 그걸 이
해서 새로운 걸 만들어내는 그런게 되게 빠른 사람들이에요 어찌 보면은
똑똑한 사람이 기도하고 이해력 빠르고 뭐 그런 사람들 일 잘하는 사람들이
줘
또
그런 사람들이 라면은 그런 주장을 하지 않을 거 같아요 그냥 제가 볼때는
둘중에 아주 이제 프로세스의 좋아하는 사람들은
아 말 그대로
뭐라 그럴까 자기가 실력이 없어서 프로세스 타령만 한 사람 그런 상도
많이 봤고요 아니면 정말 자기가 가진 그런 직원들이
너무나 형편이 없어서 프로세스로 확실히 잡았고 돌리지 않는 이상은 절대
능률이 안 나오는 상황에서 프로스 돌리는 사람
근데 이제
에 그런 그런 사람도 있어요 근데 이제 만약에 새로운 회사에 들어와서
처음 들어왔어 들어 전에 프로세스 오늘 하면서 여긴 프로세스가 개판이
그자가 이런 못한다고 말하는
시니어들이 있다면 그건 보통 신뢰가 없는 사람들이 그런 사람 들으니까
실력 있는 시니어 면 어떤 프로세스가 적응을 한 다음에 그걸 다 이해하고
나서고 치거든요
뭐 뭐 얘기가 했는데 꼭 그냥 제가 들은 생각 그리고 제가 들은 이야기
코드 스템 카드에 대해서 그리고 저도 정립이 안된 얘기 때문에 이렇게
던져보고
사람들이 뭐라고 하니 좀 보고 싶어서 한 것도 있어요 그래서 언제나 말
말도 많고 탈도 많은 코딩 스탠다드 음 또 얘기 했네요
예 뽑혔습니다
