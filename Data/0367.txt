예 안녕하세요 포프 입니다 또 계속되는 코딩 스탠다드 이야기에요
뭐 이렇게 코딩 스탠다드 이야기를 많이 아니야
음 제가 요거 낮게 c+ 뿔을 가리키고 있기 때문에
c 풀 뿔은 한 80% 는 쓰지 말아야 하는 언어 기능들이 되게 많잖아요
그리고 되게 c 아고 비슷한 것 중첩되는 것들도 있고 그래서 그런
부분에서
아 이거는 업계에서는 요즘 코딩 스탠다드를 이렇게 써 갖고 좀 더
안전하게 쓰려고 한다 라는 걸 알 키울 수 밖에 없어요
지프 그 영원한 위험한 언어이기 때문에 그래서 그거를 정리하다가 계속
주제가 나오게 돼 만드는 거야
오늘은 c 풀 에 한정된 얘기죠
당연히 스트레이트와 클래스의 차이
아 모 여태까지 코딩 스탠다드 비디오 보신분들은 알겠지만 제가 쓰는 코딩
스탠다드 가 이제 공개돼 있어요 그래서 그 그린 그를 여태까지 걸어
쓰니까 오늘도 걸어야지
걸께요 뭐지 # 코딩 텐데도 같이 걸 점호 필요는 없지만 이 비디오에서
스튜어트와 클래스 차이가 뭐냐 일단 씨를 하신 분들은 스트럭 트가 문제는
아실 거에요 그쵸
스트럭 트가 스트럭쳐 약자인데 아 데이터 멤버들을 오밀조밀하게 뭐 하는
거죠
인 태조 1 한번 꼭 있기보다 나인 태조 딛고 풀로 또 있고 캐릭터
어레이 도 있을 거야 그럼 이 모든걸 모아서 스트럭 태안에 곧게 박아두고
스트럭 틀을 즉 공익의 변수 하나인 것처럼 변수 져 사실
패스에 가면서 아닌 포인터로 패스에 가면서 거기서 감로 코가 빼고 그니까
오피 개념에서
메써드 빼고 멤버 함수 그거 빼고 그 순수하게 데이터만 있는 그런 교우가
구조체 스트럭처 져 스튜어트 그러고
아 당연히 씨는 op 의 개념이 없었기 때문에 여기에 뭐 액세스
모디파이어 가 없죠
모두가 다 퍼블릭 이에요 트로트가 있으면 접근할 수 있다
그게 시작이죠
그럼 클래스 는 뭐냐 뭐 오피 언어의 수는 클래스 있잖아요
그냥 뭐 스트럭 쓰 이제 멤버변수 있고 그 멤버변수 에서 어떤것은 퍼블릭
으로 볼 수도 있고
어떤건 퍼블릭 으로 안 볼 수도 있고 그리고 거기다 애써도 올려 놓은거
그렇게 생각한 맞죠
재밌는 게 뭐냐면 제가 이제 강의를 하면서 되게
강조를 하는건데
야 그러면 스트록 토하고 클래스가 있는데 과연 컴퓨터가 뭐 신까지 가면은
그 어셈블리 컴파일하고 뭐 기계어 컴파일하면
야 과연 컴퓨터 한테는 이 둘의 차이가 있을까 라는 걸 물어봐요
새가 있을까요
쭈물 드려야지 대답하 실 수 있게
여기서 차이가 있다고 말씀 하신 분들은 들렸어요
제가 없어요 일단 모씨가 완벽히 기계랑 일대의 매칭을 하는 언어 나이지만
되게 가까워 중에 하나에요 사실을
그러면 씨의 존재하지 않는건 은 기계의 존재하지 않는다고 보시면 맞아요
그렇죠 그래서 씨의 존재하지 않았는데 cf 폰에서 클래스가 생겼어
그럼 클래스 는 존재하지 않는 거에요 기계 쪽에서
그럼 결과적으론 스트레이트가 있고 클래스들이 비슷하니까 기계가 볼 때도
스트랩 터 클래스를 되게 비슷하게 처리할 수 밖에 없어요
특히 특히 멤버 변수에 관해서는
그러면 아 실제 시프 에서 스톱 터 클래스 쓸때도
아 그럼 제안이 있다면 그것은 컴파일러가 제약하는 거죠
컴파일 도중에 야 이거는 잘못했어 이러면 안돼 컴파일 도 안 할 거야
이런식으로 실행 중에 생기는 문제가 아니라
그런데 재미있는것은 씹을 뿔에서 스트럭 트에
음 배 배가 다 알 수 있어요 아 멤버를 프라이빗 으로 바꿀 수도 있고
거기에 함수를 추가할 수도 있고 거의 클래스 랑 비슷해요
물론 기본 동작은 약간 달라지는 게 있어요 뭐 그것까지 굳이 말하지 않을
거고
까 기본 억세스 모디파이어 가 조금 달라요
말하자 말하자 클래스에서는 앞에 퍼블릭 프라이빗 이런거 않으면 디폴트로
프라이 비시 에요
스트럭 트는 퍼블릭 프라이빗 이런거 안 되면 디폴트로 퍼블릭 이에요
근데 요즘 쓰는 코딩 스타들은 대부분
명시적으로 쓰라고 그러죠 즉 클래스 에서 프라이드 시 일지라도
아 실제 프라이빗 콜론 써주고 그 밑에 멤버변수 박아라
요즘은 그런 식으로 많이 코딩 쓴다 가고 있기 때문에 정말 스트럭 틀을
클래스 처럼 쓰는 사람도 많고 클래스를 스트럭 처럼 쓰는 사람도 말야 그
결과적으로는
컴파일러가 체크하는 게 조금 다를 뿐이지
내부적으로 거의 똑같다고 하던 왔거든요 뭐 이제 약간의 자리 찾아 락의
다른건 있어요 근데 뭐 그 그렇게 중요한 건 아니에요
그런 괄 어디다 클래스를 쓰고 어이 다 스튜어트를 써야 되냐
이런 질문이 나올 수 밖에 없어요
그러면
이거는 코딩 스나 도로 해결한 문제예요
간단하게 룬을 말해주면 은
오브젝트를 만들고 함수를 추가할 때 그러니까 멤버변수 줘 아니 멤버 함수
또 2 같단 좋을꺼 같은데 메써드 라고도 하죠 멤버 함수를 추가할 때는
이제 당연히 클래스를 써야 된다
스트럭 저는
굅 둘째 라고 해도 둘째 스트럭처 는 c 스타일의 스트럭처 에 많습니다
그니까 한마디로 뭐냐면 플레인 올드 데이터 라고 하거든요
아무것도 없고 컨스트럭터 도 없고 디스트릭트 도 없고 행동 접하게 자요
함수 아무것도 없고 그냥 말그대로
데이터와 딱 모아 놓은 것만 스트럭 들어 하자 왜냐면 그 데이터를 패스
할 일이 있어요
순수하게 데이터만 있는 경우도 있기 때문에
왜 그래야만 남들이 코드 볼때가 안에 깔린 다는 거죠
특히 그 아 제가 말했던 플레이 올드 데이터의 장점은 뭐냐
어 그 어싸인먼트 할 때 있잖아요 그러니까 스트럭처 를 가지고 포인터
말고 진짜 스트럭처 오브젝트 다른 스트럭처 오브젝트에 어서 사인을 할 때
오퍼레이터 어싸인먼트 오퍼레이터가 대입 오퍼레이터가
대비 어서 앉아 줘 대입 연산자가 존재하지 않는 경우 있잖아요 그럼
기본적으로 얘를 거의 멤 카피 하듯이 카 필요해요
그냥 똑같이 있는 그 얜 아가씨 바이트 보이가 c 바이트 였다면 씨바
이틀은 약 같다 복사는 느낌으로 거의 해요 그게 아 플레이 너 데이터에
장점이죠 그냥 대인 만 해도 문제가 없다 왜냐하면 내부적으로 다이나믹하게
메모리 알고 계셨 된 것도 없고
아 그 오브젝트 r 에서 메모리를 아 지워줄 것도 없으니까 파괴 중에
그러면은 스트럭 틀을 보는 순간 모든 스트럭 트는 그냥 어싸인먼트 해도
상관이 없구나 라는걸 느낄 수가 있는 거죠
근데 이제 클래스가 나왔으며 는
아크 ls 는 당연히 이제 뭐라 그럴까
컨스트럭터 가 디저트도 있고 그리고 메모리 알로켄 내부적으로 생기기
때문에 그냥 기본적으로 대입을 하는걸로 안 된다
그러면 클래스를 만들 때는 내부적으로 외모 레알로 개선이 있을 때 그때는
이 제어 사이먼 오퍼레이터 만들어주고 카피 컷 적도 만들어주고
그래야 한다는 걸 알 수가 있는 거죠 그래서 그냥 스트럭 측면은 무조건
순수한 데이터라고 코딩 스탠다드를 좀 강요하다 보면은
나중에 코드를 짤 때 아 이게 메모리 것에 지 않나 라는 것을 고민할
이유가 적어진다는 거예요 그래서 어찌보면 은 제가 볼때는 그냥 씹 뿔
뿔을 처음 만들때 스트럭 트가 이렇게 꼴이 되도록 맞는 것 자체가 큰
실수 라고 보는데 뭐 이유가 있으니 있죠
제가 이 건데도 까먹을 수도 있고 현재 그 이유가 존재하는
부분을 제대로 쓰고 있는게 없다고 저는 생각을 하기 때문에 업계에서도
아 그냥 코딩 스탠드에서 스트럭 터는 변수가 요 함수가 없는것 그냥
순수하게 데이터만 있고 모두가 퍼블릭 인 것 그리고
뭐라 클래스 는 이제 다 아 아 존재하는 것
함수 까지 그리고 프라이빗 퍼블릭 멤버 탑이 포블리 멤버가 있다는 자체가
컨텐츠가 전체 해야되고
아 뭐
함수가 존재해야 되고 멤버 함수가 얘기잖아요
그래서 그렇게 생각을 하고 그렇게 써 가는게 좋을것 같아요
이거를 아 강요를 하는 회사를 생각보다 많이 보지는 못했어요
최근 들어서 이제 비슷하게 하는 좀 굉장히 큰 기업이 그렇게 하는 걸
봤고 그 전에 제가 예전에 있던
모회사 들에서는 이거를 이렇게 까탈스럽게 강요하는 경우는 보지는 못했어요
그래서 이게 정말 어깨 전체에 통용되는 코딩 스텐 닥사 라고 말할 순
없지만 이렇게 코드를 짠다고 해서 누가 딴지 걸 사람은 절대 없을 것
같고
그가 남들보다 좀더 까탈스럽게 짜는 거죠 어찌 보면은
그 제가 볼때는 업계의 한 20% 정도는 이정도 스테미너 쓰고 있다고
생각을 하고 으
계산 20% 만 쓰는 스탠다드 지만 굉장히 좋은 아이디어 기 때문에
써 보도록 하세요 라는 거에서 스트럭 터와 클래스를 어떻게 쓰는게
좋은가를 그냥 말씀을 드렸어요
정리하면 디저트는 순수 돼있다 언제나 w
그리고 아 그리고 스튜어트가 언제나 퍼블릭 이라고 하며 는 스트럭 때
퍼블릭 것을 이유도 없어요
스트럭 틀은 보인 순간에는 버블링 거야 클래스를 만들 때만 프라이 프로
특히 도법을 이런거 신경 써 이라는거
그래서 클래스 는 말 그대로 내부 함수 입고 내부 멤버 있을 때
그런데 쓰는게 이제 클래스 이렇게 정리하면 될 것 같아요
그럼 오늘도 이제 즐거운 포프 tv 님아 극구 끝내고 예 즐거우셨으면
구독 버튼을 누르시면 됩니다
구독 국어 락이
포 폈습니다
