제가 전에 AI(Art Institute) 대학에서 학생들에게 게임 프로그래밍을 가르쳤었거든요. 

학생들이 가끔 C++ 개념을 잘 이해 못 하는 때가 있더라고요. 

제가 그때마다 학생들 보면서 한 이야기가 "아니 너네는 모국어(mother tongue)가 영어인데 C의 기본적인 개념을 이해 못 하냐?"라고 되게 야단을 친 적들이 있어요. 

사실 C언어뿐만이 아니라 프로그래밍 언어 자체가 다 영어를 기반으로 만들어진 언어잖아요? 

그래서 영어의 뉘앙스만 알면 대충 프로그래밍의 개념도 이해가 되더라고요. 

저도 프로그래밍을 어렸을 때 한국에서 독학을 했지만 그때는 영어 쥐뿔도 몰랐죠. 

그래서 그냥 '이건 이건가 보다'라고... 예를 들어보면 포인터라는 단어가 있잖아요? 

포인터라는 거하고 포인터의 개념을 쉽게 연결을 시키지 못했었어요. 

그렇게 어떻게든 외우려고 '포인터는 이거구나' 이러고... 

근데 영어를 이해를 하면은 이게 좀 더 이해가 쉽더라고요. 

이건 제가 나중에 캐나다 와서 느낀 거였는데 일단 포인터(Pointer)라는 단어가 Point에서 나온 단어거든요. 

'뭘 가리킨다', '포인트 한다' 이런 거 있잖아요? '가리킨다'는 의미예요. 

포인터는 말 그대로 '가리키는 놈' 이게 전부거든요. 

그거를 이제 C++ 콘셉트로 생각해보면 결국에는 어떤 내용을 컴퓨터의 메모리에 담아주는 거예요. 

메모리는 말 그대로 그냥 '주소가 0~n까지 있다'... 이렇게 보는 거죠. 

그러면 메모리가 있는데 '메모리의 어떤 위치에 숫자 0을 담아두겠다'. 

그러면 그 위치에 0을 담아둔 거잖아요? 

나중에 이 0을 구해 올 때 '0이 메모리 위치 어디에 있냐?'를 알아야 되는 거잖아요? 

그러면 그 메모리 위치를 가리키는 놈이 포인터거든요. 

그래서 그렇게 개념을 쉽게 잡으면 포인터가 정말 이해가 쉬워져요. 

근데 언어를 이해 못 하니까 그냥 암기해서 이해하려고 노력만 했던 것 같아요. 

근데 나중에 제가 외국어 패치가 돼서 영어를 좀 잘하게 되고 보니까

진짜 '영어를 좀 잘하면 프로그래밍의 개념들을 정말 쉽게 이해할 수 있구나'를 깨닫게 되더라고요. 

반복문(for, while)도 그런 거 같고, 조건문(if) 같은 거는 워낙 간단한 거니까 다들 아실 테고.. 

그래서 포인터는 말 그대로 내가 어디를 가리키는 거다. 

그게 메모리를 가리키는 건데 그 메모리에는 내가 찾고자 하는 값이 있다. 

이 정도로만 이해하면 포인터는 쉬워져요.
