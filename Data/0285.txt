다들 면접을 많이 보잖아요 회사 들어갈 때 처음 만져보고 기술면접 많이
보죠 있는
4기 수면 점이
대부분 뭐 기술 하지만 일반 면접도 그렇죠 그냥 사람들이 그렇게 생각을
많이 해요
회사에서 나를 채용하기 위해 나를 평가 그의 보는 왼쪽이다
근데 이거는 솔직히 어떻게 보면은
제가 들어갈 회사를 미리 고를 때
판단하는 먼저 에 그 모임 이기도 해요 그래서 뭐 당연히 처음에 학교를
나와서 어느 회사에서 취직을 해야 될 경우에는 그게 안 보이겠지만
이미 내가 회사를 다니고 있는 상황에서 지금 회사 가 좀 맘에 안 들거나
아니면 지금 회사에서 이제 따른 회사를 조금 경 하얀 내 커리어에 도움이
되게 딱 되겠다 생각을 하면은
다른데 면접을 보기도 하잖아요 아니면 그게 아니라면 놀고 있는 데도 아
이제 다시 이런 옛날 같은 회사 가기 싫어 그럼 좀 더 잘 콜나고
싶잖아요
그러면 그 회사에 대해서 당연히 제가 물어보면 은 거기 면접 여는 사람들
한테
당연히 다 좋은 얘기만 해요 누가 우리 회사가 야근을 뭐 하루에 50시간
c 케
불안하니까 그런 얘기를 하겠어요 그래서 그런것은 중요하지 않아요 뭐 우리
해서는 컬쳐 가졌고 똑똑한 사람 하고 이런 일 할 수 있고 3d 너무
똑똑하다 다 브라 해요
제가 어느 회사를 가봤고 정말 아주 훌륭한 암살 가봤지만
뭐 평균적으로 조금 나을 수도 있는데 정말 정말 탈렌트 그가 2
탈렌트 한 게 굉장히 뛰어난 기술 기재 아니라 뭘까 능력을 가진 사람들
의미 하거든요
그 정도의 살제 최고의 탤런트 를 가지며 나는 본 적이 아직도 없어요
그래서 그거는 그냥 광고 음 9
그리고 무슨 우리는 모회사는 뭐 직원들을 생각한다
음 광고물 거에요 어차피 회사에서 그런 이유는
저를 두기 위해서 고 그러면 이제 저를 두기 위해서는 크게 정장 모를 잘
해줄 수도 있지만 아니면 광고만 할 수도 있어요 그래서 보통 그렇게
열심히 떠드는 회사들 중에 그렇게 훌륭한 것을 못 받고
그리고 정말 훌륭한 회사라면 거다 들지가 않을 거에요 사실은
그래서 그런거는 싸움이 없다고 말씀드리고
결과적으로 그 프로그램으로써 내가 이 회사에 정말 이라고 시니아 라는것은
모르겠어요 사람마다 다를 수 있는데 저는 일이 재미 있어야 돼요 그 일이
재미 있어야 되고
제가 일하는 데 뭐라 그럴까
발목을 잡는 하되 좀 적었으면 해요 그러니까 각자 자기 당 일은 제
적당히 할 수 있으면서 서로 도와줄 수 있는 사이 필요한 거지
자비 뻔 아무것도 못하면서 발목만 잡는 애들도 있거든요 그런 애들이 많은
회사도 있고
그런거 싫어요 그리고 뭐라 그럴까
서로
자기 할 일을 하면서도 존중이 되잖아요
그런 이렇게 존경 하면서 동료로서 근거할 수 있는데 걸까
혼자 일할 내 면회를 안 들어가죠
여러 명의 사람들이 같이 돼서 뭔가를 해야 되니까 회사를 하는거고
그거 만큼 그 회사에서 어느정도 팀원끼리 의
뭐라 그럴까 음
를 치고 받고 싸우는 관계는 적으면 좋은 거에요 그래서 이제 보통 전에
비디오 한번 만들었듯이
무슨 거만한 개발자로 만족이 있고 겸손한 개발자를 만든 적이 있어요
그래서
거만한 개발자의 산 얘기는 자신을 가지고 자기를 잘 셀링 을 해라 3일
스피치를 잘 해라 보였고
겸손한 개발자는 내가 틀릴 수 없다 라고 생각하는 개발자는 그 순간에
이미 좋은 개발자가 아니라고 얘기를 했어요 저는 훌륭한 개발자도 틀리는
원제 나갔고
그리고 그런 개발자 일수록 자기가 어떤 사람인지 알고 실수를 만들 수
있다는 것도 아니기 때문에 그 만큼 어느 정도 겸손하고
주변 사람들하고 잘 이야기하고 뭐라 그럴까
음 약간 내 코드에 약간 뭐랄까 어떤 이게 이렇게 하면 나아지지 아니라는
그런 건설적인 비평을 했을 때 서로 토론할 수 있고 이런 것들
그런게 되게 중요하거든요 그래서 저는 면접을 볼 때
그것도 기술 면접 볼 때
그 문제가 나오는걸로 그거를 판단을 해요
그리고 우
뭐라 그럴까 예전에 한번 때 있으 북의 참 상에 내기 전에 페이스북 에서
연락이 와서 한번 면접을 본 적도 있어요
근데 제가 결과적으로 1차 면접 구두 캐주얼 면 적 이었는데 1차 부도
통과하고
2채널 좀 보자고 할 때 제가 페이스북에서 이런 사람일 안하겠다고 관둔
이유도 사실은 면 전문지 때문이었어요
제가 외면적 를 중요시 한다면
회사 따라 면접 문제가 굉장히 다양해요 그리고 제가 모든 회사인 뭐랄까
면접을 봐도
음
전부 다 듣지 못했 그러니까 그 회담 문제를 봤을때 제가 전혀 신경이
않습니까 전혀 생각도 못했던 문제도 있고 그러면 이거는 왜 많아
프로그래머라면 풀어야 될 문제라고 믿는 것 문제의 가치도 많이 다른것
같아요
해서 제가 왜 이런 이야기를 하냐면 은 솔직히 왠만한 프로그램 면접을 볼
때 저들은 정말 들어갔지만
몇 가지 문제와 물어보면 그 사람이 과연
기초가 잘 되어 인내가 보여요 그 모이게 c 를 쓰는
뭐 회사의 c 로 테스트 하면 되고 c 섀도 쓰는 회사 면 시선으로
테스트 하면 되요
뭐 잡으면 잡아 해도 되고 저도 이제 해서 따라 여러가지 언어로 먼저
봤는데
결과적으로 만지면서 나오는 문제는 씨가 아닌 이상은 c 에는 포인터가
들어가기 때문에 그 외에는 대부분 다 비슷한 문제를 내게 돼 있어요
왜냐하면
기본기를 확인하고 싶거든요 그러면 기본기 라는게 말 그대로 이 코드를 짜
쓸 때 이 코드가 음 몇가지가 첫번째 이 코드가 과연 하드웨어에서 어떻게
돌아가는지 순서대로 논리적으로 생각이 가능한 사람인가 가 있고 두 번째가
기본적인 알고리즘이 있어요 뭐
흔히들 많이 쓰는 알고 리즈 그 알고리즘에서 얘기하는 물론 음 뭐라
그럴까
베네피트 이 덕들이 있거든요 뭐 해쉬 를 쓰면 이게 o1 이라던가
이런거를 봤을 때 이 사람이 게 왜 on 인지를 알고 있냐 이런걸
테스트는 문제들이 다 있어요 그리고 그런게 중심이 중 저 되면은
나머지 실제 소프트웨어 엔지니어 왼쪽에 뭐 대부분의 우리 저희는
소프트웨어 엔지니어링 업계 해서 있는 대부분의 문제는 그거에 기반에서
쌓아올린 거거든요
그래서 그런 코 아이디어를 아느냐 를 솔직히 굉장히 중요하게 여기는 게
기술면접 이에요
근데 그때 회사가 좋지 않은 회사는
문제를 낼 때 이런 류의 문제만 이에요 일단은
교체하는 회사가 제가 뭐라 가 뭐냐 라고 보면은 정말 괜찮은 개발자도
뽑고
음 좀 좀 쭉정이 같은데 많이 본 애들 그러니까 정말 기술로 뽑는게
아니라 무늬로 뽐낼 때 아니면은 회사 8조 자체가
이렇게 정말 제대로 일하고 조용히 제대로 일하고 서로 협력을 잘하는
애들을 뽑는게 아니라 서로 그냥 나 되면서 잘난 척하면서 나무 까기 바쁜
그런 애들을 뽑는 회사 왜냐하면 은
이제 그 제가 말한 2개가 전부다 공통점이 있어요
세상에 사기를 치는 사람들은 처음에는 잘 안잡혀요
사기를 치고도 진짜 같거든 그니까 4개 칠 수 있는거고 그런 사기를 치는
사람들이 이 소프트웨어 주세요 쪽으로 면은 그냥 기술 마음 이름만 하려고
서버 서서 봤어 봤어 이런건 막 얘기하는 살아
그리고 두번째가 그 학교에서 보면 교과서에 책에 보면 이상한 거 있잖아요
뭐 알고 린 책이라고 보면 정말 우리는 죽어도 안 쓸 법한 이런 이런
알고리즘 있는거 그거 남 들어보고 아 이런 게 있어도 넘어가고 까
먹는건데 혼자 열심히 기억한다 며 애들하고 뭐 토론하기 시작해서 이런거
하루 모르지
졸라도 어떻게 이런 애들 영어로는 왜 스마트 s 라고 하거든요 그래서
그런 게 둘이요 근데 그게 이제 면접을 볼때는
얘를 처음에 딱 보고 나서 이름만 멋진 얘기하며 는 진짜 뭐 같거든
그거에 속아서 넘어가 채용한 회사들이 있어요
대부분 그런 면접관이 들어오는 회사들은 그런 애들을 점점 많이 채용을
하게 되고 그만큼 걔 실력 없어 나가거나 다른 애들하고 2차도 나가거나
된 따라 에 대해 나가거나
제일 중요한 것은 다른 일이나 가는 거죠 사실 짜증나서
정말 괜찮은 애들이 그런 문화가 반복이 되면서 회사가 귀찮아 지거든요
그래서
뭐 그런 문제를 내는 회사가 있다면 솔직히 좀 이렇게 그냥
딸은 대로 좀더 보시라고 하고 싶어요 정말 그 회사가 필요한게 아니면 그
주의해야 될 그런 것들이
첫 번째가 그런 기본적인 프로그래밍 실력이 아니라 이 언어를 써 봤냐
2 뭐 뭐랄까 라이브러리를 써서 봤냐
이런거 되게 목매는 사람도 있죠 그거를 하는 행사하겠다는
저는 무조건 체 해요 저는 실제로 웹 회사 들어갈 때도 싶어 폴로
들어갔고 c 샵 을 쓰는 회사에서
구르고 제가 채용을 할 때도 언제나 그랬어요 그건 제 내고
두번째는 이건 특히 좀 알고리즘 문제 나 이런거 같은건데
정말 절대 쓰지 않는 깐 절대 us 했을 것 같지 않는 그런 알고리즘
문제는 묻는 해야 되요 그러니까 뭐
제가 요즘 들어서 많이 하는 얘기 중에 하나가
자료구조 조금 많이 쓸 일이 많잖아요 그러면 자료 구조로 물어볼 내용
보통 물어보는게 어레이는 당연히 물어보고 거기다 몬 링크드 리스트 라던가
제일 중요한게 해쉬 매 아니면 딕셔너리 라고 아저씨 샵에서는
그걸 많이 물어봐요 뭐 q 스택 또 물어보고 근데 가끔 마다
절대 us 했을 것 같지 않은데 트리를 모르고는 회사들이 있어요 그러니까
뭐 트리도 이제 뭐
뭐랄까 쏘티 솔티 니나 그 아니면 이제 오더 드 리스트 있잖아요 아까
처음부터 이제 언제나 그 순서를 정열을 잘 해 놓는 그런 리스트 개념을
이해하고
구르고 이제 요 바이너리 트리 서치 할 때 이런 데선 업계 도움이 되는
아이디어 드는 걸 이해할 때는 그저 뭐 트리에서 2분들이 해서 이제 뭐
이게 왜 5로 그앤 인지 이런거 를 설치할 때
그런거에 개념에서 트림을 쭉 말이 되는데 그게 아니라 이제 그 저희
알고리즘 이제 코스다 보면은 알고리즘 컴플렉스 t 이런것에 그래프 이오리
같은거 하면서 이제 트리를 많이 다르거든요
근데 그거를 쓰는 할 수도 있어요
4 그걸 안 쓸 것 같은 회사에서 굳이 트리 문제를 열심히 물어보는
자들이 있어 좀 그런 문제로 볼 때마다
얘 내가 과연 이 문제로 외 물어볼까 신경을 많이 써요
왜냐하면 이건 그냥 흔히들 많이 썼으니까 그 보람은 쉬운 문제로 아니면은
이게 뭐 모든것을 까 굉장히 어려운 문제 중에 하나가 될 수 있으니까
트리를 열심히 공부하지 않으면
근데 아무리 가도 제가 실제로 만약에 정말 잘하는 프로그래머 드 제가
회사에서 일하던 애들한테
이런 좀 미묘하고 복잡한 트리 문제 그래프 문제로 물어봤을 때 과연 이걸
제대로 풀 수 있는 애들이 얼마나 있을까 생각해 줄 정도의 문제 남쪽의
있어요
그래서 재미있는 게 뭐냐면
이런 문제를 푸는 애들은 또 재미있는게
그냥 면접을 위해 열심히 공부하는 애들 그런데 또 이런 문제 절 저는
먼저 위의 공부하고 온 애들 별로 안 좋아하거든요
원래 실력을 뽑고 싶지 그래서 오히려 저희가 뽑으려고 하는 제가 바라보는
올바른 프로그래머 상 보다는
아까 말했던 스마트 s 쪽에 가까운 레드를 이렇게 조장하는 그런 문제에
더 가깝다고 보거든요
그래서 그런 문제를 내는 회사를 제가 다녀 봤고
그리고 그런 회사일 수록 오히려 애들이 이래 뭐랄까 업무 능력이 굉장히
딸리고 아 이건 책에서 이랬어 라고 말하는 스타일이 좀 많았어
해서 페이스북 문제는 그 건 아니었어 솔직히 까먹었어요
뭐 지었는지 그래서 페이스북 문제 1차를 봤을 때 이 제 1차 에서도
무슨 리쿠르트 가 저한테 그러더라구요 그래서 우리는 일어 이런 문제를
많이 보니까 이거 공부해서 5 갖고도 렇게 열쇠가
어이가 없어 같고 그래서 공부 안 했어요 왜 면접에 공부한 뒤 생각해서
면접을 봤는데 제가 이렇게 좀 질문을 갖게 의심을 품게 하는 그런
문제들이 많이 나왔어요
거기에서 제 기억에는 제가 씨니어 그 정도로 들어가는거 였기 때문에
처음부터 굉장히 높은 사람하고 먼저 봤는데
문제나 풀었어요 제 프로그램의 문제였고 뭐 2시간여 그러나 제가 너무나
키워 간단한데
다 핑구 제가 아까 머리 긁으면서 아 이거는 이 거겠지 라고 프로 쓰니까
제가 물어본 거 같은 질문도 아니고 여기서 물어보는 이유도 솔직히 크게
없는 질문인데 그냥
이거는 뭐라 그럴까
그 무슨 그런거죠 트리비아 훨씬 몰드에 뭐 일반 걸로 생각하면 뭐 이
영화에 나왔던 여배우는 누굴까요 이런 이런 정도의 수준 아무 의미 없는
지 그렇게 쉽다는 게 아니라 그냥 정말 엔지니어의 크게 쓸 일이 아니라
그냥 분명 의 책 어딘가 어떤 어떤 책 어딘가 구석이 있을 법한 내용들
쏘 플러스 풀고 뭐 나쁘지 않게 보는 것 같아요
그래서 통과했다 2차 면접을 보자고 하는데 또 리쿠르트 똑같은 얘기를
하는 거예요 아 요번엔 도 뭐 이런 이런거 좀 공부를 더 해서 아련히
그렸고
제트 터가 차 증이 나서 이 프런트의 2매를 보내는 그랬어요
나는
일단은 너 내가 낸 문제 가 그렇게 올바른 프로그램을 뽑는 그런 문제에서
아니라고 생각을 하고 두 번째가
니가 정말 이렇게 나눠서 모르 공부해서 이런 점을 보라고 얘기 할 정도면
많은 사람들이 그렇게 본다는 건데 난 그렇게 공부해서 면접 공부를 해서
시험봐서 들어오 와야 되는 애들 정도 아 구도 일하고 싶지 않다 라고
하고
접었어요 끝에 그래서 저는 한마디로 에게 마음이 그렇다 저한테
똥을 산건데 좋게 얘기하면 이 그렇다 가 오히려 안티 아
페이스북에서 애들을 데려온 게 아니라 애들 안 되려고 하는 것 같은
느낌인데
저는 그랬어요 그래서 제가 말하고 싶은건 은
금연 좀 문제가
자기 실력 일반적으로 회사에서 쓰는 실력은 내가 정말 회사 건물 할 때
필요한 실력을 벗어나는 문제는 말이 안 된다고 보거든요
그럴꺼면 그냥 면접 그 기술 진보 심하고 토플 문제 보고 그걸 그냥
취업하고 말좀 상관없잖아
영어 잘하면 개발도 잘하겠지 게바라 이게 이 개념이 잘 아니면 여태까지
본 책을 쓰셔서 책명 달아 취업을 지키 던가
그래서 그럼 면적도 음
끅
그럼 면접으로 일단 회사를 판단할 수가 있다는 것을 기억해 줬으면
좋겠어요 아니면은 회사를 여러분은 서로 아닌 사람들이면
면접 문제 패턴이 다르잖아 에서 회사마다
그러면 그 패턴을 이렇게 분류 해봐 내가 좋았던 에서나 봤던 회사가
있잖아요 그럼 지금 새로 보는
면접보는 회사의 문제는 어느 저야 아까미 야 그거 따라 좋거나 보내다가
판가름이 될 수도 있어요
생각보다 음 면접 문제 내는 사람들도 뜰이 뛰어난 프로그래머가 아닌
경우도 많구요
그 사람들의 열심히 일하고 있을 뿐이지 근데
본인의 성장을 위해서는 확실히 좀 뭐라 그럴까
평균적으로 그나마 좀 괜찮은 프로그래머 많은데 가 훨씬 한 것 같아요
그래서 이것도 어제 오면은 제가 회사를 여러군데 돌아다니면서 면접을 보고
그리고 안가고 가고 같다 구해야 하고 안 갔다 후회하고
뭐 같은 문제가 없나 없는거 같애
그러 곧 그런 경험과 제가 면접관을 들어가서 면접을 여러번 바 본 결과
음
으 내린 결정입니다 그래서
면접을 볼 때 반드시 회사가 나를 판단하는 것이 아니냐 내가 회사를
판단하는 기준이 될 수도 있도록 생각하면 좋겠어요
음 아까 말했듯이 무슨 회사에서 이건 어떰 니까 라는 직접적인 질문했을
때 그것을 진술 되게 솔직하게 말해 주는 왼쪽 가는 거 이었고
그보다는 그 나오 실제 객관적으로 나와있는 패턴에서 패턴 무서 쾌하고
멋있는 얘기 구나 거기서 회사를 판단할 수 있다는 것을
으 말한 4tb 였네요 뽑혔습니다
