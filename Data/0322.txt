얘 안녕하세요 포프 입니다 오늘은 크라우드 쪽에 대해서 잠깐 또 얘기해
볼게요
얘기를 어떻게 시작했고 어떤 주제를 이제 메인 아이디어 라고 얘기할 지
모르겠는데 일단 메인 아이디어를 굳이 이제 잠깐 말씀을 드리면 말씀드려야
이관시 한번 끝일 거 아니에요
으 메인 아이디어를 먼저 말씀드리면
그 개발 환경은 여러 개가 있잖아요 그 저희 가지 웹 개발할때
로컬에서 테스트 환경이 있고 서버에 올려서 테스트 환경이 있고 서브의
오래서 거의 실제 환경 처럼 이제 만들어 놓고 테스트 하는 환경이 있고
진짜 라이브 서버가 있고 그런 식으로 이제 서버를 하는 환경이 여러 개가
있어야 하거든요
뭐 게임 쪽에서 이랬나 씹 부품을 개발할 때 생각하면 디버그 윌리스
빌드가 있듯이
그런 식으로 뭐 최소 2개의 아니면 많으면 세계 내게 5 6개까지 되는
그런 환경이 필요가 해요
그래서 저는 예전에 이제 웹 회사를 다닐 때 그런 환경이 제대로 없는
회사가
뭐 솔직히 굉장히 많아요 뭐 대부분은 아니지만 굉장히 많아요 왜냐하면 은
그 환경을 다 유지하는 것 자체가 굉장히 오버헤드가 많은 거거든요 예를
들어서
db 1 이제 웹 서버 하나를 라이드 용을 쓰고 있다면 그거에 맞는 또
스테이징 01 만들지 웃은 테스트 0 만들지 또 개 인권 어떻게 만들
건데 개인 컴퓨터에서 없는것
이런 여러 가지 문제들이 있었어요 그래서 예전에 이제 클라우드가 크니 돌
흔히 존재하지 않을 때 흔히 많이 쓰지 않을 때 그때는 이제
굉장히 열악한 상황이었고 어떤 이상한 사람들은 서버에 직접 접속을 해서
거기서 개발한 사람도 있었죠 근데 굉장히 저는 개인적으로 위험한 c 라고
생각을 하고
그럼 이제 그러고도 이제 인터넷 반드시 연결돼 있어야 되는 이런 문제도
있고 그 뒤에 여러 가지 변화가 있었던 같아요 클라우드 도 생겨났고 이제
점점 d 스트립 밑으로 일하는 사람들에게 모토로 이라서 들어갔고
뭐 그건 귀신아 이제 머큐리얼 위해 이제 약진에 힘입어 또 있을 거고 뭐
실리콘벨리 쭉 몸값이 너무 올라가서 말이 안되는 그런 문제도 있었겠죠
어근 사람들을 제공하는 게 말이 안 되는 여러 가지 것들이 있다고 보는데
결과적으론 그 3년 전 쯤에는 그냥
이걸 목 앞쪽 개발을 하려면 방법이 * 없었던 거야 내 개인 컴퓨터에
서버를 어떻게 돌리 던가 아니면 은 이제 실제 존재하는 웹 서버 연결을
하던가 아니면 웹서버 틀어 가서 코딩을 하던가
이런 방법이 있었던 것 같은데 그래서 이제 그럴 때 이제 그 때 제가
이제 웹 회사를 열심히 다니고 있을 때니까 이제 리드 개발자 하고
있다니까
저희 아키 택하고 많은 고민을 했어요 아 그러면 우리가 이걸 어떻게 만
잘 돌릴 수 있을까
근데 그 당시에 제가 이제 저쪽 어디지
지금 틀에 알로에 원래 회사였던 극복 클릭스 아 또 극복 어찌 뭔가
뽀글이 소프트웨어 것 같아요
트레일로 그쪽 회사 쪽에 대한 테드는 거는 걔네들은
무조건 윈도우 8.1 을 쓰면서 하이퍼 비를 돌린다고 들었어요 그러니까
아 가상머신이 줘 가상머신 이미지를 만들어 놓고 그게 웹서버가 됐던 db
가 됐던 자기가 그걸 개발해야 되면 자기 컴퓨터에서 가상머신 이미지를
로딩을 한 다음에 이제 개발하면서 그걸로 개발 다 끝내고 체크인 하면 은
이제 그게 해 주실지 모실 서버 로 올라가는 스테이징 석으로 올라가던
해서 테스트한다 그랬었어요
그 방법이 굉장히 솔직히 맞는 방법이 없거든요 그 당시에는
누군가가 산 이미지 않아 제대로 구워 놓으면 개발자들이 잘 컴퓨터에
다운받아 테스트해보고
다음에 이제 그 올린다 였죠 이제 그 개념 에서 이제 점점 나아진 게 아
그때 뭐 였지 다커 난 나다 코드 그런 개념으로 이제 많이 썼던 것
같아요 자기 로컬 컴퓨터에서 이렇게 하고 저렇게 한다 이런 컨테이너 그냥
아 금호 우리는 다 건 좀 더 쉽게 이제 코딩으로 할 수 있으니까
근데 다 커는 그 당시에 이제민 도수 저는 안해 줘 썼고
그쪽의 워낙 이제 뭐라고 플랫폼 종속성 가 그런 것이기 때문에 뭐 그런
문제가 있었죠 그래서
그러다가 그때는 그래도 아 우리가 이렇게 개발자 환경에서 개발자 머신에서
실제 서버 랑 되게 비슷한 경우로 개발을 하려면 우선 오늘 주제 인거
같네요
실 서버란 비스타 환경에서 개발을 할 수 있어야만 쓰실 서버에 올라갔을
때 아 서프라이즈가 적고 훨씬 뭐랄까
문제를 일찍 잡을 수 있는거죠 뭐 소프트웨어에 품질이 그래서 좋아지면
좋아지는 거고 그래서 그 고민의 제일 많이 했던 것 같아 실 서버 랑
비슷한 경우 만들어야 한다
이렇게 우리가 실제 모델의 브레인 서버 1 을 들고 와서 우리가 서버를
구축해서 이거 를 쓰든 건축
그 좀 힘든 얘기지만 그냥 오라고 벌로 최상의 방법은 아니지만
아니면 비의 미지를 구워서 하이퍼 b 에 올려서
그거를 이제 연결해 놓고 쓰는데 개인 컴퓨터에서 개인 그 회사 컴퓨터 며
내가 쓰는 퍼스널 컴퓨터에
그런 생각을 하다가 이제 클라우드가 점점 오기 시작을 했어요 그래서 이제
클라우드 쪽으로 옮기고 싶은데 그럼 적 언제나 고민은 그 거지 야 그럼
내가 클라우드 로 옮기면
클라우드 로 옮기면 그러면 내가 과연 대 로컬 컴퓨터에서 일을 할 수가
있냐
그게 가장 큰 문제였어요 그런데 그 다음에 이제 제가 aw 좀 보다가
에드워드 보다가 이런 생각을 했는데
a 쥬얼을 보면 볼수록 이게 좀 잘 되있는거 에 생각보다 가까이 제
마이크로소프트 워낙 소프트웨어 개발을 하던 회사고 원아 그걸로 크게
여태까지 몇십년을 돈을 벌어온 회사이기 때문에
소프트웨어 개발 프로세스 되게 잘 이해를 해요 그게 이제 게임 쪽에서
당연히 우리 게임 개발자의 다 아는 얘기고 저희가 이제 당연히 마 솎아
아닌 제품들을 더 많이 만들거든요 게임 쪽에서는 이쪽에서는 콘솔 이고
맛은 코스 하나밖에 없고 뭐 인도 수도 있지만 나머지 다 닌텐도 소니
이런거 있기 때문에 이제 개발자들의 공통되어 이건 다 그 거에요 마수가
역시 개발하는 제대로 한다
왜냐하면 은 개발할 수 있는 환경을 만들어 주니까
아
근데 그게 똑같은 게 웹에서도 보이는 거에요 일단 이제 애 줘 에서 제가
전에 얘기했던 것은 그거 한번 얘기했던 것 같아요 애정에서 디플로이 노트
/ 라고 있다고
제가 이제 서버 하나 올려요 서버 가 모프 다모 해주고 낙화암 이라면
예를 들어서
그럼 이게 라이브 서버 잖아요 그러면 그 똑같은 환경 안에 그 유아에서
똑같은 환경이 줘
거기 슬라이스를 여러개 만드세요 슬러지 뭐냐면 슬러시 이제 뭐 대부 아까
말했던 스테이징 뭐 테스트 이런 슬라이스 다섯 개까지 만들 수가 있어요
물론 어떤 서비스를 어떤 얼만큼 돈을 내야하는 알았지만
적당히 돈을 내면 이걸 한 서버에 5개 슬라 서 만들어 줄 수가 있어요
그러면 내가 테스트 하다가 이제 올릴때 스테이징 서버 라던가 그냥 웹
서버에서 테스트 를 떠올릴 때 테스트 슬러 3 올려요
그리고 테스트를 다 한 다음에 다음에 스테이지에 또 올리죠 다른것은
스테이지로 테스트 한 다음에 이 두 슬라 슬 교체를 알 수가 있어요
그러면 테스 페이징 에 있던 서버 자체가 프로덕션 나가면서 그 뭐라
그럴까
이제 테스트 안그럼 디플로이 하는 과정은 그렇게 만든 거죠 그 o 토르
수하 파는 곳도 있고 매뉴얼로 수납하는 것도 있고 그 방법 자체가 사실은
뭐 aws 도비 스터코 보면 비슷한 환경을 지원하기 네요 근데 애 주어
만큼 이렇게 간단하게 되는것도 아니고 좀 전혀 2개가 다른 이제 환경
인데 그 두개를 바꾸었을 때 이런 개념으로 보이지
모이 내부는 비슷할 거 같지만 실제 사용성 이라던가 ui ux 쪽에서 볼
때 줘 가족의 훨씬 나아요
그 첫 번째가 그거 이 두 번째는 제가 좀 지금까지 말해 오던 이제 내
개인 컴퓨터 테스트는 어떻게 할 거냐 이런 문제로 임지혜 이거든요
이것도 솔직히 애저 를 쓰면 굉장히 편해 지는 게 있어요 그게 뭐냐면
예를 들어서 애저 에서 뭐 뭐 as b 닷넷 같은 경우 아
거기에서 이제 뭐 컨택 같은걸 누려 왜 컴퓨터 있었잖아요
담배 거 같은 경우 이제 뭐 다루 따로 제이썬 파일 쓸 수 있지만
그럼 거기서 넣은 키가 있으면 그 키를 똑같이 애조 대시보드에서 눈 는
것만을 그 키가 바뀌게 할 수가 있어요
이게 뭐 아마 저의 쓰는 그냥 환경변수를 바꾸는게 아니라 실제 거기 스넵
세팅 변수가 따로 있어요 그것도 있고 또 개발할 때 이제
mssql 같은 경우 몸 알게 돼 스크랩도 그렇고 커넥션 스트링 있어야
하잖아요
그러면 그의 녹화에 커넥터 스팅이 있어요 그리고
아 마소 거 이제 비주얼 스트를 다운받으면 기본적으로 iis 서버와 아
mssql 놓고 db 같이 딸려 오기 때문에 새로 따로 깔 건 없어요 왜
비주얼스튜디오 깔고 개발하면 내 것 돌다가
에 주 올리면서 그 컨테스트 링 말 역시 그 대 15대 있어요
이 앱은 이제 이 컬렉션 스트리트는 그랬을 거다
한마디로 애즈 에 있는 db 안내 다른데 이는 포덕 센 db 를 이것을
거니까 컨테스트를 바꿔 달라 라고 그냥 대시보드에 세팅 하는 것만으로
역시 그냥 세팅이 되어 차체 컷 로 카렌 하던거 를 그냥 디플래그 올린
다음에 거기서 세팅 2개만 바꾸면 은 모든 게 되는 거에요 그럼 근데
일단 편에 쨌든 서버 나 이런걸 돌릴 수 있어요 내 컴퓨터에서
좋아요 다음 단계가 이제 lg 와 서비스를 쓸 때가 문제였어요 이
제주에서 보면 블랍 서브 블랍 스토리지 이런 게 있잖아요
뭐 알아줘 였어요 그래서 본다면 이제 뭐 sde 스토리지 나 아니면 뭐야
테이블 쪽 에 관련 된 건데 이제 그런거 할 때는 막 host k 를
쓰잖아요 그러면 이제 애 ost 글쓰면 은
아 이거 를 서브 가 연결이 안되어 있으면 연결이 안 되게 난 된 아마
이런 구매했는데
터질 거기에 보면 또 재밌는게 그 커넥션 스트링 있잖아 플라 스토리즈 에
거기에 그냥 개발자 모두 투르 라고 해주면 은 괴로 컬 스토리지를 돌아요
그냥 에뮬레이터가 있어요 블라 스토리지가 그래서 제가 시작 메뉴가 서해
주어 스토리지 블라스트 이제 블레이드 키면 을
그리고 아까 말 때 세팅을 개발자 모드 세팅을 투룸 해주며 는 그냥
그것만으로 녹화에 있는 불났어요
그래서 아 생각했던것보다
굉장히 편했어요 그냥 접속이 안되어 있어도 제 개발한다고 테스트해볼 수
있는 거예요
그리고 이제 그 다음에 써버려 테스트해 보면 되고 그래서
마소가 되게 자라는게 그거 였던거 같아요 언제나 개발환경을 확실히 잡아
준다는거
그리고 이제 뭐 개발한 경우 할 때 쓸데없이 여러개 많이 안깔려 된다는거
하나만 깔고 시작한다 되고 그럼 그 다음에 서버 올릴 때는 세팅 같은거
바꾸게 되고 쉽게 해준다는 거 그런거 였던거 같고 근데 이제 이거는 이제
조 같은 경우도 새로 나온 제품을 모두 다 이렇게 제대로 지원하지 않아요
4 처음엔 아 새로 된 새로 작품을 만들고 한 다음 꺼진 정도가 나올 때
뜻이 그런거 계속 지원하는 거에요 아 이런게 불편함이 있으니까 로컬
스토리지 만들어 줘야지
이런게 불편함 있으니까 아 뭐 뭐 이제 로컬 db 아트 같이 딸려 보내
줘야지
이런 것들을 되게 잘하고 현재 막 그 웹 짜 웹 조합이라고 있거든요
약간 뭐라 그럴까 애드웨어 펑션 이나 제습을 남다른 쪼금은 다른건데
농원이 태스크 인데 워커 것 같아요
aws 에서는 그런거 와 이제 뭐 서비스 버스를 같이 연동해 쓰려면
로컬에서 관재 쓸수 있냐
그거는 아직은 좀 안 돼 있어요 근데 뭐 서비스 버스다 사실은 프리뷰
버전이 기도하고
그래서 이제 그래서 프리뷰 라고 부르는 걸 수도 있어요 어찌보면 그래서
그냥 프리 b 라고 붙인 요거 좀 들 먹으니까
그러다가 이제 모든 개발한 갖춰지고 나면 정식버전으로 출시 라는 걸 수도
있어요
그래서 생각보다 애 주어 를 쓰면서 로 칼에서 개발한 경험을 그대로
유지하기는 되게 쉬웠어요
그래도 개발자 라면은 특히 이제 뭐라 그럴까
주먹구구식 개발자가 아니라 이제 자기
뭐랄까 꼭 저 처럼 자기 뒤를 깨끗이 치우는 개발자 라고 할까요
코드 쪽에 이렇게 뭐 얼굴 화끈거리는 코드 짝이 싫어하는 사람들
그거 그거 못하고 일찍 일찍 고치려는 사람들 그렇게 품질관리를 스스로
하는 개발자 라면은
본인 개발 환경에서 모든 게 덜 수 있는 거 되게 중요성에 여기에요
그리고 일단 아내가 이게 어떻게 될지 모르겠지만 서버를 올리고 나서 봐야
된다 라는 그걸 되게 싫어하거든요
서버에 개발한 정도 좀 더 힘들 수밖에 없고
라이브 서버에 무선 리모트 디버그 프로그램 깔아 겉에 치아는 순간 좀
cpt 문제가 있을 수도 있고 그래서 자기 개발 하면서 최대한 잡으려고
하는게 저는 훌륭한 개발자 라고 봐요
그러면 그런 사람들이 클라우드 로 옮길 때는 솔직히 말하면 제가 볼때는
aws 보다는 애주가 좀 더 맞는 것 같아요 그런데 이런 모든 툴을
제대로 쓰기 위해서는 당연히
c # 쪽이나 as b 암내 시 좀 더 유리하겠죠
왜냐면 잡아 자체나 아니면 파이썬 자체 이 정도의 되는 개발 툴이 얻고
디버깅 툴이 없는 상황에서 그게 매지컬 하게 그냥 갑자기 이 해 줘
서버에서 등장할 수 없는 거거든요
뭐 마소가 이제 갑자기 파이썬 에 꽂혀 왔고 내가 파이썬을 이제 굉장히
뛰어나지만 들어주겠다고 생각하고 만들기 갈아 엎어 주지 않는 이상은
저는 그런 일은 일어날 거야 일어나지 않을 거라고 생각해요 그래서
생각보다 굉장히 편해요
그렇게 나쁘지 않았고 그러다 내 코어가 지금 나와 있고 뜻 안에 커가
정식버전이 나왔죠 뒤 줄수도 2017 하고 지금 저희들이 검토해보고
생각을 해보고 있고 조금 씻자 보고 있는데 굉장히 깔끔하고 좋더라구요
그래서 다 내 코 얘기도 뭐 언젠가는 할지 안 할지 모르겠지만 일단 뭐
뭐 일단 예습 14:00 좀 느려서 않아요 아무래도 굉장히 큰 패키지 고
이랬는데 단내 코어는 에이스 달 메고 어느 님이 노드 js 의 성능을
이겼다는 얘기가 나올 정도로 뭐 그것도 쪽 적게 긴게 아니라 뭐 몇 백배
차이를 이었다는 얘기가 나올 정도로 굉장히 발전해 있고 뭐 근데 거야 뭐
벤치마크 벤치마크 할 때 언제는 지낼 때 유리한 하드웨어 잡아놓고
하는거지만
그리고 a s 펜의 코어를 만들면 이거는 리눅스에서 돌고 맥에서도 돌고
윈도우 세돌 잖아요 그래서 서버 올릴 때는 조치가 어떤 서버를 상관이
없거든요
그러면 저는 개인적으로
만약에 제가 리눅스 서버를 쓸 지라도 단 내에 고을에서 녹화가 디버깅 다
하고 빚을 수 드디어 로
그루브 모정 스테이징 서버를 제가 뭐 윈도 술에서 테스트 할 일은 없겠죠
로컬에서 최대한 자꾸 부담이 뉴스 올릴 것 같아요 사실
왜냐하면 저에게 슨 그 아이가 올려놓고 퍼지면 봐야지 라는 마인드 자체가
되게 좀 껄끄러워 야
아니 뭐 그렇게 올려야 되는 것 당연히 있는데
그러지 않을 방법이 있는데 그런 다는 것 자체가 좀 이해가 안 돼요
그게 개발을 할 뭐 여는 건지 그냥 코드 몽키스 하려는 거지 생각이 좀
그렇죠 그래서 오늘 얘기를 뭐 대충 요약을 하면 은
무 특히 웹 개발에서 좀 심각한 문제 같아요 자기 개발 환경에서 얼마나
많은걸 테스트할 수 있냐 가 되게 중요한 것 같아요
그리고 제가 개발 한계를 가지고 있으면 제 맘대로 막 고쳐 볼 수가
있잖아요
남 이랑 같이 공유하는 개발한 경우 못 그러니까 그러면 그것을 할 때
옛날에는 bm 방식으로 내 컴퓨터에서 가상머신을 돌리는 법이 있었지만
이제는 그게 밖에서 클라우드로 가는 상황에서 이게 과연 가능한 다른 고민
했는데 생각보다 애조 에서 제공하는 그런 2 셋이나 이런게 꽤 괜찮고
굉장히 많은거 테스팅 할 수 있다 그래서
으 이 전환을 하면서 고민하시고 있는 분들이 있다면 한번쯤은
제대로 검토 해 보시는게 좋을것 같다는 생각이 들고
뭐 앳 워 가 옛날에는 굉장히 점유율이 나왔지만 제가 최근에 제가 확인한
건 아니지만 들은 얘기로는
매주 점유율이 굉장히 많이 올라왔어요 돼요 그것도 예전에 아마 예측했던
비디오가 있으니 있는데 어떤 분이 저한테 그 예측이 많았다 고 얘기를
하더라구요 그래서
국은 10% 미만으로 떨어졌고 aws 당의장 놓고 한 40년 풀렸나
그리고 애주가 36% 정도 나왔던거 같아요 그래서 일단 뭐 규모도 커졌고
충분히 믿을 수 있는 이제 클라우드가 대하고 있지 않나 뭐 실제 만
회사가 쓰고 있고 그래서
검토를 할 때 이제 개발환경 검토도 많이 해 보시길 바래요 개발 환경을
잘 세팅하고
그만큼 시간을 절약할 수 로 개발에 들어간 시간을 절약할 수 없 서비스
빨리 나가는 거니까
음 뭐 그정도 음 오늘도 제
마소 자랑을 많이 했군요 예 뽑혔습니다
