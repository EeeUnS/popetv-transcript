여러분들은 코드 리뷰에 대해 어떻게 생각하지 멋이 겠어요
아 구두 리뷰 라고 하면 보통 이제
대규모로 여러명이 일할 때 여러 프로그래머 반드시 프로그램은 아니지만
어쨌든 뭐 여러 프로그램과 이럴때
이제 제가 프로그램을 짜고 이제 그 제가 짠 프로그램이 이제 디퍼 스토리
라는 게 이 차의 공동으로 사용하는 놓고 듯 입하
거기에 놓기 전에 다른 사람 혹은 모네 디디에 미디어를 받는 거죠 검토를
검토 봤고 이제 그 검토 받는 과정에서 과연 이 코드가 문제가 없냐 뭐
이런 씩
을 확인한 다음에 문제가 있으면 다시 고쳐서 누구 모현 게코 드리려고
하는데
으 요즘 드는 생각은 과연 코드 미 기후가 본연의 목적을 얼마나 다하고
있나 아니면 이게 쓸데 없이 어
괜히 뭐라 그러죠
쓸데없는 시간 낭비를 너무 하는게 아닌가
반드시 뭐 시간 낭비다 반드시 유용 하는 얘기가 아니라 저희가 보통 하고
있는 그 코드들이 있기 때문에 실제 낭비하는 시간 돼 있는 것 같고
어 과연 그런게 필요한가 라는 생각을 점점 많이 하게 되는 것 같아요
그래서 제가
생각을 좀 많이 해봤어요 최근에 제가 워낙 또 이렇게 뭐 뭐 규칙
복잡하다 9
이런거 별로 안 좋아하는 사람인데 그 이유가 뭐냐면
사실 많고 드라이브가 생긴 이유도 있고 모체가 예전에 한번 블로그해
썼듯이
그 코딩 스타 l 코팅 스타일이 있는 이유도 있어요
근데 코딩 스타일이
이렇게 박스 1 필요가 있냐 라는 그런 주제로 블로그를 썼거든요 그
이유가 뭐냐면
제가 그냥 모 여태까지
아 프로그래머 생활하면서 많은 동료들을 봤죠
근데 정말 그 대부분의 사람들이 사실은 그런 코딩 스탠다드 없이도
어느정도 규격화된 코드를 작성 해요
그중에서 꽃 몇몇 사람 소수의 사람만이 정말 전혀 색다르게 코딩을 할
뿐이지
근데 이제 그런 사람들이 이제 코딩을 뭐 코드 리드 도 마찬가지라고
보시면 되요 사실 어떤 의미에서는
그래서 그런 사람들이 코딩을 했는데 정말 색다르게 했다
그러나 이렇게 색다르게 하는거 막아야 되니까 코드 린 울음 아예 코딩
스탠드 대로 좀 더 색다르게 만들잖아요 좀 더 빡세게 만들어요
그러면 원래부터 잘 지키는 사람들은 더 빡세게 된것도 읽어 보고 그것에
대해 잘 따라가요
그런데 원래부터 걸 안 따라 가던 사람들은 뭐 또 어느 다른 쪽에서
그런거를
어길 만한 어제 썩이는 방법을 찾더라구요 그래서 결과적으로 보면 은 제가
언제 느낌은 규칙은 빡세 주는 빡센 길수록 실제 원래부터 규칙을 찍고
지키고 있던 사람들의 생각만 어려워지고
원래부터 규칙을 안 지키던 사람들은 여전히 어떻게 안 지킬 수 있는
방법을 찾아야 되는 그래서 결과적으로는
규칙이 이 줘야 되는 그 규칙은 있어야 되면 규칙 인 어 박스 해야 될
이유가 없더라구요 그래서 그런 생각을 하다가 개 전에 그 블록을 썼던거
고
오늘은 얘기도 빛은 얘기예요 코드 리뷰가 사실 수행하는 목적은 아까도
말씀드렸듯이
문제가 있는 코드를
집어 넣지 말자 그래서 몹시 가 서버가 생겨서
어깨 게임을 실행을 못하게 되면 따라 한데 개발 못하니까 그만큼 뭐 시간
낭비도 많고 뭐 이런게 있죠
근데 제가 아무리 봐도 코딩 리뷰를 할때 보통 세가지 중에 한 가지
현상이 일어나요
첫번째가 아까 제가 말했듯이 아 정말 코드에 문제가 있을 때 잘 잡아내서
그것을 미리 미리 방지할 수 있다
제가 코드 리뷰를 해보고 받아본 바로는 이런 효과가 발생하는 게 실제 는
뭐 한 10% 정도
그럼 나머지 이제 두 가지 따른 형태가 있어요 근데 그게 밤 반정도가
라고 보시면 되는데 첫 번째는
미디어가 코드를 검토하는 사람의
그 뭐라 그러죠
그 취향에 맞는 코드 그러니까
두지 뭐 코딩 스타일이 반드시 갖지 않아도 되는 부분인데
그냥 내 취향에는 이런 코드가 더 맞으니까 이런 취향 대로 하라
근데 솔직히 코드를 작성하는 방법이 한 가지 일만 있는 것도 아니고 코드
포맷을 하는 것 또한 가치있는 검도 있는 거 아니고 똑같은 문제를 풀 수
있는 거의 동일한 아니면 거의 차이가 없는 그런 그러니까 성능 사이 거의
차이가 없는 그런 것 여러가지가 존재하지 않아요
근데 그중에서 코드 작성 사람은 한가지를 선택 했는데 코드 led 어느
나 건 내가 주로 쓰는 방법이 아니니까 내용 보기 났다
이런식으로 하시는 분들이 향 당이 또 있어요 그게 절반정도 세요 사실 그
마지막 형태는
전혀 그런것도 않아서 코드 리디를 모든사람들의
아 뭐라 그래
내가 잘났다는 것을 보여주고 싶은 거에요 아 나는 이만큼 지식의 맞겠지
만큼 잘랐다
실제 그 사람 지식을 거기에 뭐 터치버튼 그런 식으로 봤거든
뭐 어떤 의미에 또 호 7제 코드 상에 제품 장의 장점이 없는 데도
불구하고 이 사람은 이 기회를 통해 내가 잘랐고 내가 똑똑하다는 걸
이렇게 말해주고 싶은 거죠
근데 그런게 이제 뭐 정치를 잘하는 거라고 할 수 있는데 사실
프로그래머의 효율성을 저하시키는 굉장히 큰 요소 에요
네 제가 그 여태까지 본 것 중에는 그래요 실제 40% 정도 문제가 있는
코드가 나오고 나머지 한 90% 정도 시간은 그렇게 쓸데없는 정치 하는데
서로 하거나 아 뭐 근데 취향 따라가겠다 라는거
그래서 이건 그래서 최초는 율
그 돈은 보수도 전 여름 생각이 드는게
뭐라 그러죠 맨 초이 구주 리뷰라고
그 코드를 체크하게 점에 언제나 코드 리뷰를 받아야 되는 그런 시스템은
개인적으로 좀 맘에 안 들어요
가면 갈수록 이렇게 왜냐면 그 아까 말했던 것 두가지 불후의 그런 일들이
너무 많기 때문에
그리고 실제 코드를 웬만한 프로그램 언어 코드 가 뽀 게는 경우는 별로
없구요
사실 문제있는 프로그래머가 코드를 뽑는 경우가 제일 많아요
그럼 문제 없는 프로가 많은 가끔 보게 뿐이고
근데 코드 리뷰를 하다 보면은 문제없는 프로그래머와 코드 리뷰를 받으러
오지 않아요
그러면 저도 그 꼼꼼히 간 봐요 왜냐 마이엘 원래 문제 없었으니까 보고
음 그렇구나 100분 하고 그냥 통과를 시켜 버리는 거예요
근데 문제없는 코드 문제없는 프로그래머 오면은
그것 때문에 이제 또 이제 시간을 열심히 쏘면서 더 짧다 나의 사려고
하는 거죠
또 열심히 생각해 보니까
그
반드시 하는 코드 리뷰는 업소 되는 것 같아요
오히려 그것보다는 두 가지 경우에 만 코드 리뷰를 강제적으로 해야 되는거
같아 첫번째는
새로운 직원들이 들어왔을 때 g 새로운 직원들이 들어오면은
뭐 코딩 스타일 도 조금 다를 수가 있고
그 코드 베이스를 잘 모르고 그래서 아 이렇게 뭐 어떻게 해서 일어나
처리했는데 사실은 그보다 좀 더 쉽게 할 수 있는 방법이 땄는데 있다거나
그런 것들을 보여주기 위해서
코드 리뷰는 할 필요가 있다고 봐요
뭐 한 모 3 3개월 정도 하면 되겠죠 그런 사람들
두번째는
말 그대로 그냥 코드를 집 본 웃는데 굉장히 많이 코드 페이지를 보게
먹는 살아 실제 문제가 여러분이 따고
증명된 사람은 아까 말씀드린 것처럼 3개월 정도 1시적으로 코드 리뷰를
개별적으로 하는 그런 거 없이 난것 같아요 물론 다른 사람들 입장에서 볼
때는
이렇게 모두 다 따라가야 시스템이 있으면
어 그런 코드 리뷰를 받는 사람 또 좀 덜 쪽 팔리는 것도 있고
팬이 내가 못 하는구나 라는 그런 느낌을 안 받는 것도 있는데
그러기 위해서 자기의 잘하는 사랑까지 괜히 시간낭비 하게 하는게 던전도
봐 보지 라고 생각을 하거든요 그래서 차라리 정말 문제가 있는데 꼽아서
3개월 정도
그렇게 코드 리뷰 하고 이 사람이 괜찮아지면 은 다시 코드를 의미없이
코드 체크인 해주던가
그렇게 하면 되는게 전한 것 같아요 근데 그런데도 문제가 있다는 뭐 그건
은 말 그대로 퇴사 시키거나 뭐 그런 쪽으로 생각을 해 봐야죠
아니면 뭐 계속 코드 리뷰로 연기를 하거나
그게 이제 개별적으로 제 코드 리뷰를 해야 된다고 생각하는 부분이고 그
외에도 전체적으로 코드 리뷰를 해야 될 때면 있어요
제가 봐도 그게 뭐냐면 프로젝트에서 가장 중요한 시기 있잖아요
최종 게임 출시 하려고 하는데 주시하게 한달전 이라던가
여태까지 버그는 잡았고 마지막 해서 먹고 좀 고치는데 더 이상 거기서
추가로 법을 만들고 싶지 않은 경우
그런 경우에는 어 하느냐 맞다고 봐요 왜냐하면 그때 버그가 발생하면 은
고칠 수 있는 시간이 죽는 하지가 않기 때문에
고정도 시간 낭비는 감수하면서 라도 위험을
조절하는 게 맞다고 봐요 근데 그런 때가 아니라면 아까도 말씀드렸듯이
괜히 시간이 까 그 코드 리뷰를 해서 없는
아 장점 보다는 시간낭비 루 시간낭비를 하는 단점이 더 크다고 보는 거죠
그래서 제가 오늘 한 말을 정리하면 은 모든 프로그래머의 코드 리뷰를
받게 하는 것은 그다지 효율적인 아닐 수도 있다
단 처음 회사에 들어오는 사람들에게는 3개월 정도 고 드리블 하는게 좋고
나중에 코드를 지 본 코드를 많이 망가뜨리는 사람이 있으면 그 사람들에게
1시적으로 역시 3개월 정도 코드 리뷰를 따로 하는게 또 조국 5
최종 게임 출시 전 이남호 가장 중요한 무슨 빌드 만들어야 할 때 고로
오기 전에는
전체적으로 코디를 한 게 좋다 전 이렇게 생각해요
악보 당연히 의견에 다르신 분들이 있을텐데 그런 분들 계시면 뭐 제
유튜브 밑에
그 코멕스 안 섹션이 있거든요 거기에 의견 남겨 주시면 좋을꺼 같아요
왜냐면 이건 제 생각일 뿐이고
역시 다른 분들 생각도 많으니까 아 그러면 될거 같구요
아 오늘은 이 정도로 마치도록 하죠 예 뽑혔습니다
으
오오오 으
all 으
w
w
angola
으
으 르
o a
