안녕하세요, 포프입니다.

오늘은 마크다운 이야기를 좀 해볼게요. MD 파일이라고 보통 많이 부르는데, 제가 어제도 뭔가 하다가 사용하고 있는 마크다운 변환기에 버그가 있어서 코드를 고치라고 공헌을 해놨더니 '이게 우리가 따르는 표준에서는 다르게 지원하는데 이렇게 해야 하는 건지...', '근데 이게 새 표준은 맞는데 어떻게 하는 건지...' 이런 얘기를 하다가 '그래 마크다운 괴롭기는 하지만 그래도 좋은 거지'라는 생각이 들어서 얘기를 하려고 합니다. 아마 제가 마크다운 이야기는 처음으로 하는 게 아닌가 싶은데, 예전에 한번 '문서를 스타일 적용해서 작성하지 않고 하나하나 서식 변경하고 이러면 너는 주니어다'라는 얘기를 한 적이 있어요. 그거 하고 관련이 있습니다.

마크다운 문서가 뭐냐? 그냥 텍스트 문서인데요, 텍스트를 우리가 실제 보는 워드나 웹 문서 같은 포맷 있잖아요? 블랙 포인트도 박히고 점 목록도 박히고 헤딩도 박히고 이런 거를 표현을 할 수 있는 문서 작성 형식이라고 생각하면 좋아요. 순수 텍스트예요. 그걸 블록 지정해서 폰트 바꾸고 이럴 것도 없어요. 근데 앞에 ##을 박으면 헤딩 두 개짜리고 #을 달면 하나 짜리고 앞에 *나 -달면 점 목록이 되고 숫자를 1.2.3. 아니면 1.1.1. 이렇게 목록을 달면 순서 달린 목록이 되고 이런 걸 하는 겁니다.

이거의 장점은 뭐냐면 되게 단순한 텍스트 파일에 내가 적어놓은 걸 보고도 '이게 무슨 목록이구나'를 간단하게 볼 수 있는 거예요. 메모장 열어서 간단하게 타이핑 치면서 대충 띄어쓰기하고 이런 경우도 있잖아요? 그걸 어떤 표준으로 만들어놔서 다른 문서로도 변환을 쉽게 할 수 있습니다. 예를 들어 마크다운을 HTML로 변환하는 거 쉬워요. 왜냐하면 마크다운이 훨씬 단순한 거니까 변환하는 게 쉽고, EPUB으로도 변환이 가능합니다. 참고로 마크다운 기반해서 여러 가지 문서로 변환할 때 딱 하나 툴이 있으면 좋겠죠? 그때 사용하기 제일 좋은 게 pandoc이라고 하는 겁니다. 이게 거의 오픈소스 문서 변환기의 최고봉인데, PDF까지 변환해 주는 이상한 프로그램이 있습니다.

그래서 마크다운이 뭐냐면 텍스트 파일이에요. 근데 여기에 약간의 문법을 줘서 나중에 다른 문서로 쉽게 변환하고 싶어요. 근데 변환할 때 아까 말했던 HTML처럼 '얘는 목록입니다', '얘는 헤딩입니다', '얘는 단락입니다' 이 정도의 정보만 주고 싶고 그사이에 서식 같은 거는 CSS 같은 스타일만 담당하는 애한테 맡기겠다. 한마디로 문서의 구조를 만들어주는 겁니다. 이 문서를 만들 때 여기에 '문단이 들어갔어요', '목록이 들어갔어요', '제목 1이 들어갔어요', '제목 2가 들어갔어요' 이런 식으로 구조 잡힌 문서를 작성하고, 그것만 책임지자는 거예요.

그래서 이게 도움이 되는 게 요즘 많은 프로그램이 마크다운을 지원하고 있죠? 프로그래머가 처음에 시작해서 프로그래머한테 가장 익숙한 문법이기는 한데, 어쨌든 간에 문서 빨리 작성할 수 있고 쓸데없이 마우스 잡고 이상한 짓 안해도 돼서 타이핑만 빠르면 뭐든 간에 빠르게 할 수 있어서 좋은 방식이죠. 그래서 저의 거의 모든 워크플로나 문서 작성도 마크다운으로 끝나고 있어요. 예외는 몇 가지 있는데 그거는 용도 따라 있는 것뿐이고, 그래서 마크다운으로 모든 걸 작성하고 블로그도 마크다운으로 작성하고, e북도 마크다운으로 작성해서 변환해 갖고 내놓고 있어요. 그리고 마크다운으로 작성하면 또 장점이 깃허브 같은 데다가 버전 관리하기 되게 편하거든요? 텍스트 파일이기 때문에. 그런 것들이 여러 개 있습니다. 그래서 지금까지 마크다운을 모르셨다면 마크다운을 한 번씩은 사용해 보시길 바래요. 마크다운으로 모든 걸 텍스트로 작성하는 순간, 그냥 어느 순간 굉장히 미래가 편해져요.

단 마크다운에서 기억해야 할 몇 가지 문법들이 있긴 하죠. 그런 문법들? 익히는데 어렵지 않아요. 근데 한 가지 문제가 되는 거는 이겁니다. 처음 나왔던 마크다운. 클래식 마크다운이겠죠? 그게 제약이 조금 많아요. 지원되는 게 있는데, 지원 안 되는 것도 많아요. 대표적으로 아마 지원 안 되는 게 표 형식일 거예요. 그래서 표 형식을 지원하려고 확장되어서 나온 마크다운 문법들이 있어요. 그래서 마크다운 표준이 여러 개입니다. 일반적으로 요즘 가장 많이 사용하는 마크다운 표준은 제 생각에는 CommonMark인 것 같아요. CommonMark에 기반해서 조금씩 더 추가하긴 하지만. 그래서 아마 CommonMark 기반의 무언가를 하신다면 가장 편하실 거고요. 그리고 이거를 다른 포맷으로 변경하는 것들이 문제가 생기잖아요? 특히 HTML로 변경하셔야 한다면  CommonMark 기반의 Markdown-it이 가장 좋아요. 그리고 다른 마크다운 플랫폼이나 깃허브도 사용하실 일이 있을 건데, 호환이 잘 되지만 여기서 CommonMark에서 지원하는 것만 사용하시는 게 나중에 문서로 왔다 갔다 할 때도 편합니다.

단, 마크다운으로 할 수 없는 것들, 하면 굉장히 머리 아픈 것들이 몇 가지가 있어요. 그거는 제가 설명해 드릴게요. 표를 만드는데 표가 굉장히 많은 문서예요. 세로 열 많은 표를 마크다운으로 만들다 보면 정말 드럽습니다. 텍스트 파일로 보기가 참 힘들어요. 표가 많은 거라면 마크다운보다는 그냥 구글의 Spreadsheet라든가 Docs를 사용하시는 게 훨씬 좋으실 거예요. 특히 표의 세로 열 안에서 줄 바꿈을 해야 된다? 하지 마세요. 그냥 하이퍼링크 걸어서 따로 보는 게 훨씬 나을 거예요.

그리고 마크다운에서 코드 포맷도 되거든요? 그것도 약간의 특별한 문법에 특별한 키워드를 넣긴 하는데, 이거는 보통 HTML로 갔을 때 지원을 잘해요. 왜냐하면 HTML도 태그 관련된 거를 많이 지원을 하기 때문에. 게다가 어떤 자바스크립트를 연결하면 코드 인용도 잘해주기 때문에 코드 넣는 거는 마크다운에서 크게 문제가 없습니다.

그 외에 조심해야 할 거는 내가 문서를 작성해 놓고 이 문서가 거의 최종이거나 피드백 1~2개 오고 쉽게 고칠 수 있는 상태일 때 '이 헤딩에 몇 번째 줄 고쳐주세요' 이러는 건 상관이 없는데, 만약에 내가 모르는 게 너무 많아요. 그리고 누군가한테 피드백을 계속 받아야돼요. 그런 경우에는 문서에 강조 표시하고 '이거 고쳐주세요'라고 주석 다는 게 최고거든요? 마크다운으로 하지 마세요. 너무 힘들어져요. 물론 PR에 들어가서 주석 달고 이렇게 할 수도 있는데 그것보다는 공짜죠? 구글 Docs를 쓰시는 게 훨씬 나을 거예요.

그럼 주석 달고, 누군가한테 일임하고, 고치면 고쳤다고 알려주고... 이렇게 협업이 많이 필요한 문서는 구글 Docs로 작성하시는 게 훨씬 나을 거고, 그게 아니라 워드를 쓰시는 분들은 주석 달고 변경 내용 추적 하는 게 훨씬 나을 겁니다. 그게 정리가 돼서 보관하는 문서라면 마크다운으로 하시는 게 훨씬 좋으실 거예요. 그리고 지금 사용하시는 To-do 프로그램이라든가 프로젝트 관리 프로그램에도 점점 마크다운 들어오고 있을 거예요. 최근에 만든 거면 마크다운은 거의 기본적으로 지원해요. 예전에 마크다운이 뜨기 전에 나왔던 것들도 점점 지원하고 있어요. 한번 마크다운을 사용해 보시고, 사용하면서 얼마나 편한지를 보세요.

마지막으로 마크다운의 장점이 뭐냐면 마크다운으로 작성해놓은 블로그를 나중에 다른 데로 옮길 거라면 거의 다 호환되는 문서 포맷이 될 수 있습니다. 그래서 요즘 빠르게 블로그에 글을 올리는 제일 좋은 방법은 Jekyll이라는 걸 사용해서 마크다운으로 작성하면 Jekyll 자체에 변환기가 있거든요? 마크다운이 자동으로 HTML 파일로 변환되어서 나와요. 그걸 깃허브 페이지에 올리면 공짜로 블로그를 만들 수 있습니다. 그게 가장 빠른 방법이고요. 나중에 이러다가 뭔가 안되면 마크다운을 가져다가 다른 데 호스팅하시면 되고요. 거기가 마크다운은 지원을 안 하는데 HTML을 지원 해요? 그럼 MD to HTML 변환기로 변환해서 올리면 됩니다. 그래서 예전부터 저는 그랬거든요? '문서를 하나의 포맷으로 관리하고 배포되는 플랫폼 따라 변환이 되면 좋겠다' 그게 가능해진 게 마크다운이랑 요즘 공짜 Continuous Integration 많죠? Azure Devops 같은 것들.

그래서 문서를 마크다운으로 정리하는 습관 한 번씩 가져보시고요. '이게 아니야. 난 문서가 너무너무 예뻐야 해서 문단 간격하고 이것저것 고쳐야 해'. 이건 사실 스타일 문제예요. 에디터에서 스타일도 바꿀 수 있는데, 그게 아니라 '내가 만드는 건 언제나 이뻐야 해'라고 하는 분들은 프로그래머 감성보다는 디자이너 감성이 강하신 분들이에요. 그런 분들은 오히려 마크다운이 안 좋을 수 있어요. 마우스 열심히 만지면서 예쁘게 만지는 게 더 중요할 수 있는데, 그냥 정보가 제대로 박혀 있고 그 정보를 쉽게 볼 수 있고 나중에 예쁘게 보려고 쓸데없는 서식 안 바꿔도 되고, 앞에 말했듯이 #, *, - 확실히 볼 수 있고, 엔터를 치면 바로 단락 넘어가고 이런 걸 편하게 하고 싶은 분들은 마크다운이 좋습니다. 그래서 마크다운이라는 문서 포맷 한 번씩 사용해 보시고요. 사용하시는 김에 요즘 공짜 git 호스팅 되는 데도 많거든요? 마크다운 문서 정도면 굳이 깃을 안 깔아도 온라인으로 가서 고쳐도 돼요. 거기다 버전 관리까지 됩니다. 그래서 문서 정리를 웬만한 것들은 그런 데서 하면 돼요.

한 가지 빼먹었네요. 검색이 많이 필요하다? 그러면 색인을 잘 만들 수도 있는데, 검색을 많이 해야 하고 체크 박스를 달아야 하고 이런 게 필요하다면 마크다운보다는 원노트가 솔직히 낫긴 합니다. 근데 마크다운처럼 범용성은 없죠.

여기까지 말할게요. 포프였습니다. 마크다운 사용해 보세요.