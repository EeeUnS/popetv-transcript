이 안녕하세요 4p 입니다 오늘 제목은 좀 재미있게 나갈 것 같아요
아마 이렇게 내 보낼 거에요 컴퓨터는 추상적으로 돌지 않는다
으
제가 여태까지 뭐 하드웨어가 중요하다 이런 얘기를 다 해왔던 거랑
일맥상통 하는 얘긴데
음 제가 최근 들어서 이제 알고리즘의 은 의미를 제대로 드디어 들었어요
여태까지 알고리즘 물 이제 이정기 알고리즘이다 라고만 알고 있었지만
제정 이를 제대로 들은 적이 없었던 것 같아요 이게
그만큼 제 공부가 헛된 공격해 탁
뭐 그런 얘길 수도 있는데 거기 붙어 에게 시작할게요 지금 하려는 얘기는
한빛 그 강의 에서 할 내용이기 되어 사실은 그 한빛 저작 아니 이
비디오가 나가는 순간 이미 저자가 에 끝났으니까 채 탕 하는 기분으로
아무 죄책감 없이 만들려고 하는 거죠
그 외에 다른 내용이 있을 거에요 차피 최근에
넷플릭스 를 뒤지다가 거기 보면 야 알고리즘 이라는
그 티비 쇼 였던거 같은데 딱 프로가 하나 갖다 있어요 그래서 딱 단편
짜리인데
영국의 무슨 교수가 나왔고 이 알고리즘은 설명해주는 것 같아요
4 이 사람 이제 알고리즘으로 전하기에 당연히 그냥 되게 단순하게 컴퓨터
알고리즘 이라고만 생각을 했어요
4 이 사람이 알고리즘의 예를 들면 설명한 게
최소공배수 인데 유클리드의 최소공배수 맞을 거에요 그걸 이제 설명하면서
알고리즘은
그냥
뭐 그 사람이 직접 말하는거 아니지만 컴퓨터에만 있는게 아니라 실생활에
어디에다 알고리즘이 있다라고 얘기해요 그건 얘기해요
그리고 이제 그 사람의 설명을 들으면서 제가 느꼈던 게 아
세상은 알고리즘으로 도는 게 맞구나 라는 걸 제가 느꼈어요
그럼 그 이유를 이제 그 사람이든 최소공배수 예로부터 설명을 할게요
최소공배수 가 뭐냐 대부분 아실 것 같지만 그냥 이제 최종 되서 만나
맞는거 같애
최대 공부해 순가 최대공약수 최대공약수 거 같아요 죄송해요
어젯
즉 영어로 들어갔고 한국말 4 그대 입이 안 됐네 뭐
최소공배수 최대공약수 둘 중 하나인데 아 그들 중에 하나 제가 말하는게
맞는 것을 보시면 될 것 같아요
뭘 말하려고 하는 거냐면 숫자가 예를 들어서 두개가 있어요
음 뭐가 있다고 할까 20일이 있고 그쵸
그리고 28 이 있어요 그러면은 아예 똑같이 애를 남 나머지가 어깨를 수
있는 그분 뭐 중에 가장 큰 값이 뭐냐 를 찾는 거에요
가장 큰 값이고 나누는 거니까 최대공약수 가 맞는것 같아요
아 뭐 아니면 요 기억하세요
그러면 이제 치 22 라고 28은
7로 2 단 아니잖아요 그리고 그게 제 동시에 나뉘는 가장 큰 숫자 에요
7 3회 20 1 7 4 28 이니까
그러면 그 값은 치료 예요 근데 이게 되게 복잡해지면 숫자가 마
15,200 6집 3막 오모 8 15215 조일 뭐 이렇게 나가면 은 이
숫자를 찾기가 그리 쉽지는 않죠
그런데 이제 이미 유클리드 는
유쿠 리더 마치 거 에서 틀니 틀리지 않게 바라는데 이미 그 분이
사랑하게 시인은 시절부터 이제 이것을 수학적으로 일단 이 최대공약수 를
찾는 법을 설명을 해 놓았고
그걸 실 생활에 적용하는 방법도 이제 알고리즘을 만들어 왔다는 거예요
그럼 일단 알고리즘 어디 설명하기 전에 그 최대공약수 를 어떻게 찾는지
설명을 드릴께요
이 비디오에서 얘기했던 내용은 뭐냐면
자기가 화장실에 타일을 깔아 야 돼
화장실이 이렇게 직사각형의 화장실이 라고 화면처럼 직사 개 화장실인데
거기에 타일을 깔고 싶은데 이 타일을 중간에 깨지 않도록 네모 낳게 다
들어가도록 크기를 찾고 싶다는 거에요
그 결과 적으로 뭐냐면 이 윗면과 옆면에 길이가 다르잖아요
그러면 이것을 공통적으로 나누는 부모 중에 가장 큰 값을 찾는 방법
그러면 했던 얘기가 뭐냐면 되게 간단 했어요
2 으
그 유클리드 하셨구요 그 사람이 정해 놓은 바 있다며 는 시작을 무조건
정사각형으로 시작을 하면 된데요
그러면 정사각형을 하는데 정사 악행의 길이는 짧은 * 높이 줘 지금
저희가 볼 때는 이 높은 변의 길이의 딱 맞는 정사 표로 만들어서 그거를
타일 이건 한데요
그러나 이것 좀 더 커서 보이가 힘든가 그렇다 이 링을 하면은 판타
이니까 들어가고 나머지 가 요 옆에 이렇게 남자 나요 요만큼 2
그쵸 그러면 이제 거기서 요기 남은 2
직사각 0 해서 다시 짧은 변을 쪽에 다시 이렇게 할게요
이렇게 직사각형 있으면 짧은 변을 일단 했고 정사각형 도요 그러면 이
만큼이 채워 지겠죠 이만큼 2
그리고 남은것은 이만큼이나 물 거에요 그쵸 그런데 짧음 들을 잡아서
정사각형 만들어서 채워요
그럼 다시 끝에 가짜 티가 났고 배정 4 qr 만들어 채워놓고 채워놓고
채워놓고 하다 보면 어느 순간에 딱 맞는 크기가 다 가요
그럼 그게 바로 아 최대공약수 고 고만한 타일로 화면을 닦아라 버리면
중간에 짤리는 부분 없이 예쁘게 깔린 다는 거예요
그럼 알고리즘으로 이걸 봤을 땐 돼 간다는 거예요
아 일단 이렇게 뭐 너비가 있으면 가장 짧으면 그쵸
좁은 면에 정사 크로 만들 써넣는다 더이상 정사각형이 넣지 않을 때 넣어
지지 않을 때는 다시 남은 부분을 똑같이 직사 평을 떼서
그 짧은 변을 해당하는 검을 잡고 똑같은 과정을 반복하다가 그게 끝나는
경우 까딱 사각형이 정상화 캐나 들어가는 경우 더 이상 남은 공간이 없는
경우
그게 바로 너의 최대공약수 다에요
음 저는 이 사람이 말에 아니까 이 사람이 말했던 알고리즘의 저희가
뭐냐면
알고리즘을 차 꿈 안드는데 이제 걸리는 시간이 라던가 노력은
굉장히 천재들이 만들 수 있는 영역 이라고 해요
그러나 일단 그 사람들이 알고리즘을 만들어 놓으면 은 어느 누구나
순서대로 따라 할 수 있고 그 순수의 로 따라 했을 때 언제나 원하는
결과가 나오는게 알고리즘이 더 라고 얘기 해요
그러면 들어오면은 저는 뭐 옛날 무슨 컴퓨터에서 말하는 법을 솥은 이
무슨 뭐 뭐 정리 어정 리조트 구나
그 건의문 그래프 c 오리니 뭐 길찾기 니 이런거 말고 이지만 생각을
했었죠
그런데 결과적으로 것도 아는 건 뭐냐면 이렇게 이렇게 이렇게 정해진 룰이
있고 그 룰 대로 한단계 한단계 한단계 따라가다 보면 값은 보이나요
그게 알고리즘의 정해요 물론 자 알고리즘이 값을 찬데 오래 걸리는 것들이
쉽게 걸리는 것들 그건 다른 얘기고
그러면 이걸 어따 생각해봤을 때 제가 세상에 알고리즘으로 돌아간다고 얘기
했냐면
저는 보통 여태까지 걸 프로세스 라고 얘기 해 놨어요
프로세스 라고 이런 프로세스를 잘 잡으면 이게 된다
근데 저희가 하고 있는 그 무수한 것들이 있잖아요
사회에 살면서 뭐 4개를 들어서 내가 집에 여기서 저기까지 한 업체가
전철을 타고 갈 때 그 전출 네가 속 표를 사거나 표로 이미 갖고 있거나
표를 찍고 들어가서
1호선 어디에 갈아 탄 다음에 어디까지 가서 환생 하고 이어서 되서 다시
또 내리고
가면은 갈 수 있다 옷 먼지 그게 반드시 효율적인 길은 아니지만 대충
효율적인 길이고 요즘 사람들은 또 이제 나오잖아요 몇 번 출가 몇 번
문에서 내리면 환승이 곧바로 있다 그러면 기다리는 동안 몇 번 뭐 문까지
가서 거기서 기다리고 있다가 들어갔다가 데려다가
이런게 알고리즘인 거에요 심지어는 뭐 커피를 내리는 뭐 이런거 봐도 보통
메뉴얼 따라 오잖아요
순서대로 1번 뭐 커피를 못 가 란트 간다던가 뭐 꼽고 놓고 불을 데우고
보호하고 하고 씻구 든다
이거 자체가 그냥 이제 알고리즘이 거고 그 중간 중간 보면은 뭐 표면이
뜨거우니 손 잡지 마세요 이런 것도 있잖아요 그게 바로 사고를 막기
위해서 까 안전하게 이걸 따라만 하면 은 내가 몸에 피해가 없고 도
맛있는 커피를 만들 수 있는 그 과정을 정해 놓은 게 큰술 싸게
알고리즘이 어떤 거에요 그래서 프로세스와 알고리즘의 이 정의가 되게 이제
모호해 지면서 아 이게 돼 같은걸 꺼라 생각이 드는 거에요
그러면은
결과적으로 알고리즘의 정 이라는 게 아까 말했듯이
다단계 될까 단계 단계별로 이제 따라 하면 결과가 나오는 거고 그걸
따라하는 게 일반인이 하기에도 되게 멍청 하거나 좀 문제가 있는 사람이
아니면 어렵지 않은 것
그래서 저희가 사회에서 말할 때도 그런거 많이 하잖아요 야도 이거이거 해
라면서 이렇게 다이고 이거 이거 이거 이거 하는데 라고 말하며 는
이고 이거 이거 이거 이걸 따라 사람이 되게 잘 해요 뭐 92개 실수는
하지만
그런데 이제 그것도 못 달하는 애들 있잖아요 그럼 그 건은
알고리즘이 그 사람 태도 뭐 어려운거 거나 그 사람들이 일반 사람들에
비해
그런 거를 따라 할 정도의 이제 좀 뭐 능력이 안되거나 뭐 진행이 안
되거나 아니면 신경을 안 쓰거나 그들 중에 하나죠 사실 그러나 따라만
한다면 쉽게 될 수 있는 부분이 그런 거라는 것 같아요
큼 여기까지 이제 뭐 사회의 굉장히 많은 것들이 우리가 순서를 정해서
하는 것들 규칙을 따라 는 것들이 사실은 굉장히 많은 알고리즘이 라고
생각을 하면 되어 뭐 캔 따는 것도 똑같아요
걔들 들어올린다 란다 따진다 오히려 이런 것들 그 줘
아니면 뜻 운구 등록된 캠 돌려 따는 것도 있잖아요
이렇게 그것도 똑같은 거고 그런데 그러면 컴퓨터 해야 하는데 알고리즘을
많이 쓰냐
그런 얘기를 하잖아요 그냥 컴퓨터는
이렇게 정형화된 과정들이 있을 때 다단계 3단계 단계별로 정형화된 과제들
과정들이 있을 때 그것을 굉장히 사람보다 빨리 돌릴 수 있는 기계 중에
하나에요
그냥 그게 전부인 거에요 그래서 이제 컴퓨터가 뭐 컬 만드신 분이
그렇게만 들었겠지만
주목을 받고 있고 그렇게 온 세상이 컴퓨터로 돌아가는 이유도
그냥 저희가 당연하게 이제 그렇게 단계별로 만들어왔던 과정들
심지어는 예전 고대부터 불 붙일 내면 장작을 쌓고 밑에 지 풀을 넣고 못
풀게 부싯돌을 해서 불이 오르면 발음 후 불구 이런 그런 과정을 쌓아왔던
것들이 그냥 컴퓨터로 옮기면 굉장히 빨리 할 수 있다는 게 전부 거예요
그리고 이제 컴퓨터가 생기고 나면서부터 저희 해지
일상이 빨라진 것도 있지만 아 그만큼 저희가 무슨 무슨 일을 처리하던
굉장히 빨리 처리가 되고 그만큼 저희는 효율적으로 살 수가 있는 거잖아요
그래서 아 그렇구나 라고 생각을 했고 결과 알고리즘의 원리 현재 사회에서
돌고 있던 건데 우리 컴퓨터를 도용을
도입해서 더 빨리 만드는 것 뿐이구나 심지어는 정렬 말 생각해도 법을
소프트 이런건 아시잖아요
그것만 하더라도 실제 사회에서 우리가 뭐 여러가지 이렇게 숫자를 두고
숫자를 정열을 하려면 어떤 방식으로 할 거냐
그러면 뭐 그때부터 보면서 아 젤 큰거 차지하고 제 위로 옮기고 하나씩
바꾼다 이런 사람도 있고 그게 제가 알긴 인써트 쏠트 거야 아마 그게
아니면 은 이제 두 개씩 비교해가며 개밖에 바꿔가는 해드리고
그쵸 큰거 큰거 계속 올라가게 꽤 벌써부터
결국은 그 거였거든요
그럼 제가 옛날에
되게 그런 얘기를 많이 했어요 좋은 엔지니어는 생활습관부터 다르다 라는
이게 내 그게 어찌 보면 저는 몰 반봉건 양 봉 거 같냐 면 아까 말했던
프로세스를 잘 따르는 사람들 그리고 프로세스를 심천 자기가 만들 수 있는
천재 영역에 있는 사람들
뭐 아주 뛰어나 전재 난 이제 뭐 탐지하고 중간 인 사이에 있는 사람들
그런 사람들이 결과적으로 프로그램에서 왔을 때 루 그런 이 가속화된 이
단계별로 알고리즘을 따라가는 가속화된 2% 컴퓨터를 어떻게 돌리지 않다는
거죠
컴퓨터 갈 생각 그것 뿐이니까 그래서 그런 개념에서 제가 그 얘기를 많이
했던 것 같아요
그러니까 이가 원래부터 약간 좀 남들보다 프로세스를 잘 따라 열심히
따르려고 해
아니면 남들이 다 플러스 좀 더 잘만들어 그런 문제점을 발견하고 훨씬 더
좋은 알고리즘 만들 수 있는 사람이야
그러면은 당연히 엔지니어 더 나을 수가 있는 거고 아니면 이거 훈련이
가능한 거죠
이 두개가 분리되는 순간 컴퓨터라 저의 새로운 거 내 일상을 전혀
새로운거 생각하는 순간 이미 잘못 생각하고 있다는 거죠
실제 도는 기반 똑같고 속도의 차이 뿐인데 그 얘기를 하고 싶어 고 그
두번째는
제가 추상화의 위험성에 대해서 되게 많이 얘기를 했어요
예전부터 컴퓨터 자 어떻게든지 이해 못하는 사람들이 자꾸 만약 팔려고
이상한 커스텀 지어놓고 결과적으로 사람들이 뭐 따라해서 개발자들이 못
따라 해서 그런 개념 다 망가지고 1 반짝 약빨고 사라진다는 얘기 되게
많이 했어요
그것도 똑같은 얘기에요 아까 그
누구야 그 비디오 나왔던 그 교수님이 말했던 것도 그렇잖아요
알고리즘 이라는 것은 일반 사람들이 쉽게 따라할 수 있는 차근차근 한
과정을 거쳐서 되는게 알고리즘이 라고 얘기를 했어요 근데 추상화를 너무
해버리면 이런 추상화의 스텝 바이 스텝 이어 가이드가 있는게 아니라 그냥
뭉뚱그려서 아 아트는 아름다운 거지 일어 이런식으로 개념이 갈 수가 있는
거거든요
그러니까 그렇게 단계를 로 쪼개 갖고 구체적인 내용을 주지 못한 채 그런
약을 팔고 있는 거죠 망상을 아 왜 이렇게 하면은 이렇게 되는 데다 될
거야
이제 사람들 질문을 하기 시작해요 그러면 아 이런 이런거 에서 문제가
있는 어떻게 할까요
답이 없어요 그게 그 순간에 약 파는 게 나오는 거야 단점들이 나왔을 때
그 단점을 어떻게 개선해야 될 건지 아니면 그 단점을 줄이기 위해 어떻게
노력 할 건지에 대한 고민이 전이 없는지 형들이 있어요
그럼 그건 말 그대로 컴퓨터도 이해를 못하고 실 생활에서 프로스트 못따라
가는 거고 자기가 프로세스에서 좋은거 만들 되게 어려운 사람들 중에
하나요
그 사람들이 말도 안되게 그냥 이런거 다 무시하고 아 이 약만 먹으면
최고의 프로그래머가 되는데 라는 그런 개념으로 파는게 자체가 문제가 있는
거죠
그래서 그냥 그 비디오를 보고
최근에 또 제가 이제 이제 멘토링 하는 이런 애들을 보면서
분명히 나보다 훨씬 빨리 배우고 일정 시작하지만
몸 같다 보다 발전이 느리다고 느끼는 부분들이 있어요
그럼 그런걸 보면 은 제가 아까 말했던
이제 프로세스를 따르는 걸 수도 있고 알고리즘을 만드는 걸 수도 있는데
알고리즘을 따르는 것이 있는데 그거를 정말 빨리 습득해서 제대로 따라가는
능력 그리고 뭔가가 문제가 있을 때 그 프로스 알고리즘에서
이 여기서 요거 하나를 고치면 내가 보던 문제가 사라지고 따른 부작용도
없을 것 같다는 그런 프로세스의 개선 과정을 그런 마음 마인드를 가진
사람들 그런 부분이 쪼금 없는 것 같아요
그래서 뭐 그 것도 있고 다른 것도 있지만 것 그걸 한알 느꼈고 그래서
비디오도 보고
강연 제 죽 하기 전에 질문 받았던 것에 또 그런 고민들이 많기에 그치
강연을 하면서 다합쳐서 갖고 만들었어요 비디오를
오늘 비디오의 제목은 컴퓨터는 추상적으로 돌지 않는다
부제 알고리즘과 아 인생은 알고리즘으로 돈 다 괜찮은 제목 같죠
예 뽑혔습니다
