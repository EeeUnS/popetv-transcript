이 안녕하세요 포프 입니다 저번 편 은 결방을 했어요
좀 감기가 잠깐 들어와서
뭐 비디오를 만들려면 만드는 건 아니었는데
괜찮더라구요 그래서 한번 걸렀고 요번에는
2번 걸을 수 없으니까 없이 만들어야지
만들려다가 원래는 그냥 짧은 이제 광고를 하려고 했는데 그러면 성의가
없다고 요거 먹을까봐
그것보단 좀 더 기술적인 도움이 되는 얘기를 하자 라는 생각을 해서 제
목록을 쭉 그렇게 앞으로 비디오 만들 목록을 적어 놓은 노트가 있거든요
그걸 보다 보니까 예전에 이제 말해야지 라고 적어 놓았던 것 중에 한 몇
년을 말하는게 있더라고요
그런데 재미있는것은 요금 왠지 말한거 같은데
라피 제 생각이 들었지만 이제 포스트 있어 친 들어 찾아보니까 없는것
같아서
아 말아야겠다 고 말해요 음 제목으로 이미 나가서 알고 있겠지만 프로파일
가 있 있 op mij 션 이라는 거에요 이게
비주얼스튜디오 제가
몇 년 전쯤에 이제 씨애틀 내려가서 제가 mb 피기 때문에 그 재개 내가
지금 만들고 있는 새로운 기능을 미리 볼 수 있는 그런 기회가 가끔
있어요 거기서 봤던 거고
이제 거 그걸 이제 아 이제 공식으로 발표되면 얘기를 해야지 라고 생각을
했다가 안했던 것 같아요
그러면 이게 약간은 좀
혁신적 이라고도 할 수 도 있고
당연한거 라고도 할 수 있는 그런 최적화 방법 중에 하나인데
일단 보통 저희가 최적화를 생각을 하면은 이런 식으로 작업을 해요
참고로 지금 말하는 부분은 지금 말하는 기능은 비주얼 c 플러스 플러스
에 있는 거에요 이게 이제 뭐 시차 베는 없다고 알고 있어요
이 개념이 뭐냐면은 보통 여태까지 저희가 아 최적화를 할 때 어떤 식으로
하냐면
뭐 게임을 만든 다음에 게임을 실행을 시켜요 그러면 어 게임 2 와 나는
그런 속도가 안나오는 경우가 있죠
아 이게 좀 게임이 초당 60장 그리거나 설정을 그려야 되는데 어딘가
들여
그럼에 저희가 보통 어떻게 하냐면
아 워낙 코드가 방대하고 어디가 느리다는 걸 확실히 알아야 되잖아요
그런 보통은 이제 프로파일이 라는걸 해요 예전에는
이제 함수 맛 아마 이렇게 그 시작시 가 끝나는 시간 이런걸 로깅 해
왔고 이제 쭉 적은 다음에 이제 이 게임이 진행되면서 어느 함수가 어느
정도 속도를 내고 있는지를 이제 스텟을 화면에 보여 주거나 뭐 툴로
보여주거나 하는게 있었고 나중에 이제 그래픽 쪽은
이제 마소가 엑스박스 내놓으면서 엄청난 디버깅 툴을 만들어서 실제 게임
도는 도중에 클릭 한 번만 하면 은 캡쳐 다해서 뭐가 얼마나 걸리고
이런걸 보여주고
그리고 심지어는 분석도 해 줘 갖고 아이 가이드 픽셀 쉐이더 가 들여 뭐
여기서 텍스처 읽어오는 캐쉬가 너무 문제가 있어 아니면 왜 단순하게 계산
1로 만이 아닌 하니까 아니면 화면에 충족을 뿌려 주는게 드디어 이런걸
다 보여주는 그런 툴이 나왔어요
이런 툴을 보통 저희는 프로파일러 라고 해요 뭐 gpu 캡쳐 이렇게도
얘기하지만
프로파일을 뽑는다 니까 어떤게 어느정도 속력이 속도가 걸리는지 보는 프
프로파일러 라고 해요
그게 gpu 는 좀 많이 이제 마소 덕분에 처음에 되게 많이 앞서 나왔고
그 다음에 이제 cpu 프로파일러 는 제가 지금까지 말했던 것은
함수 시작 부분에 스타트 & 이렇게 찍고 뭐 이름 정해 하고 또 나중에
보는 그런 라이브러리 얻자 나요
요즘은 이제 이거는 인텔 쪽에서 좀 많이 처음에 이 이끌어 나가는데
자동으로 그걸 해주는 것들이 점점 등장하기 시작했어요
그럼 이제 뭐 함수가 실행되거나 이런건 보통 어셈블리 단위에서 이미
함수를 호출하고 점프하고 돌아오는 과정이니까 어떤 함수가 호출되는 지 알
수 있잖아요 그 함수의 이름을 모를 뿐이지
그러면 이제 그거하고 컴파일할 때 나오는 pdb 파일
비주얼스튜디오 영어로 프로그램 데이터베이스를 것 같아요 저희가 제대로
보진 않았지만 그럼 거기에 보면 실제 이 주소는 이 함수 구절에서는
점수가 이런 정보들이 많이 들어있어요
그럼 그거 를 기반으로 쫙 콜드 이를 뽑아 줘요 아 니가 메인 함수 가
됐는데 뭐 33 밀리 세컨드 였는데
그 안에서 함수 a 는 16일 걸렸고 이거는 뭐 5가 걸렸어
그걸 어떻게 플러스 버튼을 이었고 눌러 가 꼭 트리를 쫙 열어 보면 은
그 안에
약의 이란 함수 밑에서 뒤가 12345 이런 함수를 또 노출 했으니까
이것은 면밀히 씩 걸렸고 이게 몇번 호출 됐고 이런 거리에 자동으로 많이
해줘요
지금 비쥬얼 스튜디오 2010 7 을 쓰시는 분들은
시프 프로그램도 는 도중에 아니다 c 뿔 뿔 프로그램을 돌릴 때 메모리
이게 짝 젊고 나오잖아요
그리고 cpu 정보도 나와요 거기서 캡쳐 한 번 누르는 것만으로도 이제
그런 프로파일 뽑을 수가 있고
아 역시 윈도우 스 상황에서 비주얼 10불 쓰시는 분들은
예 그 게임 같은거 실행할 때 보통 f5 눌러 실행하는데 rt f5 던가
쉬프트 m5 등과 누르면 크게 그래픽 애널라이저 가도는
그 상황에서 이제 프로그램이 실행되고 거트 캡쳐 한 번 하면 아까 말했던
그런 정보들이 나와요
그래서 그렇게 프로파일러 본 다음에
아 요 부분이 늘이 구나 이 함수가 만번 호출 되는데 이게 전체 시간의
5% 를 차지하고 있어 아 그럼 이거를 이제 두 배 한 빠르게도 2.5%
가 되겠구나
그런 식으로 보면서 함수 1 고치고 다시 프로파일 뽑아보고 치고
이런 과정 이었어요
쪼 쳐 뭐 제 참 수란잔 무기도 하고 다양한 이제 고칠 수 있는 거기다
한데 뭐 이제 그런건 알고리즘 적으로 문제가 있다거나 언제나 이제
소프트웨어 공학에서 신경 쓰셔야 하는 것은
메모리를 많이 먹으면 언제나 뭔가를 빠르게 만들 수 있는 기회가 있는
경우가 대부분이고
메모리를 조금 쓰려면 이제 좀 속도를 이렇게 약간
기보 패야 되는 그런 상황이 많아요 물론 코드로 워낙 개판으로 짜서
메모리도 줄이고 속도 늘리 쓰는 경우도 있지만 이제 그거를 이제 다
저희가 판단해 가면서 하는 거예요
그게 그게 저희가 이제 손으로 최적화 하는 그런
거리 여태까지 해왔던 거고 그거 외에도 이제 컴파일러가 자동적으로 해주는
최적화 들이 있어요
이제 비주얼 스튜디오 같은 경우는 디버그 윌리스 이런 그 트랩 박스가
위에 있잖아요 틀었다 한박스가
디버그 로 하면 최적화 하나도 안들어가고 함수 인라인 하나도 안하고 그냥
있는 그대로 느리게 도는 코드인 반면에
최적화 리리스 추적한 1 릴리스 빌드를 구우면 자동으로 최적화 이렇게
옵션 익혀 지거든요
뭐 다 바꿀 수 있지만 그러면 나이도 들어가고
그러고 이제 필요 안씀 남들 다 빼 버려 서막 그 실행파일 작게 만들고
이런 기능까지 다 있어요
그럼 그거 를 돌리는 일단 5
웬만한 코드는 10배 정도는 빨라질 수도 있다고 보거든요 10배로 좀
무리인가 코드 얽매이지 않는
어쨌든 디버그 빌드 보다 빠르고 디버그 정보가 다 빠지기 때문에 최종
출시할 때는 당연히 윌리스 빌드로 구워야 하는 게 정상이고 해킹 같은것들
장 하려면
그럼 이제 윌리스 빌드를 구매 그거 하나만으로 컴파일러가 알아서 최적화를
굉장히 많이 해줘요
그리고 보통 아까 말했던 프로파일 뽑는 그런 기능은 당연히 릴리스 빌드
에서 돌려야만 하고요
왜냐하면 디버그 빌드를 돌리는거 추려 콰 이미 컴파일러가 다 해 줄걸
내가 손으로 할 이유는 그다지 없어요 뭐 예전에 디버그 빌드를 유지하라는
얘기해서 는 그 이유를 얘기했지만 일단 성능적인 문제에서
그러면 릴리스 컴파일러가 해주는 일이 많을수록 저희는 손으로 추적할 할
일이 적어지는 거에요
예전에는 정말 말도 안되게 써 이프 문만 잘못 써도 손으로 쓰는 이제 뭐
그 터널의 이쁘면 있잖아요
뭐 물음표 찍고 삼항 연산자 그래
물음표 찍고 콜러 찍는 그런 2부 된 s 감주 절에 들어가는
그거를 하는 것보다 이프 문이 느린 겨운 모드 옛날엔 있었고 그리고 이
풀을 쓸 빠 있는 스위치를 쓰는 경우가 가끔 펑션 포인터 쪽으로 어떻게
컴파일러 최적화 돼 주면서 빠른 경우도 있었고 또 다양한 여러가지가
있었어요 아니면 그 스위치 아까 말했던 게 안되도 모르겠어요 펑션
포인터로 만들어 놓고 배열에 넣어서 점프를 하던가 왜 컴파일러가 많이
발전했고
그리고 이제는 컴파일러가
곱셈을 이제 할 때 부동 소숫점 같은 플로 타입 하나하나 곱셈을 하는걸
4번을 하면은 컴파일러가 이 자동적으로 그거를 네 개를 하나로 뭉치고
벡터를 한번에 곱해 주는 경우도 있어요
cpu 자체가 이제 벡터 프로세스를 많이 지원 아니까
그래서 최소 헤드 컴파일러가 해주는거 를 쳐 받아놓고
안되는 거면 최적화 라는게 만능 거에요 그럼 프로파일 가 2do pig
션 빠질 거 같아요 정확히 이름 프로파일 관리 녹지 말이 좀 같아요
프로파일로 가이 대한 방향을 잡아준 최적화에 이게 어떤 식으로 내면 되게
재밌는게
아무리 컴파일러가 최적화를 처음 해줘도 추적하는데 코드를 보고 아 이런
코드 이렇게 한 게 더 빠를 거라고 추적할 해주는 게 전부에요
실제 프로그램이 실행중에 어떤 함수가
몇 번이 이제 호출 될 지를 가늠할 수 있는 방법은 있겠지만 그 가늠하는
그 함수의 호출 경로가 많은 데이터에 의 결정이 될 때 실제 게임이
그렇잖아요
내가 무슨 이런 스킬을 가지고 있으면 당연히 그 스킬에 관련된 뭐 펑션
만 되게 많이 호출을 하겠죠
그런 경우에는 탄다는 방법이 없거든요
그러면 최적화를 해야 될 때 전반적으로 아 이게 뭐 지역적으로 봤을 때
이 함수 하나가 이제 이런거 최적화 될 수 있어
뭐 이 함수가 이 함수 호출 하겠다 하니까 이렇게 추적하면 될 거야
이런걸 하는건데
프로파일 가진 옵티마이저 에디션은 비쥬얼 스튜디오 2 제거 기업 옵션으로
있어요
그 실행할 때 그냥 프로파일 ii 도터 yj 션을 치구 실행 하던 것 이
메뉴가 있을 거에요 저도 본지 좀 오래되서 기억이 안나는데
걸 딱 실행하면 프로그램이 보통 때랑 똑같이 실행이 되요 근데 재밌는건
뭐냐면 이걸 내가 실행하면서 모여서 게임도 해보고 뭐 레벨 들어가다
나오고 막 이런 거를 비주얼 스튜디오가 내부적으로 프로파일을 다 찍고
있어요
그리고 를 닦으며 는 이제 그걸 이제 제가 분석을 해서 아 이 함수가 몇
몇 번이나 호출이 되고 이 함수가 돋보이는 호출이 되고
이런거로 쫙 기록을 해 놓은 거에요 그럼 거기에 이제 해당하는 무슨
파일이나 정보가 나와요 그럼 다음에 빌드를 할 때 야 이 정보를 이용해서
최적화를 하게 필드를 해봐 라고 할 수 있는 기능이 프로파일 가이드 도록
테마 이제 이 션 이에요
뭐 구글 가서 가첩 언어 나오실 거고 제가 링크를 걸수 있음 아래 링크를
걸게요
이게 지금 말한 게 뭐냐면
장점과 단점을 얘기할게요 장점은
예전에 우리가 프로 8 뽑아보고 아 이 함수가 좀 느리다 손으로 고쳐
보자 라고 했던거 에 어느 정도를 컴파일러 및 이 해주는 거예요 그러니까
뭐 함수가 만개가 있으면 그 중 실제 게임에서 주로 쓰는 함수가
뭐 100개 다 그럼 100개를 추적해야 되지 뭐 한 프레임에 한번
노출하면서 시간 0.1% 차지하는 그 함수를 고쳐 바벨 의 민 없잖아요
그러면 컴파일러는 기본적으로 어떤 함수가 어떤 함수를 어떻게 호출 한지를
봐서 아 이거 를 모인 라인을 한다거나 아니면 뭐 함수로 뽑는다 거나
이런식으로 했을 때 어떤게 더 빠르다는 것을 이제 대금 측정을 할 수가
있는 거죠 그 장점이 요 사람 일이 줄어들 수 있다
두번째는 아직은 뭐 제 생각에는
이거를 지금 예능 하고 인지 아닌지 모르겠지만 프로파일 가 2d dop
많이 전하 너는 앞으로 펄 정보가 나오고 그거 에 기초해서 컴파일러를
이제 다시 빌드 라고 다시 프로파일 돌릴 거잖아요 그러면 이건 약간 뭐
실로 님처럼 시도해 보고 얼마나 빨라져 나 아 이거 다른거 시대도 걸
맞아 빨라져 않나
이거를 굉장히 많은 사람들 컴퓨터에서 이제 확인이 가능해요 개발자
컴퓨터에서
개발자가 천 명의 이름을 쓰면 은 이제
이건 하는지 아는지 모르 겠어요 마소에서 그 시 테스트와 결과를 보고 제
어떤 오토메이션 이 더 맞다는 것을 점점 최적화 시켜서 업데이트 할 수
있겠죠
그 제가 생각한 장점이에요
단점은 단점이라 게 보다 나이 것을 확실히 쓰기 조금 어려운 부분중에
하나는 뭐냐면
결과적으로는 이제 개발자 머신에서 20% fr 가이드 모드 즈 킥 opi
션 프로파일 제너레이션 않은 그 그걸 키고 게임을 충분히 플레이 해야만
이 데이터가 나온다는 거죠 뭐 이걸 당연히 자동화를 시킬 수도 있을 것
같아요
이제 한 기계를 두고 그게 오토메이션 테스트를 둔 오토메이션 태슬 돌린다
거나 q 이를 돌린다 거나 해서 그 옵션을 키고 닻 올린 다음에 거기
나온 데이터를 제 소스 코리 포의 집어넣고 다시 개발자가 바꿔 비데 서버
가 받아서 빌드하는 방식 이 것도 가능하겠죠
그런데 이제 뭔가 한 단계 더 들어가야 된다 아니면 개발자가 정말 게임을
엄청 많이 해서 그 프로파일 집 만들어야 된다
프로파일을 만드는 이제 개발자 별로 밖에 안돼 하겠죠 모든 개발자가
만들어서 그 프로파일 녹기 시작하면 은 이게 멀지 가 안되는 상황에서 라
더 힘들어 지겠죠
그럼 이게 이게 한 단계 더 발전하는 어떻게 될 수도 있냐 있다고 생각을
하냐면
프로파일 서버를 설치를 가능하게 하는 거에요 그러면 이제 내 컴퓨터에서
프로파일 가이 도톰하니 족히 고막 돌리는게 저쪽 서버 더 처장이 되고 딴
컴퓨터 1 것처 서버에 저장이 되고 그런 그 정보를 뭐 하다가 이제
그것을 걔네가 취업을 해 주고
그럼 자동으로 그거 를 이용해서 빌드 하게 해주는 그런 서비스를 만든다면
그건 훨씬 더 사용하기 편할 것 같아요
근데 일단은
그 당시에 이제 제가 이거 비주얼스튜디오 싶을 뿔의 새로 나오는 기능을
봤을 때 두 가지 가냐 큰 기능이 뭐냐면 하나가 자동 벡터와 아까 말했던
그 플로팅 포인트 변수 같은거 10개 가이 몇 개를 차례대로 곱할 때
그것을 벡터 곱셈 우는 2번 3번의 끝내주게 해주는걸 자동으로 해줘요
그거하고 이 기능 이었어요 뭐 자동 백토 벡터와 는 내가 달 딱히 키거나
끄지 않아도 이미 해주니까 다 혜택을 보고 있을 텐데
피지오 는 아직 프로파일 관리로부터 말이죠
그거는 아직도 이제 약간 수동적인 느낌이 있어서 그걸 만 했고 그것을
제가 제가요 귀 능을 이제 처음에 테스트 해보고 안 쓰 안 써 보니까 좀
됐어요 사실을
이게 자동으로 되는지는 아직 모르겠어요
예전에 같은 경우에 비쥬얼 스튜디오가 보통 언제나 모든 것을 한번은 수도
모레도 버튼 로퍼 눌러서 하게 하다가 나중엔 자동으로 계속 되게 툴을
바꾸고 있잖아요 그 gpu 나 gpu 가 아닌 cpu 나도 메모리 캡쳐
하는 그런 기능처럼
이거를 자동으로 놓았고 자동으로 빌드가 가능 했을 지도 모르겠는데
그거는 별의미가 없다고 생각하는게 인해 컴퓨터에서 아무리 프로파일 돌려
왔고 그거 정보 lg 가 르 해야하고 빌드 해봤자 빌드 뭐 신간은 것은
이제 거기서 프로파일 정보가 없잖아요
그럼 내 컴퓨터는 빠르게 돌던 게 빌드 머신에서 빌자면 드릴 수 있다는
것 은
그거는 올바른 방향은 아닌것 같은데 정확히는 지금 어떻게 되고 있는지
모르겠어요 그런데 한번 이제 시도해보고 싶은 분이나 이런 기능이 있는지
몰래 머물렀던 분은 한번쯤 써보고
이제 뭐 괜찮으면 이거를 아까 말했던 제가 어떻게 빌드 스텝을 만들어야
하는지 피지오 파일 만들어서 놓으면 뭐 이렇게 한다거나 아니면 취합 빌드
서버를 못찍음 마소가 아니었으니까
내가 직접 만들어 쓴다거나 그런 방향을 이제 고민 하시는 것도 나쁘지
않을 것 같아요 이 게임 빌드 파이프라인 쪽에서
으 에 그 정도면 이제 오늘 할 말을 한거 같네요 예 뽑혔습니다
