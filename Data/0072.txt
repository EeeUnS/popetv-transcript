오늘은 그 디버그 밀대로 얘기를 좀 해볼게요
어찌 보면 예전에 제가 블로그
제 개인 블로그 하고 그 게임 개발 포에버 거기 불러 가고 동시 게재했던
그래도 그런게 있었는데 아
그거랑 맥락을 좀 같이 하는 그리고 똑같은 건 아니고 그때 글 제목이
컴파일러 워닝 하나당 10 대씩 맞습니다 라고 흘 올렸던 것 같아요
그래서 그거 하고 좀 비슷한 얘기에요 왜냐면 어찌 제가 이제 얼마 전에
이에 있을 때 다시 한번 뼈저리게 느꼈던 거기도 하고 그래서 오늘 할
말은 디버그 빌드를 유지하라는 얘기하고 싶어요 유지 라는 게 뭐냐면 그
보통 프로그램 솔로 전시 플러스 플러스 쪽에 솔루션 작업하시는 분들은 뭐
굳이 c 플러스 플러스 가 아니어도 똑 같겠지만
디버그 빌 닭으로 릴리스 빌드 라는 게 있잖아요 이제 디버그 일대는 모든
디버그
코드 가 활성화되어 있고 아코 드 최적화도 거의 안 돼 안 돼 있기
때문에 속도는 느리지만
아코 드 라 로즈 제대로 실행되는지 볼 수 있는 그 필드가 디버그 고프
레이크 포인트 걸 수 있고 뭐 변수 받아볼 수 있고
그게 이제 그런 것이 다 빼고 뭐 최적화하고 뭐 코드 좀 척 알아서
삭제해 주고 컴파일러가 링커 가 그런게 이제 아 릴리스 빌드 라고 많이
하죠 그래서 이제 회사다 라는 릴리스 빌드 자체를 최종 빌드로 해왔고
시대 납품하는 경우도 있고 아니면 그 다음에 이제 파이널 빌드 라고 해서
더더욱 또 짤라 내니까 뭐 더 더욱 더 5 최적화 시키고 id 버그
아 기능 완벽히 빼버리고 그렇게 세 가지로 나온 사람들도 있고 아니면 은
거기다 이제 일리스 빌드 인데
여기다가 이제 프로파일을 또 하나 하기 위해서 아 뭐 프로파일 빌드에
릴리스 빌드 위에 속도만 될 수 있는건 프로파일을 달아 놓은거 그리고
심지어는 이렇게 하면 디버그 비리나 가 수락하고 안됐다 고 했잖아요
기보 그리는 최적화 안 돼 있으니까 이거를 조금 빠르겠다 2
빠르게 실행이 되면서 디버그를 할 수 있게끔 에스트 디버그 뭐 이런거
하나 만드는 경우도 있고 그래서 여러 가지가 있는데 뭐 솔직히 좀 너무
많구요
아 아 저는 일단 디버거가 윌리스 2개로 얘기해 볼게요
일단 디버그 빌드에
문제점은 당연히 속도가 느리다 하는거예요 디버그 빌드에서 정말 온갖
어썰트 놓고 뭐 이런저런 체크하면 엄청 느려지는 거 맞아요 그래서 이제
게임 어떤 경우에는 그런 경우도 많아 디버그 들 때가 너무 들여서 게임을
쉽게 실행할 수가 없다
개발중에 게임을 뭐 해 보면서 해 봐야 되는데 초당 10 프레임 도
안나온다 이래서 상당히 많은 수의 개발자들이 유니스 빌드에서 거의 게임을
개발해 요 되기 웃기는 건데
그런게 가 상당히 많아요 그러다가 어느 순간
2 모빌리스 빌드에서 뭐해서 게임플레이 프로그래머가 뭐 이런거 저런거
만들어 놓고 가도 된다고 체크인 했어 근데
디버그 빌드를 딱 빌드 해는 순간 이게 빌드가 안되는 경우도 있어요
근데 뭐 이런거 이제 뭐 큰 뭐라 그래 빌드 서버에 잡아 주제가 상관없고
더 큰 문제는 가끔 젬 일리스 빌드에서 이게 실행이 빠르니까
어떤 뭐 자료를 로딩할 때 이 자료관 로딩이 되네 억세스 해야되는데
그런걸 제대로 안해주고 a 자료 로딩하는 0.1 초 밖에 안 걸렸으니까
아무문제 찌개 쓰기 시작할 한 거에요 그래서 아무 문제없을 릴리스를 돼서
근데 기법 에 대해서는
자를 로딩 하는게 그이 초아 걸리는 거예요 그런데 다음 코드는 아 0.5
초에 실행이 되는 거야 그러면 아직도 자력을 로딩이 안됐기 때문에 그걸
x 에서 보던 포인터의 간다던가 이런 타이밍 적인 에러가 많이 나요
크래쉬 더 많이 나고 에러가 이런거 클래시 수준이죠
제 그런거를
퇴 많이 봤거든요 이에 속 그래서 아
불러 가족 디버그 빌더 아무도 안 쓰냐고 아무도 알수 안쓴다 그러더라고
가끔 쓸 있으면 그때 고쳐 쓴다 고 근데
회사가 크게 문제가 뭐냐면
상당히 많은 수의 라이브러리가 있어요 컴포넌트가 있고 그 그 수많은
라이브에 컴포넌트에서
내가 정말 모르는 부분도 있거든요 미국 정말 디버그 빌드가 빌드가 안될때
이걸 고쳐 쓰기가 상당히 힘든 경우가 있어요 정말 이해가 안되는 코드
가끔 있고 뭐 이상한 라이브 라이브 참조 했고 심지어 내가 소스 코드가
없는 경우도 있고 그래서 그런거 를 보내서
좀 디버거 퇴 힘든 경우가 몇 번 졌어요 몇번 꼭 디버그 빌드를 썼어야
말했는데 릴리스 빌드 1 2 3 빌드에서 저녁 기봉이 너무 어려워서
오히려 디버그 빌드로 가는게 더 어려워서 결과적으로는
어떻게 된 윌리스 빌드에서 해결하려고 하는 경우도 확보해야 있었고 또
코드 베이스가 방대하다 보면 디버그 빌드 한번 비자 하는데 막 30분
40분 갈리기도 하거든요 그래서 그런 것도 문제가 있었고
그렇죠 저는 어찌 보면은
가장 최악인 경우가 그 회사의 없고
정말 디버그 빌드를 가장 유지를 잘 했던 회사가 저렇게 콤
아까 그 때의 블루캐슬 게임스 서다니 때였죠 지금 캡콤이 됐지만
거기가 정말 디버그 빌드를 잘 했어요 왜냐하면 모든 사람이 d 로그에서
솔직 개발을 했거든
스 제가 그 첫 번째 하고 싶은 말은 디버그 빌드는 유치를 받으셔야 되요
리스 빌드에서 주로 개발자 개발하던 말든 나 네
디버그 빌드는 언제나 컴파일 되고 언제나 실행되고 그게 뽑아 줬다면
그거를 포갠 프로그래머가 곧바로
고쳐야 되죠 가장 최우선적으로 그래야만 따른 사람들 정말 디버깅 할
중요한 있을 때 앉도록 뭐라 그래요
시간낭비 알 수 있게 돼 좋은거 이게 첫 번째 문제요 두번째 문제는 다른
게 뭐냐면 그럼 사람들이 왜 디버그 빌드를 안 쓰냐 라는 문제가 있어요
늘이기 때문이죠 그러면 두번째 문제는 디버그 빌드를 빠르게 만들어야만
해요 사실을
그러면 어떻게 빠르게 맞느냐 좋은 얘기죠
어떻게 빠르게 만들지 그래서 이제 상당히 많은 수들이 이제 아까
말씀드렸듯이 했던게
아 디버그 액세스 디버그 빌드를 많이 만나는 거죠
체택 뭐 컴파일 낸다 테지만 아 그런 디버그 정보 다 있지만 최적화를
조금 켜 왔고 그래도 빨리 돌게 하는거 그런 방법도 있고요
아니면은
그 뭐라 그래 각 b4 별로 이제 그 디버거가 윌리스 빌드를
자기 컴퓨터에서 좀 설정을 자동적으로 해주는게 있음 더 좋죠 예를 들어서
저희가 씨 왼쪽 인 프로그래머 쪼개면 기본적으로 렌더링 만 디버그 로
돌리고 나머지는 울린 수도를 더 크게 상관 없잖아요 시스템 이날 렌더링은
기법으로 돌리고 나머지를 뭐 블리스 돌린다 던가
게임플레이 팀에서 라면 아 왼쪽으로 링이나 시스템 좀 굳이 뭐 디버그
빌드를 돌 일이 사실은 거의 없죠 쪽에서
돌리다 게 뻑이 나면 이제 그 때 저희 잡았고 이제 뻑이 난다고 얘길
하는게 좀 문제긴 한데 그래도 모르겠어요
그거를 적당히 키고 끄는 그런 옵션이 좀 있으면 좋구요 아니면 어썰트 를
좀 효과적으로 여기저기 제거하는 것만으로도 효과가 있는 경우도 있고
아니면 은 뭐 디버그 빌드에서 세트를 끝 어랏 5
그게 이제 로그로 나오는 솔직히 크게 문제 또 안되잖아요 콜 스택 못
보는거 간 문제지
그런것도 좀 꼼수는 생각해 봐야 되는 것이 있고
근데 그것도 완벽하지 않다 사실 에
엄청 는 뭐 그게 쑤셔 는 언제나
디버그 빌드를 잘 쓰는 편이거든요 사실은 왜냐하면 렌더링 쪽은 뭐 어쩌면
두 개의 레이어가 따로 있어야 좀 이해가 왜냐하면 이제 c 플러스 플러스
코드 쪽에서 이제 디버그를 열심히 돌려도 저희가 느려질 수 있는 그렇게
많지 않아요
근데 그게 아니라 이제 시적 gpu 들어가는 부분의 이제
투약 3d 런타임에 있잖아요 이거 뜻 이 버거운 릴리스 빌드 가 있는데
이것은 전혀 저희 코드 하고 상관없이 아 디렉트 x 컨트롤 파야 들어가서
수저에 가능 거에요 그걸 윌리스 를 만들면 빨라지고 디버그 로 만들면
느려지고 이런게 있기 때문에 그때 뭐 웬디 왼쪽에서는 크게 디버그 빌드가
느린 생각을 하지 못했어요
그
제트엑스 런타임을 디버그를 쓰더라도
그래서 그거는 문제가 없는데 게임플레이 쪽이 가장 큰 문제 것 같아요 제
생각에는
프레임 속도 안 나오고 그러면 문제가 되니까 그런 사람들 디버거 는 아까
말씀드린대로 베스트 디버그 그 psd 버그 쓰는 게 거의 유일한 해결
방법이지 않나 이런 생각을 하고요
더 더 좋은 방법이 있어요 누군가 알려 주시겠죠
아 그리고 지금 이제 디저트 3d 얘길 나왔으니까 또 한마디 할게요
아까 말씀드린대로 질 3d 는 원타임 자체가 디버 가고 밀스 가 있고
이것은 저희 코드 짠 디버그 밀리 쓰고 상관없이 변환이 가능 해요
스위치가 가능해요 굉장히 거쳐 내어서 단 점 하나 더 있어요
대부분의 사람들이 그냥 gx 드릴을 윌리스 를 켜 놓고 쓰거든요
빠르고 에러도 쓸데없이 덜 주고 이러니까
근데 어느순간 이거를
디버그를 돌려서 집어 게 해야 될때가 있어요 뭐 메모리 릭 문제가 발생할
때도 있고 참조 카운터 뭐 그런 것도 있고
회색을 딱 디버그 로 돌리는 순가
상당히 많은 수에 워닝 하고 애나가 뛰쳐 나는 경우가 있어요
근데 그 뛰쳐 나올 때마다 아 브레이크 갈 수가 있거든요 근데 랜드
예약에 그렇잖아요 매 프레임 한 번씩 뭐 똑같은거 계속 그려 주는
거잖아요
그 그런 브레이크의 나기 시작하면 그냥 돼 플레임 나요 거의 디버깅이
불가능할 정도로 매 프레임마다 나는 경우가 있어요 아니면 이렇게
100번의 예뻐진 않은 경우도 있고 한 프레임마다
그럼 그가 s5 물론 가기도 어렵고
그래서 또 한가지 그래픽 프로그램의 제가 추가하고 싶은 얘기는
그래피 프로그래머들은
반드시 시렌 타임 까 원 타입 뒤에 플렉스 3d 로 않다 이 뭘 디버그
로 두고 하셔야 될 것 같아요
속도 상에는 크게 차이가 없어요 개발중에 사실은
네 이제 보통 최종까지 개발 머신에서 따른 게임도 많이 하잖아요 그럼 그
때는 이제 아무래도 속도가 조금은 느린 것도 있고 그 게임 자체가 이제
줄 x 3d
디버그 런타임에서 제대로 기반한 게임도 많기 때문에 그런 부분에서 좀
딜레이 얼린 경우가 있어요 그게 좀 느려지고 약탈 씩 늘어지는 게
보이니까 그것땜에 윌리스 켜 놓고 게임을 많이 하시는데 사실은 그래야
하는거고
개발하시는 분 은 그거 반드시 대목으로 돌려주세요
왜냐하면 자기가
그래 프로그래머 자기가 코드로 짜다 깜빡이고
뭐 뭐 안한 있을수가 있죠 뭐 가끔 그 웹 스카우터를 안 줄여줘 따거나
아니면 이 함수에서 이런 페러 미터가 안 들어가야 되는 것도 잘못 높거나
릴리스 빌드 에서 그런거 뭐니 내 라는 것을 안 돼 줘요
디버그를 내 주거든요 그래서 군데 일리스 빌드할 때는 거에 잘됐어
뭐 찰 되는거라고 체크인을 한 거야 소스 코드의 엑소스 컨트롤 시스템에
근데 나중에 다른 사람이 한참 그러다가 5g 5
디버그 할거 있으니까 이것 좀 매스 카운터 좀 이상한 거 같으니까 디버
해야죠 딱히 는 순간 그 디버거 에다가 엄청 나오는 거에요
워닝 하고 에러가 도저히 따른 것 이 버그는 못할 정도로
그렇고 다 고쳐야 되거든요 2가 근데 이미 한달 동안 딴사람이 항거를
내가 고치는 것보다 내가 오늘 한거 딱 일어났을 때 고치기 훨씬 빨라요
그래서 그렇게 돼야만 정말 팀의 이라도 너무 편하거든요
그게 아니고 자꾸만 딴 사람이 만든것이다 버그가 자꾸 나오면 부주의한
걸로 그 개발문화 제독의 사람은 욕하게 되요
저새끼는 맥주라 이러면서 그리고 그렇게 서로 욕하는 문화가 생기고 남쪽
탈락 문화가 생겨 보려면
개발팀이 상당히
힘들어 져요 개판이 되어 그래서 저도 똑같은 맥락으로
그런 것도 있더라구요 이제 어떤 개발 회사나 개발팀을 보면은
기소가 4막 요크 하는 게 되게 많은거 그런거 별로 안 좋아요 그래서
그런거 말그대로 그냥 아 잘못되고 내 탓일 남 탓이다 라는 그런 개념이
강해요
그리고 난 8시 니까 내가 할 일을 얻고 아 제가 망치는 말하는 제대로
했어
그런 얘기를 하는 거죠 그 게임 망 있을 때도 그런 얘기 하잖아요 아
프로그래밍은 저한테 기획의 나빴다 라던가
이제 뭐 저도 한두 번 했던 얘기가 사실은 스페이스 마린의 관련해서 근데
가능하면 그 얘길 안 하려고 하는 얘기가
제가 기획의 나빴다 는 것은 당연히 뭐 기획자의 문제일 수 있는데
북어를 1팀의 이런 으로서 그 게임 팁에 이런 로써 제가 어떻게 다
피드백을 줘서 고쳤어요 않은 거죠 제가 그걸 정말 잘 되길 원해 쓰면
이제 저는 개인적으로 게임 계획을 못 한다고 생각해요
내가 저는 게임을 많이 하는 편도 아니고 게임을 실제 해 보자는 게
재밌는지 재미 지도 몰라
재미없어도 몰두해야 재미있는 지도 몰라요 저는 기운 인력의 상당히
부족하다고 생각하는 편이 때문에 제가 그걸 많이
못한 것에 대한 아쉬움은 있죠 내일은 했지만 팀에서 봤을 때 내일을 전체
안했다는 그런 아 책임감도 있기 때문에
아 그런거는 조금 자제 하려고 해요 그래서 어찌보면 은 프로그래머 부서
끼리 에도 싸울 날 수 있는 게 그런 거거든요
이젠 아저 to 맨날 부지 해서 디버그 빌다 1 암만 디버그 리드 신경
나서 놓았고 맨날 전 새끼들을 벗고 받아오면 저쪽 라이브러리에서 맨날 빵
난다
꽤나 큰 시도한다 이런거는 팀을 와인 시키는 것은 아직도 지름길이 줘
그래서 이제 그런거 를 피하기 위해서라도 내가 쓰는 코드 많은 디버그
빌드를 잘되고 윌리스 비대 잘되고 수다 잘되게 해야 되고
아 그리고 gx 3d 런타임 말대로 그래야 한다는 것을 말씀드리고 싶어요
그가 이제 프로그래머 같은 경우는 할 일이 2개로 된거죠 아까 그래프
프로그래머 같은 경우에 할 일이 집에 있는 거에요
디버그 빌드 cc 플러스 확실하게 잡아 줘야 되고
어 섹스 3d 에서도 확실한 문제없이 돌아가게 해야 되고
일단 뭐 디버그 비도 잘 유지하자
그게 시간 팀의 시간을 낭비하게 안하는 방법 중의 하나다
그러고 팀 sp
팀워크 그거를 이제 유지하기 위해서도 좋은 방법이다 라고 말씀을 드리고
싶어요
에
또 그 정도 된거 같아요 예 뽑혔습니다
