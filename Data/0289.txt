제가 굉장히 자주 저수준 의 중요성에 대해서 말을 했어요 그래서 오늘도
또 말하려고 해요
이거는 조금 쪼금 다른 방식으로 설명을 해보려고
제가 예전부터 그랬어요 이제 훌륭한 프로그래머가 되려면
하드웨어 라야 된다 뭐 다 프로그래머라면 하드웨어 쯤은 이런 얘기도
만들어 썼고
라이브로 했던 방송 중에서 자주 그런 얘길 했어요 그러면 이제 그 뭐라
그럴까
1 2000년도 였나 닷컴 버블 있을 때 북미 쪽에서
그때 한참 이제 뭐 자바가 되게 유행을 했었죠 뭐 가비지 컬렉터가 있는
뭐좀 메모리 관리 드려도 되는 하드웨어를 뭐라도 몰라도 할 수 있는
그래서 정말 op 진영에서 오브젝트 오리엔트 프로그래밍이 줘
그래서 얘 레드 개념은 우리가 왜 굳이 하드웨어의 뭐 그런 메모리까지
알아야 되냐 우리는 손실의 존재하는 오브젝트에 개념에서 모든걸 할 수가
있다
그래서 굉장히 어찌 보면 되게 추상적이고
어찌 오는 되게 원론적인 얘기들이 5 피었어요 그래서 저도 ob 로 물론
좋아하지만
그렇게 원론적인 얘기 는 솔직히 잘못된 거라고 봐요
그래서 그거에 이제 기초로 해서 이제 잡아라 는 언어가 또 그때 굉장히
하 됐고 그걸 열심히 해 같고 모든 프로그램이 그대로 돌다가
그때는 또 이제 닷컴 버블 있었기 때문에 말도 안되는 소리로 창업도 가능
있고 돈도 들어왔던 때요
그러다가 그게 망가지고 나서 이제
그 뭐라 그럴까
학교 들이 내게 힘들어졌고 학교들이 이제 그런 저수준 언어로 안과를
기대가 자바 언어 마가를 게다가 닭 검법을 문어 지니까 애들이 취업을
못하는 거죠 패드
그래서 얘를 졸업해서 취업할 수 있는데 는 말 그대로
그럼 원론적인 이야기를 하는데 간 실제 제품 만드는 되거든요
음 실제 제품을 만드는데 면은 생각보다
저수지를 되게 중시한 되고 되게 많았어요 지금도 그렇고 제가 볼때는
그래서
그럼 저수준 을 외 자꾸 저는 알라 그러냐
뭐 물론 저수준 어셈블리 까지 갈려면 갈 수도 있어요 근데 그거는 좀
오버 라고 생각을 하고
예전에 이제 어셈블리어 짧고 성능을 청도 때는 어셈블리를 자야 했던
시절은 많이 줄어 들었죠
이제 그럼 그 다음에 이제 똑같은 논리로 사람들이
아저 수준을 몰라도 뭐라 그럴까
그 op 만 순수 op 만 지원하는 언어 만으로도 충분히 제품을 만들 수
있다라는 걸로 밀고 나갔고 앞으로 컴퓨터가 발전하면서 도 그럴 거다 라고
밀고 나갔지만
일단 저희는 cpu 속도의 한계를 받았구요 지금 뭐 뭐 이론가 그래서
일단 cpu 가 뭐 8년 전의 산것도 지금도 아무 무리없이 더 정도로
지폐 속도 향상이 안되고 있고 그 단순하게 그냥 cpu 가 빨라지고 이로
인해서 더 야 신경 안 쓸 정도로 빨라 진다는 것은 이제 불가능해요 오지
않아요
물리적인 법칙에 의해 그쵸 그러면 지금도 는 컴퓨터에서 충분히 빠른
프로그램을 돌려야 되는 거에요 근데
현존하고 있는 그런 뭐라 그럴까
가비지 컬렉터 기반 버추얼 머신 기반의 언어들은
그 정도로 빠르지 못해요 뭐 정말 속도가 필요없는 대해서는 충분히 빠를
수도 있지만
어 특히 제 게임 쪽이 라던가 아니면 이제 요즘 머신 러닝 쪽도 많이
들어오고 있잖아요 그런 쪽이 라던가
이제 뭔가 달해 대량 연산이 필요한 필요 할수록 이제
컴퓨터의 속도를 쥐어짜 이가 어려운 거죠 그런 언어로는
그래서 재미있는 것은 지금 쿠다 그 나오잖아요 쿠다 막 그 엔비디아 에서
gpu 돌렸고 대량 영상 하는거 거기서 누가 버추얼 모십니다 써요
버추얼 머신 비해 맞죠 곧 누웠어요
다시 로 쓰잖아요 cc 개념의 있는 그런 하드웨어에 직접 에 접근할 수
있는 가장 빠른 언어들
어셈블리는 아닌 그래서 일단 그런 거에서 그냥 가만히 있으면 지금 이렇게
뭐랄까 오버헤드가 굉장히 큰 언어 자바 시작일은 무르
그게 충분히 빨라져서 모든걸 할 수가 있다 라는 것에서 조금은
의심스러운 거예요 조금은
그래서 굼 성능을 위해 조순이 중요하다
참 좋은 얘기죠 성 뿐만이 아니에요
자기가 이해 못하는 버그를 이해할 때도 도움이 되요 제가 한때 이제
주니어 들한테 한 얘기가 있어요
요즘은 제가 저술 느낀건데
컴퓨터에 버그가 생기면 애드 체가 찾았거든요 되게 멈 이상한데 먹어 나도
그 프로그래머가 나는거 그럼 애들이 뭐가 어떻게 잡았네요 그러면
설명을 해주며 아니 이런 이런 문제가 있으면 이건 컴퓨터 개념 에서 절대
이렇게 이해할 수 없는 부분이고 컴퓨터 절대 이렇게 점수가 없기 때문에
이게 뻑이 날리면 이런 문제가 있어야 되고 그리고 그 컴퓨터가 도는
원리를 알면 그런게 되는거 컴퓨터가 도는 원칙상 이거는 말이 안되고
이거는 말이 되고 그러면 이런 현상이 달래면 이런 이런 문제가 있었고
그럼 여기를 봐야 된다 이런게 나오는 거예요
4 걔들 들으면서 그럼 어떻게 아니에요 그럼 아니 컴퓨터가 내부에서 뭐
레지스터가 이렇게 돌고 뭐 메모리가 이렇게 돌고 뭐 이런것도 있잖아요
그거 뭐 이렇게 되면 이렇게 되는 거다 메모리가 여기서 이렇게 덮었으면
이 부분이 날라갈 수도 있고 만일 이런 얘기 될 그런 것들을
잘 몰라요 지금 많은 사람들이
근데 결과적으로 그런 버그가 때문에 제품이 못나가고 그런 부분 때문에 몇
달 남기고 이런 경우도 많았거든요
물론 어셈블리어 로 모두 짜는 건 말이 안되는 이유가 요즘은 가면 갈수록
쌓은 데 시간이 많이 든다는 거죠
근데 지금 요즘 사람들이 생각하는 것만큼 시 사비나 자바가
c+ 뿔의 비해 그렇게 시간이 개발 개발 시간이 걱 왕창 줄어들지도 아요
이젠 왜냐하면 집 부분도 많이 뭐더라 될거라 입으로 이 더 많이 좋은게
있기 때문에 그래서 결과적으로는
개발 속도 단축은 역시 자바나 c # 약간은 빠르지 마
그렇다고 그게 엄청나게 빠른 게 아니라는 거죠
더 또 다른 얘기로는 이제 그렇게 하드웨어를 잘 이해하는 사람들이 없기
때문에 그런 사람들이 이제 메모리 같은 것 뻥 얘기가 있으니까 그것을
막으려고 시장이나 잘 쓴다는 얘기도 있어요 그건 어느 정도 던가 말하는데
결과적으로 저는 그냥 모든 사람이 실력 좀 더 좋아 했으면 좋겠 거든요
그런 의미에서 다시 본론으로 돌아가
작 자 미역의 너무 맛 5
이렇게 생각을 하면 되요
10 옛날에 한창 유명했던 책이 중에 이제 화 성남 화성 에서 온 남자
금성 에서 온 여자 안과 그 반대가 이익의 있어요
한마디로 남자와 여자의 차이를 얘기하는 거에요 남자는 이런 언어를 쓰고
여자는 이런 쓴다
서로 단어 다른 언어로 쓰이기 때문에 서로 이해를 못하고 거기서 갈등이
생긴다
프로그래머 도 마찬가지예요 저희는 결과적으론
컴퓨터에서도 는 프로그램을 만드는 거에요 컴퓨터 아키텍처는
좀 나아지긴 했지만 기본적으로 프로그램이 도는 방법은 차이가 없어요
언젠가 메모리에 뭔가를 쳐 받고 메모리의 일부분을 명령으로 인식하게 하고
메모리 어느 부분의 값을 대입하고 그 값을 대입하는 메모리 영역을
아 동적으로 할당할 수도 있고 지울 수도 있고 기타 등등
컴퓨터는 그걸 도는 거예요 다른게 없어요 컴퓨터는 모든게 메모리에 있는
숫자 일 뿐이고 그 메모리에 있는 무 숫자를 어떻게 이 하느냐 이게
명령어 냐
이게 데이턴 야 그거 에 따라 컴퓨터 그런 게 전부에요
그리고 그것을 만들기 위해서 온갖 그 뛰어나 엔지니어링에 포트가 들어가고
뭐 지금은 옵티마이저 전까지 들어가고 치는 것 까지 6 cpu 쓰는
것까지 들어가서
뭔가 미친짓을 하고 있죠 근데 그것을 어느 정도 이해를 못하면 우리는
그냥 아 그래
시선 자바는 이런거 고 아머 메모리 관리 하는 세준 되고 이렇게 하면은
알았어 없겠지
이 거에요 한마디로 어딘가에서는 갈등이 생기는 거죠
어디가 충돌이 생긴다는 거죠 그리고 이거를 저희 가진 말아 말해 논거를
이 컴퓨터 언어로 옮기기 위해서는 컴퓨터에 이해하는 진짜 이스트 옵션으로
옮기기 위해서는 중간에 어떤 과정이 있다는 거 아니에요
근데 cnc 프 프 아니면 러스트 가트너는
이거를 직접 컴파일 도중에 시간을 많이 쳐 부어서 완벽히 컴파일해서
어셈블리 수준을 바꿔준다는 거고 그러면 이 개념이 뭐냐면
금성 남자 뭐 남자 라고 하죠 화성 여자가 있다면
중간에 통과가 있는 거야 여기 사람의 책을 쓴 거야
금성 남자 책을 쓰면 옆에서 번역과 번역을 다해요 정말 잘하는 번역가가
딱 번역을 해서 이 화성 여자가 이해할 수 있는 책을 딱 중 거에요 그럼
하자는 책만 읽었는데
이게 점이에요 그런데 자바나 c 샵에 개념 뭐냐면
실시간 통역 이야 그 실시간 토막 해봤죠
들어갔죠 어디가서도 미리 그 토르 자한테 원문 안주고 그냥 말을 하는
거야 막 그 말 동안 실시간 통에 아무리 잘해봐야 중간에 얻어 음 멈추고
중간에 감정 약간 읽고 하면서 들으면서 좀 마음에 안 되잖아요
그게 열매 요 그래서 그 실시간 도는게
그렇게 뛰어날 수 있다 없다고 봐요 왜냐하면 은 일단 이 화성 아까 그
중에서 화성 했어 뭐 금성 남자가 서는 이 언어가 굉장히 다양하고 단순한
언어가 아니야
다음에 10개 가 아니라 나타나 5만개 를 쓰는 거에요 그것을 어떻게
화성 여자가 이해하는 이상을 단어 2개만 쓰는데 10개 라고 하자 그
10개 나는 어떻게든 설명하고 있는 거예요 그 힘들다는 거죠
근데 중간에 누군가가 정말 뭐 잘하는 건 효과가 말 그대로
약 시간을 엄청나게 버 부어서 땅 그 사람이 이해할 수 있는 수준으로
언어로 딱 만들어주면 이해할 수 있게 싶다는 거죠
그 개념이 에요 그래서 결과적으론 아무리 뭐 아 그 정도의 성능이 문제가
안돼 라는 그런 세상이 오기를 우린 다 바랬어요 사실은 왜냐면 어셈블리가
그랬으니까
그러나 재미있는것은 그 어셈블리 nc 플 넘어올 때 그
뭐라 그럴까
그런 과정이 있었다고 그 똑같은 역사가 다른거에 반복이 되신
않았던 것 같아요 그래서 그게 좀 아쉬운 8 점이에요 사실은 저도 이제
시작을 되게 좋아하는 사람으로써
좀 아직도 10분을 써야 될 때가 있다는 건 좀 아쉬운데
이거는 어떻게 될 거 같지가 않아요
그리구 똑같은 얘기를 이제
특히나 이제 따른 회사 라이브러리를 갖다 쓰는 경우가 있잖아요 오픈 소스
면 좀 더 문제가 심각하고
그런 데서는 또 그 라이브에서 안에서 뻑이 나기 시작할 때 과연 이거를
잡을 수 있는 사람들이 점점 줄어들고 있지 않나 생각이 들어요
그냥 뭔가 다 써 그러면 어미 데 코드가 인데 잘 모르겠는 거야 그럼 그
문제를 다 해결하려는 결과적으로 저주는 아야 되거든요 이런 컴퓨터가
어떻게 좋은지 알아 라고 할 거 아니에요
똑같은 거에요 또 이제 뭐 어디 나라의 여행에 마쓰 똑같아
통영을 끼고 여행을 할 수 있어요 뭐 돈도 좀 더 들고 시간 덜 더 들고
그렇죠 근데 그 나라 언어를 되게 자유롭게 할 수 있으면 그 나라 가서
굉장히 편해요
뭐 어디 가기도 편하고 뭐 중간에 로스팅 최안순 레이 션 이라고 하죠
통역하는 중간에 의미 바뀌는것 그런것도 없고 그래서 저는 정말 개발자라면
내가 뭔가를 돌리려고 하는 기회를 굉장히 잘 이해해야 된다고 생각을 해요
그것은 당연한 게 아닌가 싶어 예를 들어서 내가 어떤 사람을 만나서 결혼
하려고 해도 그 사람을 잘 이해할 거 아니에요 이 사람이 어떤 사람인지
그게 아니라 그냥 알고 대충 맞을 거야 추상적으로 이건 또 말이
안되잖아요
써
뭐라 그럴까 뭐 또 카메라 좋아하시는 분들 사진 참 찍기 좋아하시는
분들은 엄청 잘 아시잖아요 말게 막 이거 뭐 포커스는 뭐고 노출 머금어
조리개가 어떻게 이런 것 아시잖아요
그런 사람들이 말 풀어 가 될 수 있는거고 뭐 아마추어들은 그냥 그렇게
조직적 아장 찍어주는데 아예 찍으니까 배포 괜찮어
그러나 딱 프로가 찌의 몸은 확실히 다르잖아요
저는 개발도 그런거라고 봐요 정말 프로가 되려면 내가 쓰는 빅 이에 이게
어떻게 되고 심지어는 어느 순간엔 하드웨어에 문제가 있어서 컴퓨터 어떤게
날수도 있어요
그러면 이것을 모든 걸 제외하고 아 이거는 여기서 전류가 과도하게
흐르면서 뻑이 난과 까지 판단이 가능할 정도가 되는 사람이 좀 프로모
어때요 정말로
근데 뭐 이걸 어느 순간 막무가내로 r 그랜 하드웨어 하드웨어 고
프로그램으로 저런 다른 관계야
저녁이고 분리 시키는 것도 말이 안 되죠 자동차 운전하는 사람들도 왜
싱아는 사람들 토크가 뭐 먹을 거 엄청 잘 알아요 그냥 감으로 2개씩
된다는 게 아니라 자동차가 도는 원리까지 알거든요
그래서 저는 모든 분야에 진짜 푸르고 마스터란 사람들이 자기가
인턴은 자동차 자기가 쓰는 카메라 자기가 사용하는 도구의
어떻게 들고 어떻게 맥의 효율적으로 되는지를 잘 이해하는 데 왜 굳이
프로그램을 들 보고 이제 우리는 소프트웨어 엔지니어 라고 우기고 싶잖아요
좌측의 엔지니어 라고 우기는 데 그 엔지니어가 되고 싶은 사람들이 어디서
그런 말도 안되는
책임의 필요하고 있는지 정말 이해가 안되요 그래서 정말 하드웨어를 모르고
무슨 이익이 아키텍처 만 잘 이해하고 무슨 이것만 잘하면 된다 절대
아니라고 말 건 불가능해요
실제로 이제 이거는 영천 님이 2형 1000cc 그 페이스북에 덮어
올리셨던 얘기인데
막 마이크로소프트의 몸을 엄마 내줘 만들고 만 윈도우 커널 만든 이런
사람도 있잖아요 그 사람들 다 그 5레벨 개발자의 요 그 사람들이 무슨
op 의 개념을 열심히 공부해서 이걸 한 사람들이 아니라 정말 하드웨어
부터 시작을 해서 그 하드웨어가 어떻게 돈 질이 애라고
그걸 이해하고 있기 때문에 그 나중에 어떤 op 기반을 올려도 어떠
아키텍쳐 도울 수 있는 os 도 만드는 거고 그리고 막 그 뭐죠
그 버추얼 머신 올리려면 이제 하이퍼 b 같은거 만들잖아요 하이퍼바이저
인가
그런거 만드는거 심지어는 그 지금 해줘서 는게 완벽히 엘프가 이제 개념일
거 아니에요
그런거를 몇 천 몇 만 드려 10만대를 돌 있을 정도의 구조로 만든
사람들은
결과적으로는 하드웨어를 정말 잘하는 사람들이 있더라구요
그래서
초인은 좀 뭐라 그럴까 변명을 좀 그만했으면 좋겠어요
개발자 인데 않은 투 유마 개발자가 될 거야 어떻게 된건데
답이 없어 그리고 아 이거 이렇게 로 레벨을 좀 더 해야 된다 조 수준을
놓고 왜요 필요없지 않잖아요
이 얘기를 하는 거야 저는 그게
에 좀 안쓰러워요 까
자꾸만 분명히 가야 되는 길이 정해져 있다고 보는데 저는
훌륭한 개발자가 되기 위해서는 그
중요한거 정말 기본이 은 핵심을 보지 하고 자꾸만
뭐라 그래서 이거 장기 술만 계속 늘려가는 것도 되게 하시고 사람들
2장 기술은 코어 만 작품을 굉장히 쉽게 배울 수 있는 거거든요
그렇기 때문에 우리가 정말 뛰어나다고 생각하는 그런 개발자들의 전부다
닿고 가 있고 장 기술을 위해 배운 사람들이 g
쉽게 장기수 만 해 왔고 그렇게 유명한 개발자가 된 사람은 없잖아요 사실
그러니까 뭐 제품 빤짝 해서 벗어 그 개발자 말고 정말 개발자 유명한
개발 줘 그 프로그래머
그래서 저수준 의 중요성을 한번 더 강조를 하고 싶었어요
야 새로운 비유로 아까 화성 는데 금성 남자 여자 그리고 자동차 운전
카메라 찍는 사람들이 이런걸로
음 뽑혔습니다
