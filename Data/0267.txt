옛날에 한번
쫌 오래된 비디오 원대 싶을 프레 서
유니코드 한참 이란 비디오를 올린적이 있어요 그때 이제 얼마나 싶어 리드
유니코드 지원 아이가 힘든지 를 얘기 했었는데 그때 이제 제가 물론 뭐
유니코드 에 가스 속에 들어가면 뭐 코드 페이지 있고 글자 있고 이런게
있는데 그거에 대해서는 이제
저랑 이제 한번 한두 번 하고 본 적이 있었고 그 당시에는 고등학생
이었지만 굉장히 미래가 촉망되는 프로그래머 어떤
여전히 촉망되는 프로그래머 예요
그 정찰 c 최종찬 림 이라고 하죠
급전 칡 조정 창림 2일 조미 께 아 이런건 용어로 좀 이렇게 제대로
적립을 해야 된다 라고 까지 얘기를 하려고
그 때문에 이제 유니코드로 그래서 그렇구나 어차피 나는 유니코드 별로
만들 일이 없으니까 싶어 풀에서 지금 쓰지 말자 라고 넘어 갔었죠
그러다가 이제 최근에 다시 좀 유니코드를 지원해야 되는 싶을 뿔 게임
엔진을
개인적으로 조금 만 만들고 있고 그런게 있어서 생각을 좀 많이 했었어요
과연 이제 내가 멀티 언어를 제대로 지원하려면 어떻게 해야 될까
그러다가 이제 다시 유니코드 스펙을 좀 더 보고 고민을 많이 했죠
그 다음에 재미있었던 재미있는 웹사이트 라사 였어요
utf a 에브리웨어 인데 이제 한국 말라는 utf-8 을 모두 다 쓰자
얘기였는데
일단 다시 utf 가 뭔지 조금 정리를 하자면
utf 가 이제 유니코드 이제 뭐 그 인코딩 이라고 해야 되는지 뭐
페이지
코그모 잘 모르겠는데 어쨌든 그 스펙 중에 하나에요
그래서 utf-8 꽈 16과 32 가 보통 있다고 보는데
역사적으로 데이 재미있어요 역사적으로 유니코드가 처음 나올때
세상에 있는 모든 글자는
두 바이트로 표현이 가능하다
그러니까 지금 우리가 아스키 코드는 뭐 0부터 255 고 영어만 표현이
가능하고 예전에는
한글을 하기 위해 거기에도 이상하게 섞어 낫잖아요
근데 u 그 처음의 유니코드가 나올때 타입 아이템만 있으면 2바이트 며
이에 16승 이거든요
그 안에 3개의 모든 언어를 쳐다볼 수 있다 라고 생각을 해서 모든
글자를
그래서 그거 따라 이제 윈도우 서쪽에서 만드는게
멀티 바이트 코드 라고 이거 유니코드 쪼그만 아니에요
그래서 입 it 의 모든것을 들어가게 만들었어요 그래서 윈도우 api
쓰시는 분들 보면 가끔 멀티 바이트 코드 만들고 이런거 있잖아요 그게
바로 그 규격에 의해서 고 일부분은 utf-16 가고 맞긴 맞아요 근데
나중에 보니까 꽃 전세계 언어가 다 안들어가
아 중국 논도 낮고 이게 된거 야 맞설 체중 거도 되어진 2바이트 안에
들어가야 사실은
근데 그 상황에서 그러면 아 그러면 어떤 캐릭터를 표현하기 위해서는
4byte 가 필요한 거예요
요즘 유니코드 에 아이콘도 들어가요 이모티콘
그래서 4byte 가 필요할까 이 유니코드 아까 막 멀티 바이크로 작동을
안하고
대신 utf-16 의 제대로 된 줄 격은
이 기본 단위가 2바이트 뿐이고 이게 하나가 넘어가면 2바이트 더
추가해서 4byte 가 될 수도 있는 거예요
그리고 뭐 더 추가하면 워터 드러나면 6발 돼서 8반 해지될 수 있고
이것을 하나하나에 그 짤리는 그거 있죠 뭐라 그럴까
증가 단위가 2바이트 일 뿐이에요 utf-16 이렇게 나왔고
그런데 재미있는것은 utf-16 이라는 것은 바이트가 1byte 이
바이트가 있는거잖아요
그럼 메모리에서 첫번째 바이트에 두 번째 바이트가 들어가요 왼쪽
오른쪽으로
근데 이 메모리 구조 상 cpu 아키텍처 상 니 트렌디한 과 비교해
인디언이 있거든요 의미는 뭐냐면
제 왼쪽에 있는게 머리 구조에서 이게 바이트 형이야 이리아 그 거에요
그래서 그거 따라 이제 그 수소의 차리 좋을까 두발 2 박으면 이게
1 2 이렇게 알수 있어요 순서로 0 1 이렇게 하거나 그 반대로 0 1
이렇게 하거나 이게 4byte 가 되고 똑같아요 0 1 2 3의 선수로
하거나 0 1 2 3
이 순서로 가거나 그래서 그것 때문에 이제
똑같이 규격을 저희 터 어떤 앤디 안쓰는거 있다 이렇게 바뀔 수가 있어요
그래서 utf-16 또 그런거를 지원해요
이게 뭐 이쪽 ng 안 잊어 nd 아닌지 한마디로 엄청 고 라프 줘
utf 30 이라는 것은 기본적으로 1
그 모든 따 최소단위 최소 크기 한 글자에 최소 크기가 무조건 30 32
비트 라는 거에 4바이트 32비트 하는거예요 그래서
아스키 코드 a 를 넣어도 이거는 32비트 다
2개 내면 되는거죠 그래서 이거는 뭐 세상의 모든 단어를 1단 모든
글자를 현재 1
4바이트 불나게 놓을 순 있지만 그렇고 낭비가 많아 지는 그런 것도
있는거고
utf-8 으 으
아까 말했던 그런 바이트 짓는 문제가 없어요
있을수가 없죠 그 대신에
또 재미있는게 아스키 코드를 그냥 조 쓸 때 아스카의 0부터 128
이잖아요
utf-8 스펙 때로 보면은
이게 그냥 똑같아요 아스키 코드를
내 아스키 코드가 아닌 게 넘어 갈수록 이제 바뀌는 거니까 127 같지는
7 까지는 아스키 란 더 갖고 그 다음부터는 달라져요 그래서
utf-8 데브 예로 돌아가면 은 얘 내가 하는 말은 유튜브 시는 버려
이젠 30 어려 다 버려 그 utf-8 으로 가 이게 재개할 꺾고 제
편해 라고 말하는 거에요
그래서 저도 이제 고민을 하다가 저도 내부 구현을 결과적으로 유튜브 팔고
나갔어요
그 이유가 뭐냐면 유튜브 파리의 아까 많다 120세까지 나스카 똑같잖아요
그리고 그 다음에 이제 다른 캐릭터에게 를 더한 그 캐릭터를 만들 때는
이게 1 3 바이트 정도가 되어 사실은 그게 왜 그러냐면
얘 내가 이게 계속 연속이 되는 바이트 인지 아니면 은 여기서 한 글자
끝나는지 를 표현하기 위해 제 비틀즈의 높은 비트 수의 특별한 그 비트
패턴을 넣어야 예를 들어서 제 앞에 밑에 제가 좀 한번 스펙을 찾아볼게요
제가 지금 기억이 정확히 한다는데 많이 한 한잔을 넘어서
제 앞에 제 기억에는 0이면 은 그걸로 글자가 거기서 끝나는 거예요
그래서 만약에 스트링 랜스 함수를 뭐 쓰거나 그럴 때도 그 자체가 앞에
비트가 0 인지에 따라 그게 실제 스트링 그 뭐라 그럴까
뎁스 라는 걸 확인할 엑스 트레인 기기라는 거 아니었어요 글짜가 거기에
하나가 있다
그리고 만약에 얘 내가 계속 연결이 되는 것 아 이래서 바이트가 연결이
되는 거다 그러면 첫 번째 바이트는 바로 나와요 첫 번째 바이트가 3개가
111 빵 빵 으로 시작하는 거기서 끝난 거고
1 1 빵으로 시작하면 그게 2 바이트 짜리 글자의 요 그리고 게일 일방
2명 그 색을 세번째
그리고 바이트가 3개 그리고 1
빵 그럼 4개 자나 일이 그리고 빵 있잖아요 그러면 바이트의 내게 짜리
라는 거에요
그리고 그 뒤에 오는 모든 바이트를
는 일방 업의 시작을 해요 그래서 스트링 랭스 구하는 함수를 만들 때도
바이트 쪼 쳐박아 두고 앞에 거 만 딱 보면 되는거예요
또 내게 미리 빵이 야
1빠 미야 111 빵야 1 1 방향 이런식으로
그러면은 그 점프 하면서 숫자 일까 스트링스 쉽게 구할 수 있고
그로써 이제 이거 를 쓰기 시작하면 은 보통 캐릭터 어레이를 쓰잖아요
유인 트인 어레이 그 어레이 길이가 스트링 길이가 아니게 되는 거죠
그래서
근데 단점은 윈도우 자체에서 utf-8 을 그렇게 잘 지원하지 않아요
그리고 좀 싶을 뿔에서 조금 함수가 나오고 이런게 있긴 한데
그 윈도우 세이펜 여정이다 아까 말했던 멀티바이트 utf-16 에는 약간
틀 떨어지네
그렇게 작용을 하고 그래서 utf asu 에서 말하는 건 뭐냐면 이
프로그램 안에서 도는 모든 스트링은 기본이 utf-8 이라고 가져온 해라
이어 코드를 짤 때 그러면 하나로 통일 되니까 알게 아스키 캐릭터인지
유니코드 캐릭터인지 고민할 필요도 없고 딱 하나로 가고
마지막에 그 외부에 2배 호출할때 이럴 도서 파일 고뇌 잎의 라던가
이런걸 어쨌든 걔는 멀티 바이트 를 받을 수 밖에 없거든요
그럼 그 순간에만 머시 뿔 함수 중에 utf as 16 으로 바꾸는 게
제 들어왔어요 그런 식으로
그걸 써서 변환해서 호출하고 아니면 뭐 또 역시 읽어본 게 있으면 ap
에서 읽어온 다음에 그 순간 sb 탭의 레이스를 더해 선이 코드 안에서는
utf-8 이다 돌아라
그 얘길 해요 그러면서 이제 하는 얘기가
utf-16 을 쓰는 이우 중의 하나가 사실은
웬만한 한국 언어들이 2바이트 다 들어가야 한국어는 다이바 이때
들어가거든요
그래서 굳이 3 바이트를 갈 필요가 없으니까 공간을 아낄 수 있다
이 건데 뭐 소치 금맥 머리가 좀 많이 남기 때문에 전보다 3발 지더라도
코드가 깔끔해지고 모든 게 이렇게 명백하게 들어갈 수 있다면 utf-8
낫다는 거죠 그리고
utf-8 3 장점 중에 또 하나가 제 생각에는 그 거에요
아스키 코드로 많이 놓여 솔직히 코딩 1 보면 한번 룰 필요없고 영어만
했으니까
아스키 코드가 들어가는 순간에 그 아스키 코드가 그냥 이제 쉽게 읽을 수
있는거죠 어떻게 얘기하면 은 그 실제 우리가 보다 책까지 보다 디코더
라이치 한다는 것도 프로그래머 입장에서 큰 장점 중의 하나요
그리고 아까 말했던 인디안 앤디 알리스
이게 바이트 코드가 0 1 2 3 인지 3위 1 0 인지
그거에 따른 부분이 없다는 것도 장점 중에 하나구요
그래서 저도 코드를 일단은 그 방향으로 짰어요 그래서 저도 이제 니트
face 기본적으로 직원이 유니코드 고 다른 이 곳은 절대 지원한 하고요
그러나 저는 약간 한가지 다르게 않 게 뭐냐면 정말 아스키 스트링을 따로
뺐어요 그래도 왜냐하면 은 내부적으로 전원이 제모
뭐 그러니까 이 유 저한테 보여주는 스트링 도 아니고 음 뭐라고 해야될까
이찌 한테 보여주는 게 아니고 파일시스템을 긁는 것도 아니구요 제
프로그램 안에서만 도는거 그런건 솔직히 굳이 제가 유니콘을 써야 돼
필요성을 못 느꼈거든요
그래서 솔직히 제가 클래스를 두개 만들어 냈어요 스트링 하나고 유니코드
스트링 하고
그리고 이제 그 암에 어서 틀을 열심히 봐서 이제 아스키 스트링을 제
앞에 가 언제나 영 이라는 걸 확인을 하고
아 utf 스트링은 아까 etf a 스트링은 제가 말했듯이 아스키 소지
포함하는 개념이기 때문에 그냥 냅두고
그래서 이제 그 두 스트링 클래스 의 차이는
일반 스트림 클래스 는 이제
목 그 길이가 배열에 길이가
스텍 스트링에 기대하고 가정을 하죠 이제 그거를
디버그 때는 이었어 틀을 박 않아서 앞에 0이 있는지 없는지 확인해서
확실하게 사람들이 코드를 유니콘 웃는 순간 어 수프가 나겠다 바꾼 것
뿐이고 그래서 외부에서 들어오는 스트링 들은 절대 여기에 못 들어가게 돼
있어요 그래서 그런 식으로 이제 어서 틀을 통해서 좀 이용을 좀 제안을
한 게 전부고
그래도 제가 utf-8 내부의 이어 읽어보고 한참 고민도 해보고 이것 좀
코딩 듣자 갔는데
확실히 가장 깔끔해 요 가장 깔끔해요
그 메모리에 약간의 문제가 있지만 좀더 메모리를 과 소비하는
이게 만약에 와이어 그러니까 네트워크를 통해 주고 받아야 되는 스트링이
라면은
아 축을 하면 될거 같긴 해요 사실은 압축을 해서 보내도 되고 뭐 그게
아니면 은 뭐 그런 트래픽이 뭐 1.5 배 들어가는거 에 문제가 없던
그냥 보내야 되고
생각보다 utf-8 을 압축을 했을 때 압축률이 좋다고 나오더라구요 건
utf-8 에 브 해보면 나와요 그래서 그거를
오셔도 상관 없을것 같고 그리고 만약에 보낸 스트링이 순수하게 모두 다
한 글이 아니라 대부분이 영어라면
아 영화가 한걸 비율이 뭐 80대 20 이라면
80% 는 그냥 일반 쓰는거구요 20% 만 이 발칙 서 쓰는 거거든요
그러면 실제 늘어 않은 바이트 저도 그렇게 많지 않아요 뭐
압축형 되고 써서 제가 utf 일에 후회란 것 같고 저도 조금 구현해 본
상황에서 뭐 이게 라이브러리가 엄청나서 누가 줄 수 있는 라이브 아니에요
젠젠 쓰기에 만든 간단한 클래스 밖의 일 뿐이지
써본결과 저는 만족스러워요 그래서 음
유니코드를 지원할 생각을 하시는 분들 음
단순하게 그냥 지금 2바이트 씨팍 아바가 넣어서
지원 안되는 캐릭터 무시하고 이럴 사람들이 아니라면 은 한번도 만드시던
utf-8 이쪽을 고려해 보시는것도 좋을것 같아요
물론 이거에 대해서 반발을 하는 사람들이 있게 있어요 이거 v 캡틴 이거
신앙 거다 라고
현재 으 보기 참 저서
음 왼쪽은 전부다
utf 에이스 러브 정리 됐죠 이 태그 16 2 나왔음에도 불구하고
유튜브 에이스 거 있어요
맵 쪽은 영어가 많아서
그래도 이제 utf ac 굉장히 많아지고 적립이 되어 가는 과정이고 제가
볼때는 여러가지 utf 확실히 스펙 전에 가장 많이 쓰고 딜듀 fa 시구
저는 걸 나쁘지 않다고 봐요 그래서 utf-8 이쪽을 음 저는 개인적으로
추천합니다
그래서 제가 최근에 만들었던 유니코드 뻘짓을 0 일을 했고
으 그 utf afl 이외에 어 웹사이트는 밑에 제가 붙이던 갈게요
예 뽑혔습니다
