으
예 안녕하세요 아 아 보프 입니다
예전에 한번 실리콘 델리 숍 에 있는 그 신생 모바일 회사에 대한 접을
한번 보러 갔었어요
7시간 얹어 본거 같아요 면접을 보면서
안 면 족과 안교 이제 한번에 한명씩 도로 않는단 1 곰 험 명 7명을
면접을 봤는데 마지막에 들어온 면접관이 있었는데
질문을 이제 하는데 굉장히 제 현실 하고 떨어진 질문을 많이 하더라구요
뭐 아 우리가 이런 게임이 있는데 만약 이 게임에서
우리가 뭐 아이템을 뭐 밀리 어느 믿는건 100만개의 정도로 집어넣고 뭐
그것을 좋아 팔려면 어떻게 할 거냐 뭐 이런 그 자료구조를 잡아라 이런
질문을 하는데 즉 처음 했던 여인 그 거였어요
일단 너네 게임 디자인이 그렇게 나오는 건 말도 안 되기 때문에 생각해도
별 볼 필요도 없는 문제지만
나라면 은 이렇게 이렇게 이렇게 이렇게 해서 이런 자료들을 짜겠다 하지만
여전히 말했듯이 이것은 전혀 필요없는 자료구조 다 그런 식으로 얘기를
했고 이제 그런거 있잖아요 프로그램 없이 아시겠지만 이런 적으로 아
100 더 어레이 가 빠른 야 뭐 해쉬맵 이뻐하는 야 뭐 이런 개념들을
다 배우 셨을 거에요 네 이제 이 사람은 뭐 그런거를 이제 계속 따지고
들어가려 그래서 저는 딱 답을 어떻게 되냐면 은
이론적으로는 뭐 이런 이런 이런 문제에서는 당연히 애쉬를 서혜 쉼 해볼수
있는게 빠르지만
지금 당신이 만들려고 하는 하드웨어 에서는 모든 간의 벡터로 바라는게
어레이를 쓰는게 제일 빠르다 라고 말했는데 그 말에 이해를 못하더라구요
그래서 뭐 어쨌든 뭐 그러려니 하고 뭐 면서 다 끝내고 이제 서는 그
실리콘 밸리에서 비행기 타고 먼저 각 보라가 썼으니까 벤쿠버로 돌아와서
있었는데 이제 다음 나인가 뭐다 다음 날인가 채용을 하게 돼요
봉급도 굉장히 높았어요 사실은 이제 제가 한마디로
안가겠다고 했죠 이제 그쪽에서 왜 안 오겠다고 모르는데
이제 그 이수가 뭐 있냐며 는 저를 마지막 면접 봤던 사람이 그
프로그래머 최고 태 빵이에요 그런거 시티 오라고 1 요지 테크닉으로 빛을
그 회사의 프로그램 최고 대 빵인데
그러니 사람이 이제 자기가 프로그래머 게임을 만드는 하드웨어 자체가
이해를 못 하고 있다 있다는 게 되게 돌았어요
일단 최근에 이제 모던 하드웨어를 보면은
그 모 캐시 라던가 뭐 이런 부분 때문에 웬만한 경우에서는 해쉬맵 보다는
말그대로 그냥 어레이를 쓰는 게 훨씬 빨라요
근데 이제 그 때 이상하게 만드냐
뭐 플랫폼이 있었는데 자기는 그런 거 조차 모르고 있더라구요 그래서 그
사람이 전에 가셔도 물어봤어요 왜 안했냐 그래서
거기 사람들 실력보다
예 실력이 너무 좋아서 못 가겠다고 되게
거만하게 말을 했어요
그쪽에서는 끝까지 저를 잡으려고 했는데 제가 그 얘기 까지 했죠 이제
당신 지금 나온 그 게임들이
지금 내 핸드폰 딱 일 년 반 대 핸드폰에서 못 본다
이게 말이 되냐 그니까 자기들은 원래 최신 기종 만 우릴 거고 그리고
괜히 막 그 노 우 레 될까 저수준 의 최적화를 위해서 뭐 어셈블리
라던가 이런 걸 쳐 박으면서 코드 베이스를 망치고 싶지 않다는 거에요
4 초는 어이가 없던 게 정말 말그대로 어레이 하고 핵심에 둘 중에 하나
것은 문제라 그는 이것은 말그대로 코드 베이스를 망치는 건 아니거든요
다만 내가 만드는 플랫폼 내가 게임을 제작하는 플랫폼의 하드웨어를 잘
이용하고 해서 둘 중에서 뭐가 더 나은 결정 인지를 처음부터 내릴 수
있고 이것은 말그대로
프리머 치료 op mij 션 도 아니고요
보라 그래요 너무 이른 옵티마이저 현도 뭐 이런 최적화
그것도 아니고 말그대로 프로그래머가 그만큼 자신이 만들고 있는 거에
하드웨어를 잘 이용을 이해해야 하며 는
그거에 맞는 아 뭐 코드 라던가 알고리즘을 처음부터 잘 짜서
결과적으로 나중에 출력할 일이 많이 없는 그런 코드가 나와요 그런 제품이
나오고 그래서 저는 제 생각에는 이제
그 거기에 있는 프로그래머들이 그런 마인드가 되어 있었고 자신들이 만든
하드웨어에 대한 이해가 높았다 며 는
저는 그런 부분과 그 그때 나와 있던 그 게임도
당연히 제 핸드폰에 될 거라고 생각을 해요 저희 폰도 1년 반밖에 안되는
5 1년 반 전에 닦기 종이 했고
그래서
뭐 결과적으로 그 사람은 이제 자기 자존심이 상했는지 뭐 제 앞에서
아사히가 아마존에서 뭐 몇 년을 일을 했고
아 우리 애들은 뭐 아무리 가 이제 정말 학교에서 최고의 들만 데려오고
우리 그 시험 문제도 거의 막 페이스북 수준이다 라고 다 말했는데
제가 페이스북 면접을 봤을 때도 좀 그런 기억이 있거든요
애들이 말그대로 정말 싫 용적이 지 않고 그
책 그 뭐야 그 학교 교재 있는 것 이다 정말 정말 죽어도 안 쓸 만한
그런 이상한 거 있잖아요 대구서 팽이 있는건데
정말 타고 들지 않으면 절대 알 지도 못하고 쓸 일도 없는 그런 지금은
엄청 물어봤어요
물론
저는 이제 대충 통관 했었어요 근데 그럼에도 불구하고 마지막에 작은
편하죠
그런 질문을 면접에서 물어볼 정도 회 사람이라고 싶지 않다 얘기했었는데
그래서 도 이 회사에서도 페이스북 얘기를 듣는 순간 아 이건 정말
아니거나 싶어서 정말 아니라고 나는 나 갈게 강했다 고 그랬는데
아 제가 하고 싶은 얘기는 그 거에요 일단 당연히 이제 세상이 많이
바뀌었고
아 전 아 뭐 저희 또래 에서 이제 같이 개발 하셨던 분들
그분들이 했던 것처럼 이 좀 어셈블리 레벨 까지 내려가는 프로그래머는
별로 없다고 봐요
하드웨어를 그렇게 잘 이해하지 못해 되는 프로그래머 도 초 꽤 많구요
이제는
근데 어느 순간 물이 오르고
어느 순간 제품이 대박이 나서 그 제품을
머리 더 온라인 같은 경우 더더욱 그렇고 이제 더운 접을 늘려야 되고
그런 상황에서는
결과적으로 하드웨어에서 자기 되면 어떻게 들어오고
어디에서 느려지고 이거를 후 하드웨어를 추가하지 않고도 간단한 소프트웨어
조작만으로도 최적화 할 수 있는 방법이 있다면 그게 사실은
장기적으로는 돈 되게 아끼는 거에요 그리고 또 한가지
절대로 말을 하자면 우유니 티그 많이 쓰시고
단의 또 많이 쓰시는데 그 뭐 ent 조만간 바뀔 거에요 근데 이제
유니티 현재의 버전에서
으 오브젝트 엄청 생성 하다 보면은 게임 엄청 느려요
가비지 때문에 이제 그런 부분 2
하드웨어를 잘 알고 내부적으로 이게 어떻게 작동하는지 이해를 하면 은
피해갈 수 있는 부분이거든요
저도 그걸 아니요 그 예전의 이제 엑스박스 에서
xna 라고 닷넷 프레임워크 도면 게임을 만들어서 x 박스의 출시 할 수
있는 그런 게 있었어요 그래서 그때 처음 머리 씨실 하고 로 게임
만들어서 한번 올려 봤는데 역시 하드웨어에 대한 이해가 없이는
그 게임 플레이 할때 정말 스무스하게 플레이에는 그런 게임을 만들고
어렵더라구요
뭐 유니티 쓰시는 분들은 다 이해 하실 거구요
그래서
뭐 요즘은 다 웹프로그래밍 하고 어쩌고 저쩌고 해서 이제 하드웨어에 대한
이해는 필요가 없지 않나요 라고 하시는 분들도 좀 계신데
제 생각에는
2 불확실 아닐 것 같아요 요즘 어셈블리 언어 하시는 분들 별로 없잖아요
사실은
근데 이제 저는 왼 절인 팀의 있어서 생물이라 하는데 gp 요샌 그래도
봐야 되고
그룹 비율 보면은
1 5% 프로그램은 5% 정도 어셈블리 하는 것 같아요
1 저희 값이 큰 대규모 회사에서 5% 안될수도 있구요
내 폐 사람도 그럴 수도 있겠죠 그런데
* 과적으로 는 정말
최고의 프로그래머 라고 해야되나요 그런 탑클래스 로 올라가게 블랙 되려면
자기가 프로그래밍하는 플랫폼을 잘 이해할 수 밖에 없어요
그렇지 않으면 아무리 똑같은 제품이 나와도
뭐 그런 거 있잖아요 이제
예를 들어서 정말 약 서버에 과부하가 걸릴 때 뭐 이런것 좀 거쳤고 서버
과거를 10% 을 줄인다
그럼 거기서 나오는 비즈니스 세이빙 얼마에요
그런걸 따질 때는 확실히 터 클래스 까지 올라가려는 결과 좀 하드웨어
러셀 얘기하는거
이해하는 게 맞는 것 같아요 v 제
뭐 당장 프로그래머 하실 때는 뭐 굳이 아내가 조회를 공부해야지 이런거는
생각하실 필요는 없어요 근데 아 그 알고리즘 1 짜 실 때 과연
이게 빨리 더는 지리게 도는지 정도는 측정이 가능한 하거든요
그런거 좀 측정의 하 해 보면서 이렇게 프로그램이 자는 습관이 드시면 은
아 이렇게 질문이 생겨서 우울해 해쉬맵 이던 드리지 그럼 그 이유를
찾기위해 제도 어 저기 여기저기 뒤져보고 사람들 물어보고
그러다 보면 그런 지식이 쌓이는 거죠
예전에 그런 얘기 했잖아요 이제 c 에서 c 플러스 플러스 넘어갈때
c 플러스 플러스 가 너무 느려서 5c 를 써야 되고 싶 플라스크를
가면은
화 드웰 되니 해도 사람들이 안하기 때문에 뭐 어쩌고 저쩌고 양쪽 그런데
그런 일은 안 일어나 그 사실은
시샵 에 들어갈 때도 아 이러면 너무 사람들이 하드웨어를 멀어지기 때문에
하드웨어를 이해를 안해도 되는 거고 어쩌고 저쩌고
그런데 결과적으로 또 시작했을 때도 그렇게 있지를 그렇고 뭐 xl xml
를 그렇고 하드웨어를 이해를 해야만 제품이 잘 하고 살아 찍고 안쓰는
않아요 저는 이제 뭐 지금 당장 시작하는 초 프로그래머라는 굳이 신경쓰지
마시구요
초보 에서는 중급 정도 올라가시는 분들이 는 언제나 측정
내가 이런 알고리즘을 짤 때 측정을 해서 과연 이게 다른 벌 trot 드
대한 보다 빠른 g2 정도로 확인을 해 주면서 하면은
확실히 몇 년 안에 굉장히 하드웨어에 대한 이해가 높아지면서
어느 순간 아내가 정말 프로그래밍이 자료나 이런 생각을 하실 날이 올 것
같아요
아 그러면 뭐
온 비디오를 만든 게 학교 얘기를 하려고 한 거지 그 회사 유혹하려고
한건지 모르겠는데 이 정도로 뭐 하드웨어에 대한 얘기는
마치면 될것 같네요 예 고맙습니다
4p 였읍니다
nll
으
a
으
well
으 음 으 으
으
