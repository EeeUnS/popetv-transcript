오늘 할 이야기. 사실 오늘 또 밀려서 찍는 거예요. 당장 내일 나갈 게 모레? 내일모레 나갈 게 없어서 찍는 건데, 목록도 보고 하다가 또 뭐할까 생각했어요. 근데 별로 하고 싶은 게 없었는데, 마침 어제 유튜브에 제가 옛날에 올린 비디오에 답글을 달아 주신 분이 계세요. 그래서 그거 생각해 보니까 한 번 말씀드려야 할 것 같아서, 그거를 말씀드리려 하거든요? 유튜브 비디오는 'E0044. C# 하악하악~' 이라고 썼던 거 있죠? 너무 야한가요? (웃음) 그거에 대한 답글을 다셨어요. 이분이 C++ 프로그래머는 아니시고 C# 을 최근에 해봤는데 "너무 좋다. 정말 너무 좋다. 이렇게 편한 언어가 없었다."라고 말씀하시더라고요. 저도 일단 거기에 동의합니다. 그런데 WPF(Windows Presentation Foundation) UI Framework는 정말 사용하기 힘들다고 하는데, 저는 그것도 동의해요. 게임 프로그래머 입장에서 WPF를 쓸 일이 별로 없어요. 그냥 귀찮으면 WinForm을 쓰거든요. WPF 가 불편하다는 것은 솔직히 동의해요. WPF를 여태까지 한두 번 써보려고 했는데, 사실 이게 그렇게 복잡하게 된 이유가, 디자인과 동작을 분리하겠다는 개념에서 시작했기 때문에 그런 것 같거든요. 그래서 디자인 같은 경우에는 XAML(Extensible Application Markup Language) 이라고 하죠? 그 XAML이라는 텍스트 파일로 디자인이 들어가고, 코딩은 실제 cs 파일에서 하도록 분리가 돼요. 이게 그 저한테 있어서 가장 불편했던 점은 이렇습니다. 

1. 일단 XAML을 작성하다가 에러가 나면 Preview가 잘 안되는 점이 마음에 안 들었어요. WinForm은 그에 비해서는 WYSIWYG(What You See Is What You Get)잖아요. 보는 대로 그냥 실제 Visual적으로 고칠 수 있으니까요.

2. 두 번째는 이제 그 WPF라는 개념 자체가 아까 말씀드렸듯이 분리하기 위한 MVVM(Model-View-ViewModel)이잖아요. MVC는 Model-View-Controller이고 그런 거와 비슷한 거예요. 제가 잘 모른다는 것을 확실히 보여 드리는 건데, 컨트롤러(코딩), 뷰, 실제 모델, 데이터를 분리하겠다는 개념에서 시작한 것이기 때문에, 굉장히 복잡해졌어요. 그래도 제가 작년 2013년에 Microsoft MVP Summit이라는 콘퍼런스 비슷한 걸 갔을 때, 저랑 호텔방을 같이 쓰신 분이 있었거든요. 이수겸님이라고, 지금은 미국에 계시고, C# MVP이셨던 것 같어요. 그 분에게 그런 이야기 했어요. "WPF 너무 불편하지 않냐?" 그랬더니 돌아오는 이야기가 "그래서 Blend가 있는 거죠." 그러는 거예요. 그래서 뭔지 물어보니까, 아까 말씀드렸듯이 XAML로 디자인하기가 힘들잖아요. 그래서 Microsoft에서 비주얼적으로 편집할 수 있는 툴을 만든 게 Blend래요. 그래서 '한번 사용해 봐야겠다.' 생각만 하고, WPF를 할 일이 없었기 때문에 그 뒤로 사용을 못 했어요. 근데 그분 말에 비하면, 굉장히 편하다고 해요. WinForm에서 WYSIWYG 하듯이 간단히 할 수 있다고요. 그래서 만약에 WPF가 불편했다고 생각하시는 분들, 특히 저처럼 XAML 파일 만드는 게 불편했다고 생각하시는 분들은 Blend 한번 이용해 보시라고 말해 드리고 싶어요. 이게 공짜인지 아닌지도 솔직히 몰라요. 모르겠어요. 저는 그냥 Visual Studio Ultimate 버전에서 같이 달려온 걸 쓰기 때문에 공짜이지 않을까 생각하는데요. 한번 알아보시고요. 그래서 오늘은 그 말씀을 드리고 싶었던 거예요. 제가 WPF에서 저도 문제를 느껴왔었고, 해결책을 제가 작년 11월쯤에 들었는데, 아 아직 제가 뭐 말한 적이 없었어요. 밖에서 저를 보시는 분 중에 저랑 비슷한 문제를 가지고 계신 분도 계실 거고, 그래서 한번 꼭 써 보라고 전해 드리고 싶고요. 

그리고 이건 완벽히 여담인데, 아까 유튜브에서 답글 다신 분이 "C#이 최고의 언어다"라고 말씀했잖아요? 저도 굉장히 동의하는 부분이고, 그 말에 한 가지 말씀을 덧붙이자면, 최근에 웹 서비스를 하나 만들려고 이것저것 언어를 다 뒤지던 중에, Ruby 언어를 잠깐 만져 봤었어요. 근데 솔직히 제가 Ruby 보고 느낀 건요, 언어 자체로는 C# 보다 나은 언어 같아요. 누가 저에게 "최고의 언어를 골라봐라." 하면 현재로선 저는 Ruby를 고를 거 같아요. 최적화, 성능 이런 것들 빼고 언어 자체의 문법은 개인적으로 Ruby가 굉장히 마음에 들어요. 일단 제가 영어권 사용자에게만 포함되는 이야기일 수도 있는데, 그 영어 문장을 쓰는 것처럼 코딩을 할 수 있어요. 굉장히 편하더라고요. 그게 굉장히 좋았고요. Lambda 함수 같은 게 굉장히 쉽게 들어가 있었고, 함수 프로그래밍도 쉬웠어요. 그래서 어떤 의미에서는 간단하게, 그리고 '빨리 코딩 하는 데는 Ruby가 정말 좋지 않나?'라는 생각을 많이 했어요. 그렇지만 스크립트 언어라 여전히 컴파일 에러를 볼 수 없는 단점이 있죠. 그래도 현재 상황에서 Ruby와 C# 중에 무엇을 사용할 거냐고 묻는다면, 저는 여전히 C#을 쓸 거예요. 그 이유는 C#에 딸려 나오는 Visual Studio 툴 그 자체가 너무 막강하기 때문이에요. Ruby IDE 중에는 VS만한 게 없어요. 그래서 아무래도 개발이라는 건, 거의 절반이 이상이 툴이라고 생각하기 때문에 디버깅 쉽고, 개발하기 쉽고, Intellisense 지원하는 그런 툴이 나온다는 거 자체만으로도 최소 50~70점은 먹고 들어가는 거라고 보거든요? Ruby가 아무리 언어가 좋더라도, C#을 넘을 정도는 아니라고 봐요. 툴 때문에. 정말 Ruby 정도의 언어를 누군가 만들고 Harmony를 이루어 도는 IDE를 누군가 만들어 제공한다면, 그거는 '분명 C#을 꺾을 수 있지 않을까?' 생각이 들어요. 일단 이 정도로 언어 이야기는 마치고요. 예 포프였습니다.
