예 안녕하세요 포프입니다
오늘 비디오는 최근에 프로그래머 학생한테 들은 얘기에요
그래서 뭐, 어디서 얘기가 나왔다고 했는지는 모르겠는데
저한테 물어보더라구요 이제 게임에서 캐릭터가 움직이고 다니잖아요
그러면 저희가 일반적으로 생각할 때
뭐, 좌표가 있다고 보면..세계 좌표가 있잖아요 (0, 0)부터 1, 2, 3, 4..및 어차피 원점은 있어야 하니까 2D던 3D던..
그럼 캐릭터가 움직일때, 월드가 있고 캐릭터가 거기로 움직일때 자기는 언제나 캐릭터가 움직이는거라고 생각을 했대요
근데 어떤사람들이 무슨 웹사이트에서 그랬다거나.. 무슨.. 모르겠어요
캐릭터는 가운데 있고 세상이 움직이는거다. 똑같잖아요 개념상으로는 뭐..이게.. 상대성의 이론인가? 결과적으론?
제가 가만히 있고 제가 앞으로 움직이는척을 할 때 이 배경이 제 뒤로가면은 좌표상에서.. 어차피 움직이는것처럼 보이잖아요
그래서 저한테 물어보더라구요 과연 게임이 그러냐고
어.... 원칙적으로 얘기하면 아니에요 원칙적으로는 캐릭터가 움직여요 거의 모든게임은
제가 스페이스마린 만들때도 있었고 다크사이더2 만들때도 이 문제가  솔직히 있긴 있었는데.. 뭔 문제냐면..
스페이스마린은 조금 그나마 괜찮았고 어차피 다른 행성으로 옮기는 이런일이 많아서..
아.. 다크사이드에선 좀금 이게 좀 문제가 심각했는데.. 왜냐면 다크사이더는.. 약간.. 그 뭐랄까 오픈월드 느낌의 게임이었거든요?
그래서.. 두 게임을 만들때 둘 다 캐릭터를 움직였어요 근데 캐릭터를 움직일때 생기는 문제가 있었어요
하나가 일단.. 다크사이더부터 얘기하죠 이게 좀 더 쉬운거기 때문에
다크사이더2 만들때 문제점은 뭐였냐면..
세상이 워낙 넓으니까 얘가 움직이면 시작은 원점인데
많이많이 걷다보면.. 걔네..걔네 게임으로 쓰는 단위(unit)으로는.. 60000을 넘어간적이 있어요
제가 볼때는 걔네가 좀.. 걔네가 미국애들 이였기 때문에
그... 뭐 미터(m)를 안쓰고 아마.. 풋(foot)을 썼을 거에요 30cm가 1foot 이런식으로..
그래서 이게 원래는 20000정도가 나와야 되는게 60000정도가 나온거죠
문제는 게임에서 산술연산 할 때.. 뭐 특히 무슨 뭐 깊이 테스트.. 뎁스 테스트라던가 뭐.. 파티클 이런거 할 때
플로팅 포인트 넘버 쓰잖아요 부동.. 소수점? 근데 이제 플로팅 포인트의 단점은
정밀도가 떨어져요 그러니까 뭐 모든...그니까.. 그.. 뭐.. 어떻게 얘기해야 될까..
정수(integer) 처럼 1, 2, 3, 4를 정확히 나타내는게 아니라
이게 멘티사(mantissa)라고 그러는데 한국말로 뭐라그러는지는 모르겠고
베이스 값이 있고, 여기 지수를 몇을 붙이면 이 값이거나 이런식으로 계산을 하거든요 그래서..
범위는 넓지만 그 사이에 있는 모든 값수를.. 값들을.. 다 보여줄 수는 없어요
뭐.. 당연히 유리수여서 그게 불가능한거고 유리수는 카운트 할 수 있는 넘버가 아니잖아요 1/2,  1/4 그렇게 따지다보면...
그래서
그런.. 정밀도 문제가 있는데 이 정밀도 문제가 언제 생기냐면은
이 범위가 작을때는 덜 생겨요.. 뭐 그 그래프 보여주는것도 있고 이런데
값이 뭐.. 뭐.. 뭐.. 어느정도 사이에선 덜 생겨요 근데 이 값이 굉장히 커지다 보면 정밀도 문제가 생기거든요?
해서.. 한.. 그렇게 6만 몇천 되니까 결과적으론 파티클 뿌리고 할 때
깊이 테스트 할 때 이 제트파이팅(z-fighting) 이라고 하잖아요 똑같은 물체가 똑같은 깊이에 있는데
어떤 경우에는 이게 뒤집혀 보이고 앞서 보이고.. 그래서 같은위치에서 그리는데도 막 이렇게 막 깜빡깜빡 하는 효과가 있어요
그 문제가 생겼어요
그래서 그때는..
배경을 움직이는것도 한가지 방법이였지만 그러는 대신에 현재 있는 이 세계..가
뭐라그럴까.. 이 월드의 중점.. 그니까 이 부분의 중점이 한 60000쯤에 있으면..
그 값을..아.. 60000이라고..
이게.. 기억을 하고 쉐이더 같은거에 전달해 줄 때.. 그런 값을 전달해서..
처음..그 세계 위치가 그럼 60000 뺀 다음에 계산한 다음 60000을 더한다는 뭐 이런식으로 한적이 있거든요
그거는 그 깜빡이는 문제를 해결 했어요
세계를 움직이진 않았죠 아직..
근데 그때 캐릭터는 언제나 0.0에 있고, 세계를 움직였어도..
뭐, 해결책은 똑같았을것 같아요
스페이스 마린은 어떤문제가 있었냐면.. 뭐 게임.. 끝까지 깨보신분은 알겠지만..
어떤거에서 보면 열차를 타고가면서 오크를 죽이는 장면이 있어요
근데 열차가 굉장히 빨리 지나가거든요? 터널이 막 지나가고..
처음에는 그거를.. 당연히 캐릭터..가 위에있고 열차가 움직이니까 열차가 움직이는걸로 만들었어요..
그런데 그걸 만들다 보니까..
역시 아까 말했던 엄청나게.. 그 뭐라그럴까..
위치가 커지면서 제트파이팅 생기고..피직스 엔진 깨지고.. 하복썼는데
그런 문제가 생겼거든요? 그래서 결과적으로 그 씬 하나만은 저희가
캐릭터는 가만히 서 있고..
열차 속도따라 이 배경이 움직이게 했어요
언제나 기준점이 되는건 (0, 0, 0) 정도가 되게..
그러면서 모든 제트파이팅 이라던가 플로팅 포인트 오차문제를 굉장히 해결을 봤는데
그럼 누구나 다 그래야되냐..
제발 그러지 마세요.. 진짜 힘들었어요..
그 문제가 뭐냐면.. 물체를 움직이는건 문제가 안돼요..
근데 그외에 우리가 쓰는 하복 피직스(물리) 엔진 있잖아요..
그러면 하복 피직스엔진에서 이 피직스가 제대로 작동 하려면 총을 쐈는데 연기가 뒤로 간다거나.. 이걸 하려면
더이상 어떻게 할 수 가 없는거에요..
그래서 저희가 거기다가 말도안되는 무슨..바람..
원래는 이렇게.. 가만히 있으면 파티클이 가만히 있어야 되잖아요?
그러면 이게 뒤로가야되는데 그걸 우리가.. 뭐랄까..메뉴얼하게 업데이트 해줄 방법이 없으니까
바람을.. 글로벌 바람을 이 뒤로가게 쏴가지고 바람으로 해준다거나
뭐.. 그외 오디오 문제도 있었고.. 굉장히 자잘한 문제를 잡을게 되게 많았어요 그래서..
저희가 어쩔수 없이 그걸 하긴 했지만..
그 문제가 잡는데만 게임플레이 가이 애들하고 막..프로그래머들 열심히 진짜..뻉이 쳐가지고 한.. 진짜 시간오래 걸려서 잡은거 같아요
제가 아직도 기억에 남을 정도니까
게임 플레이 하는 애들이 처음 애니메이션 시스템 구축 할 때와
거기서 나온 버그 고칠때.. 시간 낭비한게 진짜 거의 비슷한거 같아요
그래서 저희는 어쩔수 없이 해야 됐지만.. 그리고 제 생각에는 GTA5 같은 게임도 어쩔 수 없이 그래야 될 수도 있어요
근데 개네는 어찌보면은
스트리밍 섹션 시스템이기 때문에..요만한 섹션스트리밍하고 다음 섹션스트리밍하고
어찌보면은.. 요 섹션스트리밍 할 때마다 요 중점으로 갈 수 도 있죠
그거는 가능하다고 봐요
그렇게하는게 맞는.. 맞을 수도 있고..
그게 아니면 아까 제가 다크사이드에서 말했듯이 그런..
뭐야..어떤 값을 일부로 줘가지고 해결하는 법도 있었을테고..
네, 오픈월드 게임에선 그럴 수 있다고 생각해요.. 근데 그게 무슨 한 공간에서 움직이는데 모든 물체를 캐릭터는 가운데두고 움직인다? 그건 아닐꺼 같고
굉장히 그것두 연산을 많이 해야되기 때문에 어찌보면은..
제 생각에는 그런 부분 섹션별로..
저흰.. 무슨.. 뭐라고 불렀지 우리 할때는..?
청크(chunk)라고 불렀던거 같은데 저희 할 때는
그런 청크별로.. 텔레포트 시키는 법은 있을거 같아요.. 그런식으로 하지 않을까 생각하고..
MMO도 어찌보면 똑같은 문제가 있을 수 가 있구요..
MMO, 오픈월드 이런 게임은 그렇고.. 그외 다른 게임들은 뭐.. 아닐거라고 봐요
뭐, 콜오브듀티 이런거 같은 경우는 어디 딱.. 맵에 들어가서 그 맵에서 게임하고 나오고 다시 다른맵 가고 이런식이잖아요?
그런건 절대 그렇지 않을거라고 봐요
그래서
그냥 경험에서 한 얘기고.. 최근에 답한 적이 있기 때문에.. 이런 얘기를 들으면 그래도..
제 생각엔 그냥 많은사람들이 "아, 이럴수도 있구나" 이럴거 같아서 비디오를 만들어 봤습니다.
포프였습니다.
