이 아니어서 포프 입니다 예전에 제가 음
게임프로그래머 측정에 대해서 조금씩 조금씩 해서 언젠간 다 훑어 꺼라고
얘기했어요
그래서 오늘도 그걸 하나 만들어 볼게요
오늘은 제가 가장 확실히 말할 수 있는 집정 해요 근데 제가 아시면
해먹은 직종 이니까
프로그래머 중에 그래픽스 프로그래머
음 않는 렌더링 프로그램 어도 부르죠
얘 뭐 하는 애들이 냐 이제 한국은 보통 클라이언트 프로그램은 서버
프로그래머 나눠서 그냥 클라이언트 내 컴퓨터의 성능과 4 다 있고 서버에
도는거 따스한 애들 다 있는데 이제 그게 세분화 되기 시작하고 팀이
커지면 특정 분야가 생기는 거겠죠 그래서 해외에서는 보통 전문 부자가
있는 애들이 더 많아요 그래서 저도 이제 그렇게 프로그래머가 있었고 제가
이제 그래픽 프로그램 은거하며 는 저희 아버님이 언제나 어 그래 니가
게임에서 그 아트 만드는 거야 말 나오는 모델의 예쁘게 만드는 거야 라고
물어보세요
아니죠 그건 아티스트가 일 뿐이에요
그래픽 프로그래머 가는 일이 뭐냐면 까 이 게임 속에 나오는 모델이 얼
건가 이미지 라던가 이건 한다
누군가가 만든 거잖아요 이미지 면은 2d 의 이미지를 만드는거 겠고 3d
면 누군가가 이렇게 차를 갖고 모형을 만들 듯이 그런 프로그램을 가지고
게
3차원으로 모양을 만드는 거에요
그러면 그건 누군가 안 들었는데 그걸 이제 게임 속에서 보여줄 기술이
필요한 거죠
그럼 그 기술을 만드는 게 그래픽 프로그램 어요
그게 가장 단순하게 얘기하면 그래요 그래도 이해가 잘 안된다 그러면 이제
스 2 dx 맥스 남아야 를 써 보신 분들도 계실 거고
오토케드 를 써 보신 분들도 계실 거고 그게 아니면 그 구글맵 이런데
가보면 스케치업 인가 뭐 그런 프로그램을 다운받아 갖고 갈 딴 모양을
만들어서 구글맵에 3g 모델로 올래 줄 수가 있어요
그 스케치업 같은 프로그램이 있어요 그럼 그 프로그램 보면은 내가 뭐
어떤 모양 만드시고 돌려서 볼 수도 있고
맥스 나 말까지 오면 조명을 이렇게 되면 조명이 어떻게 보이는지 도울 수
있거든요 그걸 전부 다 게임에서 돌게 하는 게 저희의 요
그 기술이니까 한마디로 맥스 마야 이런 프로그램을 만드는게 저희 려고
맞아요 그 차이점은
맥스 남아야 는 보통 모델 하하 놓고 열심히 해도 속도가 그렇게 빠르지
않잖아요
저희는
그게 3가 평안 뭐 많으며 는 2002 중요한 이만기 에서 2만개 정도가
캐릭터나 가 나온다고 보면 왔거든요
요즘 좀 더 많아져 있겟죠
그걸 이제 만기 2만개 그릴 때 그 속도는 그 속도가 나는 건데
저희는 게임 속에서는 삼각형을 1
1 500000 개
50만원 좀 많은가 안에 예정이 회전에 의한 30만개 그랬으니까 되게
예전에
50만 개 정도 이상을 실시간으로 그리는게 저희 일이에요
그러니까 그 기술을 만드는게 실시간 이라는 것은 1초에 30번 에서
60번 정도 물어야 되는 거죠
금일 초에 처리하는 그 삼각형 냥이 아까 뭐 50만개 곱하기 2 하면
100만개 고 거기가 3 싶고 8 은
3000만 개 그니까 3000 관계에서 천호 극 1500 만개 3000만
대 정도를 일꾼 에 그릴 수 있어야 되는 기술을 만드는 게 저희 일이에요
그만큼 성능이 매우 중요하죠
또 저희랑 되기 저희가 또 이제 게임 쪽만 아니라 영화 쪽에서는 일어날
수 있어요
그러면 저희는 어떤 일을 하려면 영화 쪽에서 똑같은 일이 하는거죠 영화
둥 그런 3d 캐릭터 가져다가 만들고 화면에 찍는 거니까 차이점은
그 친구들은 실시간 돌리지 않 아 요 그 친구들은
한 자 이게 실시간 안 들더라도 마그 30분에 한 장이 나오더라도 그것을
다 따로 저장해 놓은 다음에
웹 프레임 다 맞춰 보여준 되는걸 차례 되면 영화는 원래 그런거죠 2d
이미지 연속으로 찍어 너의 보여주는 요아이 뿐이니까
그래서 그쪽에 사랑니가 저희쪽 와는 좀 다른 4
그런 부분에서 기본 똑같고 영화 쪽 퀄리티가 게임과 높은 이유도 그거예요
그런 게임 프로그래머가 그래프로 보면 그럼 해야 되는 게 뭐냐
저희는 삼각형으로 화면에 그릴 수 있어야 되고 삼각형을 어느 위치에
도움될 수 있도록 변환을 시켜야 되고 카메라가 움직인다고 가정을 하면
거기에서 삼각형을 보여 주는 방법도 있어요
이고 용으로 특별히 제작된 언어가 있어요
이제 이걸 특별히 제작된 하드웨어도 있고 그래픽카드 거에요
그리고 그래픽카드의 돌리는 언어가 있어요 조명 같은것도 이 때 그걸 보통
저희가 쉐이더 라 그러고
그걸 작성하는 일 도저히 리 였고 뭐 지금 저희 1인 경우도 많고
나중에는 이제 조명을 며 1000개를 계산해야 될 때 어떻게 보다 빨라진
야 에서 새로운 방법으로 개발 개발하기도 하고 남들이 개발한 공법을 가서
쓰기도 하고 뭐 피부를 어떻게 표현 할 거냐 이 피부를 살심을 표현하기
위해서는
이고 피부가 굉장히 복잡한 표면 이거든요
조명을 받으면 그대로 조명이 판사 하는게 아니라 어느정도 7 추가되서
튀어나오기도 하고 소개 있는 혈관이 보이기도 하고 두꺼운 돼야 얇은 곳이
있기도 하고
여기서 좀 더 기름지고 여기는 안지고 이런 것들도 있기 때문에 피부는
굉장히 복잡한 건데 그런거 어떻게 표현 할 거냐
그런 것들에 쉐이더 에서 수학 개선으로 나는거죠 b 지역에서 들어올 때
나는 표면 여기 있고 그런 물리적으로 에게 이렇게 계산 되니까 이런 이런
계산을 100% 는 아니어도 비슷하게 흉내 내서 만든다
그럼 여기서 끝나는 거냐 것도 아니에요 실제 그래픽 프로그래머가 또 해야
되는 일 중에 하나가
아까 만든 아티스트가 만든
그 모델도 있잖아요 3d 모델의 맥스 남아야 뭐
오토케드 려서 만든거 이렇게 게임에서 돌려야 되잖아요
이 포맷을 그대로 맞출 순 없잖아요 그러면 이 여기에서 만든것을 저희
게임의 돌릴 수는 포맷으로 변경을 해서 뭐 데이터를 어떻게 군 야 2박
이것도 있거든요
이걸 이제 파이프라인 작업 이라고 해요 툴 작업 이라고도 하고 그 부분
2
저희가 해야되는 부분이 있고 툴 프로그래머가 해야되는 부분이 있죠 저희는
이제 툴 프로그래머가 그쪽으로 잘 모를 수도 있으니까 그런 부분 해야되고
그리고 이제 제가 예전에 발표한 자료에도 있지만 게임 쪽에서 보여주는
조명 계산 열연과 이런게 모든 게임 아 달릴 수밖에 없어요
뭐 그러면 이제 저희 게임에서 모델을 이제 모델링을 하고 나서 게임으로
불러오면 은 실제 맥스 남아 에서 보는건 다른 경우도 있거든요
그러면 그걸 또 어떻게 비슷하게 보여주게 할 것 이라고 해서 맥스 남아야
쪽에서 직접 저희가 플러그인을 만들어 왔고 걸 보여주는 법을 만들기도
하고 어떻게 다 아티스트가 이를 효율적으로 할 수 있도록 많은 지원을
하는 것도 저희 일이에요
공백 재미있는것은 그래픽 프로그램을 굉장히 쪽에 특화된 사람이에요
그러고 보면은 아이 사람들은 게임을 잘 모를 거야 라고 생각을 할 수도
있는데
게임플레이 쪽은 모르더라도 아트 쪽으로 잘 알기 때문에 생각보다 많은
딸은 그룹들 하고 일을 해야 되고 또 그래픽카드 웨어는 굉장히 특화되고
성능에 맞춰 나온 하드웨어 있거든요 그래서 이거를 하는 사람들은
성능 쪽을 굉장히 잘 알아요
또 최적화를 되게 잘해요 왜냐하면 은 또 그래픽 하드웨어 디버깅 하려면
어셈블리를 해 되는 경우도 많고
그리고 거기는 이제 하드웨어가 얻는 규격이 정해져 있기 때문에 벡터
프로세스로 라던가 뭐 숫자 여러개 한꺼번에 곱하는 것들
그런것도 잘 되어있기 때문에 그런거에 대한 직도 바삭하고 메모리를 어떻게
수 샤방 냐에 따라 속도가 * 내가 차이나는 경우도 있기때문에 그런것
되게 좀 빠삭 해요
그래서 게임 을 출시한다 가 가끔 못잡는 버거가 나온 5명 가 있어요
뭐 예를 들어서 저희 팀벅 은 아닌데 뭐 게임 플레이버 기도하고 모
아니면 ur 쪽 보이기도 한데
디버그 빌드가 디버그 쉽게 할 수 있는 환경에서 안 나오다가 최종필
대사가 나오는 그런 문제 일수도 있거든요 그런 문제점들은
거의 어셈블리를 디버깅 해야되는 더 되게 많아요
어셈블리로 디버깅이 안되는 경우도 있었고
별별 이상한 꼼수를 쓰는 경우도 있어요 툴의 지원을 안 받고 그런
경우에는 대부분
이제 그래프로 5월에 뭐를 처방 4화 말아요
그래서 걔네들이 정말 이상한 버그도 남들 못잡는 보고를 야 어셈블리 까지
봐가면서 고쳐야 된다 그러면 그래 프로그램부터 잡아 봐요 왜냐하면
걔네들이 가장 로우레벨 잘하고 최적화를 잘하고
그리고 워낙 그래픽의 딥 용 디버깅 툴이 이런게 되구 이기 때문에 일반
코딩의 비해서
그런 디버그 툴이 없을 때 어떻게 논리적으로 이것저것 시도해 보면서 아니
화면에 뭔가 엉뚱한 걸 보여주면서 까지 디버깅할 수 있는 애들은 그래피
프로그래머가 크고
네트워크 프로그램은 수치 건 잘 하긴 해요 이렇게 일도 거의 비슷한
처지라 근데 그래픽 프로그램 보다 좀 툴이 맞춰 하시라
그래서 그래픽 프로그래머는
가장 게임 휴가를 늦게 갑니다 게임이 끝날 때
그래서
보통 게임이 이제 막 열심히 만들다가 어느정도 제출시 쯤이 되면 이
사람을 좀 휴가를 보내거나 빼어 약간씩 왜냐면은
계속 150명으로 게임 않을 수 없잖아요 맞음 에 가면 은 점점 목
80여 70 육신의 줄여 가다가 게임 최종 무 나가구 어긋날 때 이제
서비스팀 안남는 이런 식이죠
근데 그 게임 출시 전까지 부터 이제 게임 플레이 쪽 애들은 많이 휴가를
보내야 명란 까놓고 야우리 끝났으니까 더 이상 게임플레이 두껍고 가
오디오의 들은 특별히 문제 없을까 만두 모나코가
이런식으로 저는 가은 해외 렌더링 프로그램을 마지막까지 보통 남아 있어요
왜냐하면 여기 서버가 튀어 나왔는데 아무도 5번은 버블 가속 높아요
왜냐하면 출시 용 빌드를 9 없기 때문에
그럼 그거 디버깅할 수 있는 이런 언어의 밖에 없어 나서 휴식이 돼요
그래서 가장 휴가를 늦게 떠나는 애들 로드 유명한 하죠
하지만 장점은 그만큼
기술 쪽에 가까운 애들이 기도해요 게임 컨텐츠의 쪽에 아니라 길쭉 같기
때문에
게임은 보통 시간이 가장 많이 걸리는 게 컨텐츠 만드는거 컨텐츠 고치는
거거든요 그리고 자꾸만 게임 밸런스 마치게 이것저것 고치고
그래픽 조금 그건 좀 없어요 사실 그게 오히려 그래픽 쪽 같은 경우는
풀잎으로 정도에서 굉장히 많은 기술이 끝나야 되고 그러면 이제 그 때부터
아트는 마구 집어 넣어야 되니까 그 다음에 좀 바뀌는것 있지만 그 딸은
부서의 비해 그렇게 확 바뀌는 게 없어요 그래서 어찌보면 은 일이 좀
프로젝터 브라 다 예측 가능하다
갑자기 얼른 야 이거 다 바꿔야 뒤집자 라고 해서 갑자기 야근으로 왕창
해야 되는 그런 경우는 또 적어요
뭐 봉급으로 따지면 일단 그래 프로그램과 굉장히
스페셜한 기술이고 그 게임에서 굉장히 중요하게 여기는 기술이 되어 제가
예전에 게임 길을 떠나는 이유 에서
말을 했지요 사실은 저는 그게 맘이 안 된다고
근데 그렇기 때문에 상관 어쨌든 그러니까
그래 프로그래머의 봉급이 아마 게임 직분 중에는 가장 높을 거에요
g 꾼 평균으로 봤을 때 그 게임 그 프로그래머 에서 갈리는 걸로 뭐
아티스트라고 다 포함해 도 그렇고 그래서 봉급은 가장 높아서
그것때문에 이제 게임 프로그램의 꽃이라고 불리는 경우도 있어요
뭐 자본주의 시대에서는 돈을 많이 받는게
실력이 있다라고 보기 때문에 네모 전편에서 db 에 대해서 말했듯이 그냥
수요가 높은 거고
그만큼 자랄수 인삼이 좋은 걸 수도 있고
제가 그래픽 프로그램을 좋아했던 이유는
제가 시작할 때는 그래픽이 정말 중요 했어요 그래 피거나 후 작사 곡
게임들이 이것을 발전시켜야 될 정도가 있었고
될 이유가 있었고 그때 나왔던 콘솔 ps 틀에서 ps3 넘어갈 때 요
듀오 시점에 콘솔이 그거 슈퍼컴퓨터 순위 얻기 때문에 그럴 수 있는
기회도 있었고
그리고
저는 모든 간의 결과를 빨리 볼 수 있는 걸 좀 그래도 좋아하는 편이에요
따른 시스템에 위해 그래 프로그래밍은
뭐를 만지는 곧바로 화면이 떠서 결과를 보여주기 때문에 뭔가 보상 감히
더 있더라구요 그리고 누구한테 쉽게 보일 수도 있고 게임 맑음 5
아티스트 보육 해도 됐어 하며 너 됐구나 라고 하지만
네트워크 프로그래밍 같은 경우에 정말 보여주게 며 어떤 해야 돼 토크
패키지로 가서 이게 갔어
그게 보는데 이런 개념이 될 수 있고 그래서 어찌보면 좀 자랑거리 되고
제가 쉽게 봐서 보상 감동을 얻을 수 있고
그리고 마지막 이유가 아마 이게 제일 중요하니 율법이 같기도 한데 제가
생각할 수 있는 프로그램 중에 가장 어려웠어요
음악 뭐 3d 수학도 들어가고 조명 계산을 들어가야 되고 아티스트 장
이라는 것도 있고 이런 저런걸 생각했을 때 정말 가장 기술적으로 나 뭐
뭐 리서치 적으로 그니까 뭐 연구를 해야 되는 것처럼 가장 힘든 쪽에
아니었나
그러면서 보상 감히 바로 있고 그래서 저는 되게 좋아했던 것 같아요
그래픽 프로그래머는 이제 그 정도면 은
대충 설명을 한 것 같죠 음
뭐 요즘 뭐 엔진이 좋아져서 뭐 그런 프로그래머 덜 필요하다 이런 얘기도
있지만
구스 그 거 같애 재밌어 징계
저는 그때 이제 당연히 음 뭐 그렇게 되면은 영화 쪽으로 옮기면 상관없이
꺼라 생각을 했는데 실제 상관이 없구요
그걸 떠나서 지금 또 가상현실이 나 증강현실이 또 이게 막 불 물 걸어
올라 오고 있잖아요 그걸 3 누구야 누구야 어쩜 그래 프로그래머 거에요
그래서 그래 프로그램은 또 어이없게 새로운 길을 찾아 찾은 거죠 그래서
게임 쪽에서 그래픽 프로그래머의 위치가 없어 저는요
아직은 모르겠어요 저는 게임 쪽에서 그래픽 프로그래머로서 자료 잡기가
어렵지 않기 때문에
근데 주니어 나 이런 사람들 많이 있거나 아니에요 제가 전에 있던 에서
봤을 때 요즘은 많은 그래프 프로그래머가 게임을 떠나서 다른 쪽으로 옮겨
왔어요 다시는 재미있는 쪽으로 그가 제가 예전에
게임 프로그램을 만드는 이유에서 말았던 거랑 비슷하게 느끼는 사람
사람들이 많았던 것 같아요
그런 사람들이 떠나갔고 그래서 오히려 저희는 괜찮은 그래 포머 찾을 수가
없었고 생 중이었어요 그래서
웬 드린 프로그래머에 대한 수요는 아직도 많다고 봐요
괜찮은 애들을 못 구할 정도였으니까
응
그 정도면 은 이제
한번 더 한것 같죠 예 제가 가장 잘하는 직 종 이니까
더 열심히 말을 많이 한 것 같네요 포프 였읍니다
