예 안녕하세요 포프 입니다 음 어제 게임과 그저께 인가
제가 자려고 침대에 두었다가
이제 구글 나우 를 봤어요 9분 나올까 뭐냐면
이제 안드로이드 폰을 가지고 있는 분들의 저는 이제 그래서 보니까 아
그럼 구글 나온 기능이 있고 이제 제가 뭐 웹을 검색하는 것이 스토리나
뭐 이런거를 분석을 해서 제가 관심있어 알만한 이렇게 기사를 자동으로
제시해 주는 그런 서비스가 있거든요 구글 안드로이드 자체 그냥 포함된
기능이죠
거기 나온 기사 중에 이제 기세 관련된 기사가 나왔어요 마이크로소프트가
기술 탔으나 이제 윈도우 스팀이
근데 거 엄청난 미노스 데이터 양을
우리가 어떻게 길 쑤셔 박고 있냐 이런 얘기를 해 곡의 관심 써
읽어보다가
이제 깨달은게 하나 있는게 뭐냐면
제가 한동안 기세 대해서 얘기를 많이 했던 적이 있어요 기시 굉장히 좋은
건데 이게 뭐 어찌보면 약간은
음 엔터프라이즈 에서 어떻게 사용해야 되는지 개 개념이 없이 시작을 해서
만들었고 써 엔터프라이즈 가 점점 넘어가면서 야키 3 기능을 추가 하자
라고 했을 때
이제 길에서는 아 그거는 기수 쓰는 방법이 아니야 라는 이상한 약간 좀
정치 스러운 말로 그냥 이렇게 넘어가는데
그에 비해 이제 어 꽤 많은 이제 그 소스 컨트롤을 제대로 만들어왔던 그
기업용으로 까지 회사들이 이제 기술을 조만간 바꿔 줄 거다
그래서 이제 퍼스 얘기를 했었고 아 근데 이제 마소가 요번에
마이크로소프트웨어 이번에 좀 크게 그것을 제대로 고치고 있는 것 같아요
제 예전 비디오들을 보시면 이제 뭐 중간에 뭐 포스 헬릭스 를 소개한
적도 있었고 지금은 문을 닫았지만 헬릭스 클라우드 였던것 같아요 그리고
그 다음에 바지 파일 익스텐션을 한번 설명한 적이 있어요 그렇게 하면
컴파일 있는걸 일단 해결할 수 있다
근데 뭐 그러면서 킬른 인가 큰 킬링 일 거야 킬른 이라는 것도 소개를
했었고
중요한 것은 라지 파일을 따로 이렇게 지정을 해주고 저장 해 주고 뭐
이거를 하는거 자체가 쯤에 약간 핵이 도 했었고
리프와 커지며 는 뭐 이제 거기에는 서브 모듈을 만들어 왔고 또 서 모듈
따로 씽크 하는 것 자체도 약간 핵인 게 뭐냐면
서브 못 일도 손보고 9 메인 리포트 손볼 내면은 컴이 2개가 들어 가야
되거든요
그럼 좀 굉장히 골 아픈 일이죠 사실 서브 모듈 개념은 이미 존재하는
라이브러리를 가져다가 쓰는 개념이 만능 거지 그렇게 리퍼를 자르기 위해서
호주로 만드는 것도 아니었던 것 같고 그리고 제가 설명을 안 했지만 무슨
뭐 뭐 키트 린지 뭐 서브 트리 인지 뭐 이런 여러 가지가 또 있었어요
뭔가 핵이 였는데
사실 이 모든 문제의 결과적으로는
지시 이제 모든 히스토리를 다운 받기 때문에 그러면 이제 파일 용량이
엄청 커진 걸 높게 집어넣으며 는 진리 포가 그래 테라바이트 가 될 수도
있다 이런 문제 였거든요
그러면 이제 어떤 사람들은 왜 바이너리를 왜 소스 컨트롤 했냐 바이는 눈
게 아니다 라 하 시 고 얘기하는 사람도 있었지만 그 원은 프로그래머
만에 편협한 시각 이고 실제 온갖 컨텐츠를 중요시 하는 그런
야 뭐라 그럴까 분야 프로그램에서는
오히려 컨텐츠도 거 전 컨트롤 해야죠 왜냐하면 은 내가 텍스쳐를
빨간색으로 그런데 다음날 파란색을 바꿨어
빨간 새로 돌아갈 노트 할 거야 히스토리가 있어야 겠죠 그래서 뭐 퍼프
세계도 그래서 나왔고 뭐 영화 쪽도 그럴거고 이런 게임 쪽으로 꺼고
음 뭐든 간에 아티스트 랑 이라는 쪽에서는 다 그런 문제가 있었다고 봐요
그래서 기생 그냥 아 우리는 그렇게 만든 게 아니라고 우기면서 어찌
보면은
뭐라 그럴까
음 좀 더
훌륭한 프로그램의 소프트웨어가 되는 것을 좀 이렇게 맡고 있다고 생각을
하는데
결국에는 마소가 이제 음
비주얼스튜디오 온라인 이라는게 있구요 거기서 비주얼 아트 온라인 에서
이제 그 긴 내빈 아기 터브 같은 거에요 사실 어느 정도까지는
음 거기서 이제 기술 지원을 하기 시작을 했고 로마 손해 보셔도 기틀
많이 쓰기 시작 해요
저도 지금 마소 하고 일을 하고 있는게 있는데 거기서도 기술 써요
근데 재밌는건 뭐냐면 뭐 어떤 게임 프로젝트 든 웹 프로젝트 든 기세 뭐
조금만 리포 하나 만들어 갔고 누구
이런거는 되게 쉬워요 근데 이게 엔터프라이즈 쪽으로 더 크게 크게 가기
시작을 하면 은 회사 전체의 있는 그 모든 코드 베이스를 리포 하나의
받는 경우가 상당히 많아요
왜냐하면 은 그렇지 않으면 은 이제 코드를 찾기도 힘들 것은 리포 를
하나하나 골라 찾는 것 되게 애매하고 그 한마디로 그냥 뭐라 그렇게 얘기
해야 될까
음 회사의 막 만명이 일을 하는데 프레데터 2000개가 있어
그럼 리퍼가 2000개가 있는거예요 그리 포를 찾아야 되는 거 어쩔 수
없이 그런데 모든 리프 하나의 들어와 있으면 거기도 보이 훨씬 편하거든요
그래서 굉장히 많은 회사들이 이제 특히 큰 회사들이 폴 하나만 갖고 있고
페이스북도 그렇고 구글도 그렇고 뭐 뭐 마소 오는 완벽히 난 인데 아직도
입으로 옮겨 가고 있는 중인 것 같아서
최근에 나왔던 것은 이제 윈도우 쓰 코드 베이스를 이제 깃으로 오겠다는
거에요 근데 윈도우 소스 코드 베이스가 이미 * 1 23 10년 정도
되었나요
그 정도 되어 왔고 거기서 작업한 것 만들어 천 명이 되고
제가 정확히 숫자는 기억이 안나는데 코드 베이스 만해요 급여 테라바이트
로 알고 있어요 제가 이제 350 테라바이트 현재 330 테라바이트 이제
상태라 여튼 기억 안나는데
어쨌든 엄청나게 큰 용자 레이코 그걸 이제 다운받을 냄 엄청나게 시간이
걸리는 거죠 그래서 뭐 잠시 아까 말했던 구글이나 페이스북 같은 경우
돌아가며 는 페이스북은 머큐어 를 쓰는거 를 굉장히 오랫동안 써 왔어요
그래서 머큐리얼 같은걸 느린 것을 막기 위해서 중간에 매우 캐시 받고 뭐
하고 많이 바뀌었고
부분은 자체 꿩 것 같은데 구글도 그런 시스템이 있고 마 손은 이제
어찌보면 마소가 되게 욕을 많이 먹잖아요 무슨 뭐 자기네들 이제 막
코드를 안 보여 준다 이런식으로 4 마수가 역사적으로 오픈소스의 기억에
굉장히 많거든요
요번에도 그런것 같아요 2 요번에 기술 기술 손 대지 않겠다 이거요 깃은
그대로 두고 그 밑에 기 아래의 버츄얼 파이 시스템을 까야겠다 그래서 얘
내가 지금 하는게 기습 모든게 그대로고
그 밑에 어떤 dbf s 라고 해요 키 더 출판의 시스템을 만들어 갔고
그 버추얼 파일 시스템에서 어떤 파일을 받아야 하는지 어떤 파일을 다
받아야 되는지 등을 이제 내 알아서 뭐라 그럴까
알아서 처리해 주겠다고 해요 그러니까 사용자 입장에서는 이 프로토콜이
이내 입을 댄 아 기 클라이언트를 받아서 쓰면 은 우리는 아무것도 모른채
해보지 내가 알아서 빠르게 해 주겠다는 거거든요
그 예전의 마소가 이렇게 버추얼 파일 시스템을 쓰는 것을 내부 프로젝트의
한번 본적이 있어요 그래서 개념이 뭐냐면
한마디로 소스 리퍼가 350 테라바이트 가 이러면 뭐 이러면 은 제가
숫자는 정확히 기억이 안나지만
쿨다운 받아야 될 거 아니에요 그럼 처음 체크아웃한 데 몇 시간이 걸릴
거에요
아무리 인트라 례 4 망이 빨라도 몇 시간이 걸릴 거에요 그러면 그
다음에 그걸 받은 다음에 이제 모든 파일에 하되 있는거예요 한마디로 나는
350 테란 말이 한테 300 패를 하러 하드가 없을것 같아요
어쨌든 굉장히 1 3.5 태는 1부 350 테라 아닐까 생각을 해요 저
기억 안나는데
예전에 제가 일했던 마소 프로젝트는 씽크 를 다 할 경우에
으
하드에 안 들어갔어요 그 정도의 프로젝트도 있었어요
어쨌든 그것좀 하드에 그만큼 뭐가 있으면 기 같은거 에서 모이를 그래서
기복 스테이터스 체크 한다거나 아니면 은 뭐 이런 여러가지들 있잖아요 그
오퍼레이션 하나하나가 그 엄청난 파일을 다 뒤지고 감소는 오브젝트
밝혀졌기 때문에 시간이 엄청 걸려요
그래서 얘 내가 지금 한 것은 그러면은 우리가 다운받는 그 레프 라고
보통 가족이 데서 그런 각 스냅 시작된 박 체크인 했던 것들
그걸 어떻게 아 줄일 거냐 그리고 내가 심지어는 기 풀만 할 때도 보통은
서버에 내가 이것을 이런거 다 가지고 있어
서버 너는 뭐가 지그인지 않아 갖고 없는 걸 나한테 초 이런식 이거든요
그럼 그 커뮤니케이션은 것도 엄청나게 시간이 걸린다는 거에요 그래서 뭐
윈도 수 정도 되는 프린트도 봤으니까요 느낀 거지 그래서 그거를 엄청나게
빠르게 만들었고 이런 방법을 통해서 그리고 새로운 프로토콜을 만들어서 킵
리퍼 에서 딱히 터빈 아 이런 리포 에서 이거를 지원을 하며 는 제가
심지어는 뭐라 그럴까
음 푸 라는 그 2 4g 토리의 있는 브랜치 들이 라던가 이런거를 좀
스마트하게 자기가 알아서 판단해 주고 그게 안될 경우에 매뉴얼 하게 그래
난 이 브랜치 필요해 라고 말해줄 수 있는 그런 메카니즘을 만들었어요
그래서
이게 지금 얘 내가 지금 그 윈도우 스팀에 색을 쓰고 있고 예전에 제가
말했듯이 개밥 먹는 프로그래머라는 이해가 있었잖아요
자기가 만든 제품은 자기가 써 봐야 된다 그걸 실제 쓰고 있고 걔네가
그래서 스텟을 뽑은 것도 있어요 며 초아 걸리니 모아 걸리니
근데 엄청나게 빨라져 써요 옛날에 목이 스테이터스 같은 게 가장 느리다
그랬거든요 내가 네 그게 뭐 옛날에 몇분 몇시간 이랬다면 지금 뭐
일본인의 끝날 정도로 굉장히 빠르게 최적화를 했고 그리고 현재
재미있는것은
이게 오픈 소스 예요 아까 자기가 이걸 고치겠다 고 하면서 이제 기획
위에 올리는 거니까 이제 다른 사람들 다 똑같이 이런 프로토콜을 만들어라
그러면 누구나 이런 빠른 방법을 쓸 수 있다 한마디로 nfs 처럼 누군가
이제 시작을 했던 거죠
이것 시작을 한 거에요 그러면서 이 신 7 제 민 도 우 스 깊고 윈도우
클라이언트 중에 이게 인해 일부 된 클린 클라이언트를 자체적으로 만들었고
그러니까 이 기법
윈도우 스 에다가 자기가 좀 추가해서 만든 거 겠죠 그래서 그게 17
지에 넣기 터보 페이지 올라가 있고 그리고 모든 소스 코드의 네가 지금
한 건은 현재 음
오픈소스 써요 그래서 아직 리눅스나 뭐 이쪽 그 구현은 없는데
그거는 뭐 현재 검토중 이래요 근데 어차피 오픈 소스 기 때문에 아 이제
누구라도 만들어 줄 수 있는 거죠 사실은 굳이 마소가 만들어도
아 근데 이제 참 재미있는건 마소가 뭔가 5부 소스 라면은
사람들이 마소 한테 자꾸만 무 리눅스나 뭐 이런거 다 만들어 달라 그러고
린 오쿠 나요 쪽 사람들이 오픈 소스 하면은 아 아무도 걘 애들한테 가서
윈도우 스스로 용으로 만들어 다는 얘기를 안하는 것 같아요 오히려 우리
마소가 만들어 주는 것 같애
그 제게 좀 이상한 리코 시스템이고
그래서
그 아 근데 하나까지 단점은 윈도우 스에서 돌리면 윈도우 스탠이 있어야
되는데요 아마 빈도 스텐 의 새로 올라간 파일 시스템을 이용하는 뭔가가
아닌가 싶어요
그래서 윈도우 스탠이 있고 아기 클라이언트를 이제 그 아까 말은 기 터보
베이지가 다운을 받고
음 그리고 이제
현재 제 아까 잠깐 얘기 쩌는 기 터빈 아 이런거 에서 이 프로토콜을
지원해야 된다고
현재 지원하는 프로토콜이 비주얼스튜디오 온라인 밖에 없는 것 같아요
앞으로 토크 n 서비스 다 그래서 오픈 스펙이 고 모든게 다 고 분인데
현재 비주얼스튜디오 온라인에서는 뭐나 엔터프라이즈를 많이 상대의 왔으니까
엔터 퍼 제 기술 옮기면서 일에 tfs 서버 있던것을 기술 옮기면서 이런
속도 저하로 많이 받겠죠
그런거를 해주기 위해 아 이제 비주얼스튜디오 온라인 을 놓고 지금 비쥬얼
스튜디오 팀 서비스 라고 불릴 수도 있어요
d 클라이언트 만들었고 그래서 이제 예전에 제가 비저스 오 나의 를
쓰면서 언제나 이상 했던게 막 하면은 마이 브랜치 라는 그런 게 있고 올
브랜치가 있고 페이보릿 브랜치가 있어요 그 대시보드에 난 이게 왜 있나
그랬는데 이게 제가 아까 말했던 내가 풀 받을 브랜치를 고울 수 있는 예
컨 에임 중에 하나라 하더라구요 제가 이미 한 번 이어 작업했던 브랜치는
마이 브랜트 로 들어와서 계속 풀을 받고 올 브랜치 로 가면 내가 전혀
모르는 브랜드도 있는데 그거를 이제 페이퍼리스 로 지정하면 은 이제
그것까지 풀을 받아 주는거 아니면 그게 되냐 싫고 옛날 b2b 를
원한다면 url 해서 미포를 하고 / 하고 무슨 소리인가 full 언더
숲과 코를 어디 누면 은 전부 데 프렌치를 받는 그런 u 아래까지
만들어줬어요
그래서 아
이 사람들이 이제 그리고 만든 사람이 블로그 포스트를 4개 인가를 지금
했어요 계속 만들고 있는데 내부적으로 어떻게 도는지 설명한 것도 있고
저도 그거 읽어보고 나서 아 이게 깃이 나아갈 올바른 방향이 구나 를
깨달은 거예요 그러니까 여태까지 사람들이 lf 에 쓴다거나 써모 주
쓰거나 아마 이러면서 어떻게든 문제를 빗겨 가려고 했다면 얘네들은 이제
아 이거는 솔직히 파일 시스템의 문제고 그 내부적으로 싱크를 얼마정도
해야 되는 지를 결정해야 되는 거지
모든 히스토리를 물론 대로 칼을 들고 있으려면 들고 있으니 있죠
그런데 그게 보통 필요 없는 사람들이라면 은 최근 몇 커민 만 있어도
아니면 최근 내각 신경쓰는 브랜치 만 있어도 작업한 에 상관이 없다는
거죠
아 아니면 정말 그게 필요하면 그때 이제 덮 다운받아 되는거고
그래서 그런 방식으로 이제 이제 방향을 진행한 것 같고
그리고 저는 이 프로토콜이 표준이 될 지 아니면 다른 누군가 또 비슷한
프로토콜을 만들어서 표준을 만들지는 모르겠는데
방향성을 이게 맞아요 이게 되면 은 이제
아 깃을 쓰는 사람 입장에서는 깃이 내부가 뭐 이러면 깃이 잘 작동을
안하고 저러면 작동하고 이런 고민을 할 필요가 없이 내 기수 쓸 수가
있다는 얘기 거든요
지금 현재 기술 배우기 가 너무 어렵다 라고 하는거 얘기 자체가
으
기술적으로 는 그 장치 굉장 혁신적인 기술이 였어요
그런데 유저의 사용성을 전혀 고려하지 않은 뭐 저녁까지는 자만이 고려하지
않은 그런거고
아기 내가 뭐 썩 금지 내 거야 멍청 거야 이기순 그런게 아니야 라는
그런 어찌보면 은 약간 좀
어쩌면 약간의 부심 인것 같기도 하고 어찌보면 그냥 하다는 잘랐고 너는
멍청한 거야 라는 그런 그런
에티튜드 약간은 묻어 있었다고 봐요 물론 모든 사람이 그런게 아니지만
굉장히 많 연에인 는 자세 중에 하나였어요
뭐 이거는 제가 예전에 오픈 소스 쪽 마인드에 대해서 약간은 좀 문제가
있다는 얘길 했던 것도 되게 비 탕 거고 그래서
매우 훈련 하셨어요 그래서 이게 갈 것 같고 저는 이제 물론 이제 제가
어느 회사 거 일을 하느냐에 따라 면 긴 레벨 쓰기 덕이 탑을 쓰기도
하지만 제 개인적으로 저는 다 디젤 수동 온라인 써 봤 거 든요
왜냐하면 은 일단은 꽁짜 고무 제언 이고
5명까지 는 아 그루브 lfs 확실히 지원해주고
없어 보안 줬음 좋고 뭘 어떻게 단내 쪽이나 모씨 풀풀 쪽 이런거 할때는
빌드 시스템 너무 잘 되어 있으니까 제가 갈 거 없이
아 근데 저는 이제 곧바로 그 혜택을 받을 거 같아요 그래서 저는 이제
nfs 를 빼도 되지 않을까 생각을 하고 있어요
여기서 한 가지 얘기를 하자면 이 기사가 처음 올라갔을 때 이제 또 역시
그 외국의 이제 메디 라는 그런 블로그가 있어 약간은 좀 한국의 어떤 웹
사이트를 비교해 될지 모르겠는데
약간은 좀 까칠한 프로그래머들이 있는건가 그딴거 왜 뭐 맛은 악마야 이런
약간 좀 그런 분위기에 이제 약간의 웹보드 인데 거기에 이 기사가 올라
왔을 때도 굉장히 많은 사람들이야 lf 쓰면 되잖아 왜 램프 싸 또 그
새로운 걸 만들어 노래
이런식으로 얘기했는데 이거는 솔직히 lfs 에 문제를 해결하는 nfs 로
해결할 수 없는 문제들이 에요 왜냐하면 은 윈도우 소스 코드 베이스
자체가 일단 목 파일 몇 개인지 보여주고 크기가 몇 개인지 부분이 주는데
실제 거의 텍스트 파 이 정도의 사이즈가 나와요 그렇게 큰 바이너리
파일이 없는것 같아요
그리고 실제 파일 하나 하나는 시 스토리다 포함해 봐야 한 모 640
키로 였나 그 정도 밖에 안된다고 내가 들은 것 같아요
그 정도 크기면 은 20년 동안 쌓인 코드는 말이 되거든요 근데 이
파일이 너무 많은 거예요
엄청나게 많기 때문에 그걸 다 더하면 그런 엄청난 사이즈가 나와버렸다 는
거죠
그러나 g 파일 시스템이라는 것 자체는 큰 파일 하나에 시 스토리를
저장하는 예 중요한 거잖아요 히스토리를 다 빼고 최종 스냅샷 마 나온
밖에
그럼 이거는 작은 파일들이 기 때문에 nfs 에서 해결할 수 없는
문제라는 거예요 그래서 그 기대서 이제 여태까지 무슨 말이 와도 할 거는
그는 그녀의 래퍼 써 바이너리를 왠 5일 했지만 그 문제가 아니라
바이너리 가 아닌 파일도 몇 십 년에 그런 히스토리가 쌓이고 그 파일
사이즈 방대해 져버릴 파일 사이즈가 빨리 숫자가 방대해 줘 버리면 이런
문제가 날 수 있다는 것을 이제
일부러 무시해 왔던 거죠 그건 미포를 잘게 쪼개는 게 맞는 거 다
이런식으로
어 근데 음
뭐라 그럴까 예전에 들었던 얘기 했는데 이거는 디버그 환경 디버그를 이제
로컬에서 할 수 있고 아니면 정말 개발중에 디버그를 확실히 하고 모든
것을 다 이제 콜스 데까지 볼 수 있을 내면은 소스 코드가 있는 게
맞아요 내컴퓨터 빌드할 수 있는게 맞고
아 그렇기 때문에 오히려 엔터프라이즈 환경에서 그럼 이 포를 갈라 갈라
라고 하는 것은 오히려 말이 안되는것 같고 제 생각에는
거는 너무 뭐라 그럴까 제가 항상 경계하는 접촉해 이상주의적인 이야기죠
그리 포를 알아서 다 받아주고
다 분리되는 알아서 받아 주는 툴이 있고 마이걸 다만 들어가고 누가
해준다면 은 가능한 얘긴데 그게 아닌 상황에서 어려운 일이고
정말 그게 필요했다면 저는 마소 나 퍼프 쪽에서 이런걸 만들었을 거라고
생각을 해요 그런 툴을 그런데 이제 그보다 좀더 근본적으로 해결할 한
거죠
이 문제 자체는 그냥 방대한 리퍼를 해제 해결하는 거고
nfs 자체를 고치려는 시도는 아니지만 어차피 이게 마지막 4대 시험만
받을 수 있는 기능이라면 결과적으론 nfs 를 빼도 상관이 없는 없어지는
거예요 그 순간에
nfs 빼버리고 모든것 리프로 끝내고 이제 거기서 이제 버추얼 파일
시스템에 의존해 얕고 필요한건 바로 쓸게 가는 거죠 그러면 이게 라지
파일이니 않냐 이런 개념까지 더 출 파일 시스템에서 내부적으로 그냥
알아서 처리해줄 수 있는 거라고 보고
그래서 아
사용자를 괴롭히지 않는 올바른 방법은 애무 적인 옵티마 이제 이 션에
올바른 방법이라고 봐요
그리구 이제 마지막으로 한마디 더 첨언하자면
이제 예전에 윈도우 쓰 파 링가 나왔을 때 걸 엄청나게 깐 사람들이
많아요
그리고 인도 스탠은 좋다 이러는데 로마서는 이렇게 바보 짓을 많이 아냐
비스타가 문제고 뭐 이런 얘기 하는데 솔직한 얘기로 제가 예전에 uwb
용 게임을 만들 때 아 굉장히 놀라운 기능이 들어온 게 있었어요 그 그
화면 이제 미쓰이 쌓이지 않은 그런 부분에서
그게 사실은 윈도우 습할 때 들어 왔거든요 그래서 그리고 좀 인도 스텐
에서 저 이제 그제서 에 제가 본 거죠 그래서 마소가 언제나 어찌보면 한
번씩 삽질을 하는 계기는 뭔가 이렇게 굉장히 큰 기능들을 지고 놀 1
때인 것 같아요
그래서 윈도우 스텐드 뭐 이게 왜 필요에 못 바이런 쇼 얘기하지만 윈도우
스템을 어떤 기능이 들어 온지 제가 모르겠지만 그 윈도 스팬 에서만 2d
파일 시스템이 돌 수 있다는 것 자체만으로도 그냥 거기서 새로 들어온
기능 하나의 이걸 올려 쓰는게 아닌가
그래서 실제 마케팅 적으로 저희가 듣고 있지 못하는 그런 많은 기능들이
내부적인 일어나고 있고 그런거를 제대로 쓰고 뭔가 나오는것 자체가 시간이
좀 걸린다고 봐요 그래서 뭐
아 그래서 이제 저도 예전에 비스트 나올 때 왜 이런걸 만들어서 거라고
그런 좀 약간은 생각을 했었는데 이제 윈도우 팔라우 대한 생각을 좀 바꿔
먹었죠 그다음 보다 뭔가 이유가 있었구나
전 다행히 인것은 윈도우 스템은 이제부터는 꾸준히 업데이트 되는 것 같고
더 이상 새로운 버전이 나올 것 같진 않으니까 뭐 이런 문제는 없겠지만
그냥 그런 많은 뒤에서 엄청난 리서치 파울로 거 엄청 난 기능을 향상하는
것을
개발자 니까 나중에라도 보는것 같아요 보면서 아 참 대단하단 생각을 하고
있는것 하고 있고
음 어쨌든 오늘의 주제는 이제
기세 이제 제한점을 풀어주는 방향이 제대로 나온거 같고 그게 이제 마소가
지금 주도한 이 프로토콜을 기반으로 해서 표준화가 될 건지 아니면 이제
또 다른 사람이 또 뭐 다른 표준을 만들어 갔고 그거로 밀고 갈 건지
모르겠지만
아 그거는 좀 더 지켜봐야 될 것 같아요 어쨌든 간에 음
제가 볼땐 앞으로 한 2 3년 안에는 이게 확실히 적립이 되서 더 이상
뭐 nfs 니 뭐 이런 약간의
은 더 이상 없을 거 같고 서브 모듈 도 어쩌면 더 이상 없어질 수도
있을 것 같아요 그리고 일단 이 버추얼 파일 시스템이 작동을 한다면 이제
기부 워킹 트리 라고 있잖아요 집중에서 여기면 가져다가 쓴다는 뭐 이런
개념
그런 이렇게 서브 트리 만 복제하고 쓰는 것도 충분히 이제 그 다음엔
해결이 가능하지 않을까
그래서 아 기대도 드디어 이제 엔터프라이즈 에서도 깃을
아 크게 걱정 없이 쓸 수 있는 날이 온거 같다는 생각을 하고 있어요
그래서 때까지
아기 생가 좋은데 이게 문제라고 했던 분들 이제 드디어 해결이 돼 가고
있는 것 같아요
오랜만에 뭐 테크 얘기를 좀 열심히 한 것 같군요
예 뽑혔습니다
