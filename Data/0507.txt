[음악]
으
예 안녕하세요 폭포입니다 오늘은 문서와 에 대해서 얘기해 볼게요
아 세 가지 정도로 얘기할 것 같아요 세 가지 규칙 코딩에 관한 문서
코드에 관한 문서와 그러고 프로세스에 관한 문서와 그리고 공개하는 문서에
대한 문서 와 3가지를 좀 정리를 할게요
예전에 여러 여러 비디오에서 뿔뿔이 얘기한 거 같은데 한번 정리할 필요가
있을 것 같아요
이 세가지 이모 규칙을 얘기하기 전에 정말 한 가지 기억해야 되는 중요한
중요한 진리가 있어요
누구나 문서와 는 싫어한다
극의 핵심 이에요 이 이야기를 제가 사실은 예전에 처음에 이제 케톤
뱅크가 됐다가 사라진 그 회사
그 회사에 처음 들어가서 있을 때 그 회사 사장님이 했던 얘기에요 물론
굉장히 미묘한 프로그래머 않고 9분도
어떤 이제 약간 경력 일리언 된 그런 프로그래머가 이런 이런 기능을
만들었다
그리고 이제 문서화를 이제 하고 다음 작업을 진행해야 될까 라고 하니까
그 사장 했던말이
하지 말라고 문서와 좋아하는 사람이 어딨냐고 다시 이런거 왜 우냐고
넘어가라고 그랬던 건데 그 개념을 이제 좋게 보는 사람도 있고 약간
실용성이 떨어지고 이제 완벽한 세상을 좋아하시는 분들은 걸 나쁘게 보게
됐는데
결과적으론 이거예요 사람은 누구나 문서 칼질 아니 정확하게 쉽게
프로그래머는 문서 월 일단 싫어해요
왜냐하면 재미있는 일이 아니야 그래 그러나 결과 중 이게 어디서 시작되는
거냐면
코드 자체가 문서 여야 되요
굳이 문서를 따로 안 적어도 코드를 읽는 순간 뭘 하는지 알 수 있는
코드 라면은 문서가 필요 없는 거에요
그런 상황에서 코드가 잘 되는데 물 속까지 작성을 해 버린다
그러면 언젠가는 누군가 코드를 바꾸게 시작하고 문서 바꾸는건 까먹을 수도
있어요
그러는 문서 하고 코드 하고 저는 다른 일을 하기 시작을 해요 그럼 그
순간에 괜찮은 프로그래머는 무조건 코드가 맞다는 걸 고문서를 바꾸지만
그렇지 않은 프로그래머는 두 개가 다르다 면서 뭐가 맞는지 모르겠다 고
애칭 되기 시작을 하죠
코드 안에 문서와 가만히 되어 있다면 그건 일반적으로 특별한 이유가 있지
않는 한
자기 코드 자신이 없거나 코드가 굉장히 들어온 그런 코드 베이스의 거에요
단 어떤 경우에는 코드를 읽기 편하게 못자는 경우들이 있어요 최적화는
위에서 라던가 아니면 굉장히 특이한 그 분야 라던가 그 제품에 어떤 특징
이 있어서 그 코드 있는 것만 보고 선 감이 안오는 경우도 있어요 뭐
하는지
그럴 때는 그거에 대한 간단한 설명을 문서로 남겨야 줘
그런데 이제 문서와 가 중요하다고 믿는 굉장히 못하는 프로그래머 중 들에
어떤 사람들은 코드 그대로를 문서로 온 게 요 인 트 a 는 뭐 2+2
이렇게 있으면 문서에 2 + 일을 해서 a 에 대입한다
그런 분들은 그냥 코드를 접고 안하시는게 솔직히 맞아요
자기가 왜 문서와 라는 지도 모르고 그냥 민가가 문서와 좋다 그랬으니까
일단 채운 5차 로또운 던지는 활동 던지고 쓰는 의미가 없어
어쨌든 코드는 문서화하여 안 하는게 정석이다
문서화 해야 되는 순간 내가 코드를 못자고 있는지 의심하자
그런데 코드가 아무래도 잘 짤 수 없는 경우들이 있어요
그런 경험 문서 하셔요 그쵸 두번째는 이제 프로세스 문서 와요 프로세스가
게 뭐냐 폐사 에서 하다보면 어떤 절차들이 있죠 뭐 처음 회사에 들어왔을
때 뭘 설치해야 되고 어떤 프로그램을 깔아야 되고 이런것도 있고 아니면
뭐 이렇게 db 를 업데이트 할 때는 이런 이러 이런 절차에 따라 모를
해야 돼 니가 만약에 휴가를 달라고 할 때는 이런 일은 절차도 해야될
그런게 정리되어 있는 뭔가가 있겠죠
100 처음부터 제대로 회사를 관리할 수 없는 사람들이 운영하는 회사는
이런 문서와 가 아예 안 되구요 그냥 사람들끼리 생각을 하고 된 개각
물어오면 누가 더 말이 나와요
점점 늘어나면 늘어날수록 직원들이 제대로 더울 지도 않고 사람끼리 말이
달라서 다 틀려지게 돼 그러면 실수가 많아 지고 쓸데없는 데 시간 낭비라
줘
그래서 처음부터 회사를 제대로 운영할 사람들은 요 이 문서화를 해요 것도
모두가 볼 수 있는 건 공유 드라이브나 그 라거나 그런데 문서를 만들어
놓는데
문서를 못 되게 예쁘게 무슨 책 나오는 것처럼 쓰지 않고 결과적으론 1번
2번 3번 4번 따라 가면 누구나 따라할수 되는거잖아요 간단하게 1234
를 해서 그렇지요 뭐 한껏 뭐 할 거 뭐 할 거 뭐 할 것
이렇게 해도 정리해야 아주모 스크린샷도 없고 간단한 이제 문 설 순
있어요
그리고 2분들이 정말 회사가 커지는것 를 잘 생각하고 정말 제대로
프로세스를 아시는 분이면 요 문서 젤 위에 아주 강하게 썼나요
이 문서를 내가 따라하는 도가 만약에 틀린게 있다면
니가 알아서 물어봐서 이무석 고칠 것이라고 썼나요
즉 문서는 계속 있지만 프로세스는 언젠가는 조금씩 용지 변해요
그게 문서에 반영에 안 될 수가 있어요 근데 그런 문구를 안남아 보면요
어떤 사람들이며 새로운 사람들이 표는 깔기 시작한 어떤 푸름 자주 찾을
수가 없어
그럼 사람한테 물어 봐요 이거이거 어딨어요 아이고 사실 없어진 거예요
그런데 알겠습니다 그러고 자긴 안 깔고 물론 업데이트 하네요
그런 사람들이 있어요 즉 나는 내가 공헌 할 이유가 없어 나는 나만
받으면 돼 라는 개념을 가진 분들이 어떻게 보면 나 다음에 나랑 똑같은
일을 땜에 힘들어 할 사람들이 있잖아요 그 사람들 생각을 안하는 거에요
이런 분들을 보면은 뭐 나중에 개발을 자랑 이래 보면은 이런 마음 가진
가진 분들은 나중에 지켜보면 요
남한테 못한 민폐를 끼치는 캐릭터가 좀 더 많아요
남을 도와주는 계획보다 1인분을 할 수 있으면 되는데 1인분을 못하는
경우도 많아요
사실 2인분 이라는게 누구나 실수 하니까 내가 남의 꽃도 좀 도와주고
남도 내 꼴을 좀 도와주면 1인분이 되는 거거든요
근데 2분들은 나눈다 돈 받겠다 남은 도와줄 생각은 없다 돼 간다는 거
잖아요
그걸 안 해요 여기서 더 나아가 하시는 분들은 문서를 보다가 제가
아리송한 것도 있죠
그럼 아이고 스크린 차 있으면 좋겠다 자기가 어차피 그 화면 떠 있으니까
스크린샷 찍어서 문서에 집어 느낌이에요 그래서 그런 둘의 차이가 나는데
프로세스는 어쨌든간에
작은거 요도 아주 간단하게 라도 문서와 가 되어 있는 것이 좋아요 낮은
사람한테 좋고 사람이 깎아 먹기도 하니까 것도 좋고 검색이 또 되니까
구글 닭 같은걸로 공유 공짜로 다 할 수 있죠 무선
그런걸 해놓으면 누구나 다 쉽게 보면서 고치면서 진행이 가능해요
자극 5 세번째가 이제 가장 애매한 것은 가장 애매한 것
제가 앞에서 코드는 문서와 난 하는 게 맞다 고 했어요 근데 그거 에
대한 예외가 한 가지가 있어 내가 사용 만들고 있는 라이브러리가 있어요
그거 api 가 있죠
그거를 바이너리로 만들어서 누군가가 인클로저를 쓸 수 있게 하든 아니면
왜 ap 에 로 만들어서 누군가가 인터넷 호출하고 쓸 수가 있다
어느쪽으로 가던가 네요 어느쪽으로 가던가 4
함수가 있고 함수에 이제 뭐 헤더 하고 뭐 변수 형만 매개변수 정말 있는
것만으로 충분치 않은 경우가 많아요
정확히 염소가 속에서 어떤 일을 하는지 또 설명이 돼야 되고 반환값을
뭔지
만약에 올바른 결과가 들어오지 않는다면 어떤 에러를 바라는지 같은것도
설명이 되어야지만 사람들이 쓰면서 알 수가 있죠
그 외에 피해 같은 경우에는 여기서 돌아오는 무슨 데이터 게 포멧이
어떻게 되는지 이런거 다 알아야 되고 그리고 이제 그런 것들이 결과적으로
api 도 q 맨 패션이라는 거에요 이거 자라는 데는 물론 테크니컬
라이터 사용해서 열심히 쓰지만
뭐 소규모 회사에서는 어쩔 수 없이 프로그래머가 채워 넣어야 줘 최소한
어 이런 것들 할 때 뭐 조명 새해 규모의 회사들은 자동으로 문서와
만들어주는 프로그램을 쓸 수밖에 없고요
함수 위에 클래스 위에 아니면 데이터 dto dto 위에 주석 따라 주면
알아서 껏 분석해 하고 설명 달아주고
멤버 마다 또 주석 따라주며 는 그 아래가 붉게 꼭 설명만 달아주고
뭐 수액 오라고 했나요 소외 거 같은게 그런거 잘 해 주죠
단 네 코어에서 듣고 연동형 할 수 있는 것들이 있고 그런 식으로 하고
거기다 추가되며 는 웹에서 당연히
아테스트 를 호출할 수 있으면 좋지만 apl 같은거 것 좀 더 훌륭하게
소들이 하는거고
최소한 그런 문서와 는 되어 있어야지만 api 를 8기가 쉽죠
그런 경우에는 제 있다면 개발자 위주로 문서화 해야 되는데 저 회사
커지면 그걸 전문적으로 쓰는 그런 라이터가 들어올 수밖에 없죠
근데 그거는 굉장히 큰 회사가 돼야 가능한 거고
저 문서작성 잘 못하는 개발자들이
결과적으로 문제가 되는것은 요
아까 말했듯이 이제 코드 위에 가끔 주 속 따라야 될 때 그 때 문제 그
두번째가 이제 이런 퍼블릭 다큐멘트 회전할 때 문제예요
프로그래밍은 곧잘 하지만 이런 문서를 못하는 사람도 있어요
근데 이 분들의 제 코드를 보고 실제 코드 리뷰를 보다 보면은 코드
변수명 도 그렇게 까 자기가
언어 능력이 딸리는 걸 엄밀하게 말하면 글을 못 쓴다는 것은 언어 능력이
딸리는 거 어느 분께 딸리는 데 딸린 단 의미가 뭐냐면
남의 입장에서 내에 의견을 전달할 못하는 거야
작가 당 챔 이라고도 하고 왜 자기 기관의 나빠져 왔고 나는 이런 걸
알겠죠 나온 모르잖아요 그럼 그건 남이 어떻게 약을 이해할 수 있을까
보며 설명을 해야 되는데 그 자체가 안되는거
그게 안되니까 코드를 작성할 때도 나는 지금 이게 뭔지 아니까 변수는
대충 쓰고 내 머리속에 생각나는 대로 마구 쓰는 거에요
그리고 나중에 돌아오면 자기도 해 깔 이게 뭔지 모르니까
그리고 어쩌면 변수명 네 글자를 쓸 수 있는 것을 40 글자로 쓰기 되요
이런 매 글자의 표현을 찾는거 를 찾기를 귀찮아 하는거 어떤 의미에서
내가 뭔가를 할 때 그 간략한 어떤 형태로 다시 보고 이런 과정들이
있잖아요 그 꼼꼼함 자체가 지루하고 짜증이 나는 거 이제 그런것들 때문에
여러번 딴지를 걸리 있고 보면은
이제 자기가 이게 못하는 걸 알고 고쳐 에게 땀 알겠다 그 고민을 해야
되는데 이거 뭐 꽃이며 는 솔직한 얘기로
인터 믿어 이상으로 올라가면 되기 힘들어요 왜냐하면 은 내가 작성한 코드
많은 사람들이 고통을 하고 그런 것들이 있어요 그래서 만약에 자기가
글을 잘 못씁니다 그러면 아다는 문과 가 아니어서 그래 그게 아니에요
사실 그 지적 능력의 척도 를 보면 은
말을 하는 것보다 글을 쓰는게 직접 능력이 높은 거예요 그럼 그건 땅이
조금씩 키울 수 있는 거 어느 정도까지 그걸 안 하고 있는건 나한테
필요없다고 생각하는 건데 그런 분들은 확실히 프로그램 자극에 안되더라구요
여태까지 제가 본 사람중에 국어가 안되어 그런 사람중에 뭐 c 언어나
무엇이 샵이나 이걸 잘 아시는 분을 못 받고 사실 엄밀히 말해서
그리고 영어가 안 되어 영어 처음엔 다 어렵지만
영어 때문에 뭐가 안 돼요 라고 하시는 분 중에
국어 때문에 뭐가 되는 사람도 별로 본 적은 없어요
물론 이제 한국의 지만 한번 이라는 분이 아니라 해외의 와서 일 하시는
분 중에
아 제가 영어가 이제 좀 짧아지게 넘어 어렵습니다 라고 말하시는 분도
있는데 그럼 그걸 하죠
그리구 거라면 똑같은 문제가 코드를 보죠
코드 문 똑같은 문제 1 어쨌든간에 문서와 라는거 신경 전혀 안쓰고 살수
있을거 같죠 이제 왜냐면은 뭐 코드 대충하고 뭐 퍼블릭 땅만 안쓰는 크게
용어의 안 먹으니까 가능은 한데 청장에 문제가 생길 거야
즉 코드에서 문서 하는거 그냥 코드 잘 짜는 것은 이 꼴이 꽃 같아요
즉 코드를 잘 짜면 문서와 더 잘해요 사실일
4 문서화를 언제 해야 돼 라는 그런 설명을 해드린 거고 그 두 번째
코드 하고 관련이 없거나 더 회사의 플러스 세트 같은 문서
그거 잘 생각해보세요 본인이 어떻게 넘어 가고 있는지 아니면 내가 이것을
고치면 뒷사람이 또 혜택을 봐서 좋을지 내가 그렇게 조금씩 공헌을 하고
싶은지 아니면 나는 거냐 라는 코딩을 하기 위해서 회사에 취업이 된
사람이니까 코딩 말고 딴거 전환했다
좋아요 그럼 이 영상도 보고 있지만 되요 회사에서 코딩 만 하셔야 코딩할
딱 고고 많으실 거 는
프로그래머 한테 자유가 주어지는 이유 자체는 보통은 뭐냐면요
프로그래머 드는 굉장히 똑똑하지 는 분들이고 사실은 그분은 자기 스스로
자기가 어디에 모를 해야지만 도움이 된다는 아시는 분들이기 때문에 그래요
그렇지 않은 회사 문화가 생기고 그렇지 않은 프로그래머가 많아진다면 요
어차피 시간이 지날수록 그런 분들은 점점 점점 시간 찍고 일하시는 분들
시간 동안에 아무것도 못하시는 분들
핸드폰 거야 되고 인턴의 끊고 일해야 하는 사람들 그런 식으로 바뀔 수가
있어요
본인이 이제 좋아하는 업무 환경 유지 하려면 그만큼 책임도 따르는 거에요
뭐 콧소리 많이 한 것 같으니까 끈을 께요
포프 였읍니다
