예 안녕하세요 포프입니다
오늘은 GDC에서 요번에 나온 얘기 좀 잠깐 할게요
GDC에서 요번에 유니티5하고
언리얼 엔진4하고 공개가 됐잖아요?
공개가 됐다고 해야 되나?
유니티5는 지금 프리오더 상태고
언리얼4는 오늘부터 곧바로 공개된 것 같아요
아 비디오 보실 때쯤엔 오늘이 아니라
아마 3일 전쯤이 될 것 같아요
제가 사실 뉴스 새로 나온 것들에 대해서
비디오를 잘 안 만들잖아요
안 만드는 이유가 사실은 뭐냐면
보통은 제가 비디오를 미리 좀 많이 만들어 놔요
뭐 일주일에 한 세 개 정도 녹화해 두면
보통 일주일에 두 개의 비디오를 보내니까
하나씩 남는 게 있거든요?
근데 요 근래에는 조금 바빴어요
집에서 바쁘면 상관이 없는데
잠깐 뭐 어디 갔다오고 이런 게 있어 갖고
그렇게 막 시간을 한 3~4일쯤 미국 갔다가
또 뭐 하루 또 미국 갔다가 막 이러다 보니까
도무지 비디오를 녹화할 시간이 없어 갖고
밀린 거에요
오늘 제가 녹화하는 시간이 한국 시간으로 목요일인데
오늘 나가는 게 하나 있고
이제 이거는 곧바로 월요일날 나갈 것 같아요
그래서 아 이 기회에 그러면
최신 뉴스를 그냥 하나 얘기를 해 보자
제가 사실 최신 뉴스에 대해 블로그도 별로 안 쓰고
비디오도 안 만드는 이유 중의 또 하나는
제가 생각해 보지 않는 분야에서 그냥 최신 뉴스가 나왔다는 것만으로
거의 리트윗 수준이죠 사실은 그냥
뉴스 모아다가 이런 겁니다
라고 제 블로그에 올렸을 때
제가 따로 추가할 수 있는 그런 게 없어요 사실은
그냥 그 뉴스 보시는 게 낫지
괜히 뭐 블로그 방문자 늘리겠다고 올리는 것도
별로 마음에 안 들고 이래서 안 했는데
제가 오늘 유니티5하고 언리얼4를 얘기하려는 이유는
제가 사실은 어느 정도 여태까지
생각을 해 왔던 부분이어서 그래요
첫 번째는 뭐냐면
일단 유티니5 같은 경우는 솔직히 나온다 그럴 때
저는 좀 많이 놀랐어요
유니티5가 나올 때가 아닌 것 같다는 생각이 들었고
굳이 뭐 5에 나와 있는 기능을 봐도
유니티4하고 크게 달라진 건 없거든요 사실은
그래서
그다지 저로서는
이게 왜 나와야 했던 거지라는 생각도 조금은 들고
굳이 유니티5에서 새로 추가한 내용들이 필요한
게임 개발자들이 얼마나 될까라는 생각도 들고
근데 유니티5가 여태까지 주로
인디 쪽이나 모바일 쪽에서 강세를 보여 왔다면
이제 뭐 제가 예전에 있던 회사도 그렇고
이제 좀..
뭐
본인들은 트리플A라고 그러잖아요
이제 뭐 굉장히 대규모 게임? 블록버스터 같은 게임?
근데 뭐 제가 볼 땐 그건
솔직히 웬만한 게임은 더블A이긴 하지만
일반적으로 PC에서 돌고
우리가 볼 때
어 이거 큰 회사에서 나온 큰 게임이지
하는 그런 정도의 게임도
유니티도 만들려는 시도가 많이 있어요
이제 뭐 그러면서
그런 회사들이 벌써 유니티에 대한 한계를 느껴 가면서
그거에 대한 추가로 유니티5가 나온 듯한 느낌은 드는데
사실 유니티가 거기서 성공을 할까
라는 거에 의심을 좀 가지고 있었고
그니까 유니티5 발표가 제 기억으로는
언리얼4보다 하루 일찍 나왔던 걸로 기억을 해요
그리고 이제 언리얼4가 나왔죠
근데 언리얼4는..
그 동안 얘기는 많았잖아요 사실은
언리얼 엔진4 같은 경우에는 무슨 뭐
옛날에 데모도 있었고 뭐 여러 가지가 있었는데
결국 나왔어요
예전에 저 있는 회사에서 언리얼 엔진을 써 갖고
소스 코드를 볼 일도 있었는데
언리얼4가 되게 재밌는 거는
요번에 이게 일단 오픈 소스에요
깃허브(GitHub)에 소스 코드가 다 올라간대요
유니티는 그거를 하지는 않죠
유니티를 제가 소스 코드는 못 봤는데
소스 코드를 본 사람들한테 얘기를 들어 보면
소스 코드는 상당히 좀 엉망이래요
그래서 이제..
툴은 되게 좋은데
소스 코드나 요쪽에는 굉장히 엉망이고 그래서
굉장히 다루기 힘들다라는 얘기를 한 적이 있는데
언리얼 쪽은 소스 코드가 그래도 꽤 괜찮아요 사실은
그리고 언리얼 쪽이 굉장히 최신 기술을 많이 쓰잖아요
그래픽 쪽이나 뭐 다른 쪽으로도
그 소스 코드가 모두 공개가 돼 있다는 것 자체가
어떤 의미에서 보면은
배우는 사람들한테 정말 좋지 않나
그리고 그냥 뭐 다른 일 하는 사람들도
그런 거 많잖아요 이제
어떤 소스 코드 보고
아 이게 이렇게 작동하는구나 생각을 하고
자기도 이제 그런 비슷한 방식으로 한다거나
거기서 발전시킨다거나 이러는 게 있잖아요
그래서 이제 그런 부분에서 굉장히
대단한 일이다라고 생각을 하고요
어떤 의미에서는 이제 언리얼 엔진이 조금
유니티보다는 조금 뒤쳐져 가는 느낌이니까
아무래도 언리얼 정도의 스케일이 필요한
게임이 별로 필요하지 않았으니까
그거를 오픈 소스로 돌려서
차라리 사람들이 더
다른 일반 프로그래머들이 더 이렇게
아 이건 좀 마음에 안든다라고 고쳐 갖고
commit하게 한 다음에
이게 깃허브(GitHub)에 있거든요?
그러면 이제 자기가 fork를 떼 갖고
거기서 자기가 고친 다음에
원 제작자한테, 어 이거 나 이런 기능 만들었으니까
가져가세요라는 식으로 할 수가 있잖아요
그래서 그런 식으로 할려고 하는 것 같아요
그리고 어찌 보면 대단한 거고
굉장히 미래는 촉망되지 않나 생각이 일단 들어요
그런 생각에선
근데 뭐 다 집어치우고
일단 언리얼 엔진4를 제가 기다렸던 정말 이유는
하나였어요
뭐냐면
스크립팅이 C++로 되거든요 언리얼 엔진4는
언리얼 스크립트도 별로 마음에 안 들었고
뭐 유니티는 C#을 쓰니까 그건 나쁘지는 않았어요
근데 이제
아무래도 유니티의 성능에 대해서 여러 가지 말이 있었고
그리고 이제 모노 플랫폼이라든가
각종 플랫폼의 기반도 좀..
가비지 컬렉터 기반인데 그것도 좀 그다지 좋진 않았고
언리얼 엔진4에서 스크립팅은 가비지 컬렉팅 기반인지
다른 건지 아직 제가 모르겠어요 안 봐서
개인적인 소망으로는 최소한 그 참조 카운터?
refcount 그거 기반이었으면 하고요
게임 쪽에서는 정말 가비지 컬렉터라는 게
정말 안 좋은 것 같아요
게임은 일단 지속적인 프레임 속도로
계속 도는 게 좋은 거기 때문에
refcount가 기본적으로 속도가 더 느리더라도
전반적으로 느려지는 게 낫지
각 프레임마다 뭐 1ms씩  늦듯이..
1밀리초?
1ms
그거씩 느린 게 낫지
잘 돌다가 갑자기 프레임 하나에서
한 10ms 잡아먹는 것보다 훨씬 낫거든요
그래서 그렇게 리얼타임..
게임도 리얼타임이니까 주로
그런 거에서는 확실히 refcount 쪽이 낫다고 생각을 해서
그쪽이었으면 하는 바람이 있고
뭐 그게 아니라 순수하게 그냥 프로그래머한테
memory allocation, deallocation 하라고 해도 그건
저는 불만이 없는데
스크립팅 쪽이니까 아무래도 refcount 쪽이
그나마 낫지 않나 생각은 들어요
근데 뭐 그게 정확히 그렇게 되는지 아닌지
제가 안 봐서 모르겠고
개인적으로는 이제 C++로 돌아왔다는 것 자체가 굉장히
성능 쪽이나 이런 면에서 유리한 점이 많다는 거죠
그리고 지금 플랫폼 지원되는 것도 보면은 이제
안드로이드, 아이폰, PC 지원되고
맥도 곧바로 지원된다는 것 같고
리눅스 쪽도 이제 지원하게 하려는 것 같아요
근데 뭐 그거야 오픈 소스가 돼 있으니까
이제 뭐 다른 커뮤니티 멤버들이 뛰어들 거고
그 다음은 이제 라이센싱비죠
언리얼이 얼마냐
유니티가 얼마냐
뭐 유니티는 다들 아실 거에요
라이센스 그냥 사면은 뭐 한..
얼마 내는 거죠
공짜는 공짜고 프로 버전 사면은 뭐 얼마고
아니면 다달이 뭐 75불씩 내는 그런 것도 있고
유니티는
제가 본 사람들은 인디 쪽이 많으니까
인디 쪽에서는 대부분 그냥 공짜로 쓰다가
마지막에 이제 출시할 때
그 splash screen 있잖아요 처음에 유니티 로고 나오는 거
그거 없앨려고 프로 버전을 산다는 얘기를 많이 들었어요
근데 이제 뭐
안드로이드 버전을 살 때는 뭐 돈을 얼마 더 내야 되고
iOS 버전을 살 때는 얼마 더 내야 되고 이런 게 있죠
뭐 나쁘지는 않다고 봐요
근데
그런데 이제 그게 뭐 monthly로 내기 시작하면
75불씩 내니까 그건 좀 더 많은 거고
근데 또 하나 장점은
게임이 출시가 되면 이제 게임을 출시해서 벌어들인 돈은
다 제 게 된다는 그런 장점은 있죠
언리얼 같은 경우는 언리얼3까지는 사실은
엔진 자체로 사는 건 굉장히 비싼 가격이었고
그것 때문에 이제 일반 커뮤니티들이 쓸 수 있게
뭐 UDK라는 게 있었잖아요
공짜로 받아서 쓰고 나중에 팔 때
파는 가격의 30%를 내라 그랬나?
근데 이제 생각보다 별로 쓰는 사람은 없었던 것 같은데
뭐 소스 코드를 못 보는 단점도 있었고
요번에 나온 거는 굉장히 재밌게 나왔더라고요
요번에는 한 달에 15불
한 달에 15불 내면은 소스 코드 다 나오고
전부 다 쓸 수 있게
그리고 게임을 출시를 하면은
매출액의 5%를 로열티로 내야 돼요
30%보다 훨씬 나아진 거죠
그래서 가격으로 봤을 땐
오 이거 괜찮다 싶은 정도의 가격이 되더라고요
그리고 뭐..
그..
돈 내는 거
그니까 빌링을 좀 자세히 살펴보니까
언제든지 15불을 내는 걸
돈 내는 걸 끊을 수 있대요
돈을 내는 걸 끊어도 현재 받아 놓은 프로그램은
이미 제가 돈 내고 라이센스를 산 거니까
그대로 사용할 수 있다는 식으로 얘기를 하던데요?
사용할 수 있고 다만 추가 업데이트만 못 받고
그러다가 이제 나중에 또 뭐
그걸로 그대로 게임을 만들어도 되는 거 같아요
그래서 지금 생각해 볼 때는
정확히 제가 가능한지 안 한지 확인을 안 했는데
일단 웹사이트에 써 있는 거는 언제든 돈 내는 거를
다달이 내는 걸 멈출 수 있다라고 했어요
그리고 이미 받아 놓은 거는 계속 쓸 수 있다라고
그러면 그냥 15불 내고 다운을 받아요
다운을 받은 다음에 곧바로 다음 달에 돈을 끊어
그럼 15,000원 낸 거죠 15불이니까
뭐 16,000원 17,000원
그럼 그걸로 계속 개발하다가
정말 필요한 업데이트가 있으면
또 15불 내고 업데이트를 받는 거고 한 달만
아니면 그냥 그대로 가다가
그걸로 출시하고
그냥 5%만 주면 되는 게 아닌가 매출액의
그 생각까지 들더라고요
그렇게 따지면 야 이거 정말 싸다
정말 싼 엔진이다라는 생각밖에 안 드는 거에요
그래서 괜찮다 싶은 생각이 들어요
일단 뭐 언리얼 엔진4의 성능은 뭐
의심할 바 없이 가장 좋은 엔진이고
에디터가 얼마나 나아졌나의 차이인데
언리얼 엔진3보다
제가 직접 써 보진 않았어요
근데
모르겠어요
그건 제가 써 보질 않아서 말씀을 못 드리겠고
예전에 개발 중일 때 봤던 거로는
3보단 나아졌는데
유니티만큼 정말 단순무식하게 편하진 않았다?
이 느낌이었거든요?
근데 유니티 자체야 뭐
어차피 C#이라는 언어의,
아님 .NET Framework라고 해야 될지도 모르겠지만
그 언어의 온갖 뭐, reflection system이나
그런 거를 가지고 있는 언어니까
그럴 수도 있는 거고
그래서 오늘 어제 뭐 이렇게 보고 나서
제가 느낀 거 현재는
유니티가 과연 더이상 메리트가 있나
라는 생각이 일단 들고요
유니티 프리버전으로 하다가
그냥 프로로 낼 때 바꾼다?
뭐 그것도 나쁘진 않아요
근데 언리얼로 가도 15,000원 내고 하다가
출시하고 5%를 떼 준다?
그게 그렇게 나쁜가? 그 생각까지 드는 거에요
오히려 훨씬 낫지 않나? C++로 개발하고?
그래서 지금..
아니 뭐 그리고 또
똑같은 얘기로 어떤 게임을 만들었는지에 따라
이제 차이가 있겠죠
뭐 유니티 같은 경우는 아무래도
좀 가벼운 게임들 많이 만드는 게 좋을 거고
언리얼 같은 경우는 아무래도 좀 더
하이퀄리티 게임 만드는 게 좋을 거고
그래서 지금까지 생각은 그래요
언리얼3에서 UDK 같은 모델에서
언리얼4의 약간 오픈 소스 비슷하면서 그렇게 간 게
굉장히 괜찮단 생각이 들고
또 하나 생각은 이제 언리얼4..
그니까 유니티 같은 경우는 이제 에셋스토어라고 해서
사람들이 에셋 만들어 갖고 파는 게 있잖아요
언리얼은 그런 걸 할 수가 있을까?
그 생각도 조금 들고요
왜냐면 오픈 소스 기반이기 때문에 지금 현재 사람들이
모듈을 만들어서 그냥 올리면 쓸 수 있는 게 아닌가 싶고
음
그래서 지금까지는
에픽 게임스가 좀 더 제대로 방향을 잡았다
라고 생각을 해요 현재로서는 개발자들한테
유니티는
아 맞다 유니티는 요번에 5 나올 때
GUI 시스템 드디어 나온대요
근데 5에 들어가는 게 아니라 4.6인가?
유니티 4.몇이 또 같이 나와요
거기에 이제 GUI 시스템 같이 들어간다고
그 옛날에 이제 NGUI 만들었던 사람 있잖아요
그 사람이 참가해서 시작을 했던 건데
그 외 다른 유니티 직원들도 참가를 했고
NGUI 만들던 사람은 이제
유니티를 나갔다고 알고 있어요
나가면서 하는 얘기가
자기가 전부 다 한 건 아니다라고 그러더라고요
근데 예전보다는 확실히 좋아졌을 것 같으니까
그것도 유니티 사용자들한테는
굉장히 좋은 소식이 아닐까 싶어요
지금 현재까지 드는 생각은
유니티5하고 언리얼 엔진4하고 비교했을 때
개인적인 생각으로는
언리얼 엔진4에 조금 더 관심이 가네요
그래도 아직..
모르겠다
제가 지금 또 하나 만들고 있는 것도
유니티로 만들고 있기 때문에
그거를 바꿀 것 같지는 않고
뭐
그 정도로 마치죠
그냥 제 생각
유니티5하고 언리얼 엔진4 보면서 든 생각 정도
예 포프였습니다
