이 비디오는 또 망상 시리즈
중의 하나가 될 것 같아요
예전에 혹시 뭐 ODE라는..
그.. 뭐였지?
Open Dynamic Engine이었나?
Open Dynamics Engine인가?
정확히는 모르겠고
물리 엔진 중에 한때 그래도
오픈소스고 그나마 유..
유명했다고 해야 될 것 같아요
유명했던 ODE라는 엔진이 있어요
그래서 거기를 보면은
뭐 다른 물리 엔진도 그런 게 있지만
처음 컴파일을 할 때
여기서 쓰는 데이터형을
float으로 할 거냐 double로
할 거냐를 정할 수가 있어요
물론 float으로 하면은 각 데이터가
32비트, 4바이트가 되니까
double은 두 배잖아요 8바이트
그것보다 위에 뭐
용량도 적고 계산도 빠르고
그 대신 floating point value라는 게
비트 수가 많으면 많을수록 아무래도
precision이, 정밀도가 높아지는 거니까
그 정밀도가 낮아지면서
float에 문제가 생길 수가 있는 거죠
그리고 그동안 저희는 게임을
언제나 float으로 만들어 왔어요
float으로 만들면서 무슨
그래픽 하시는 분들은 Z-fighting
이런 얘기도 많이 들어 봤을 거고
온갖, float으로 인해 많은 그런 뭐
floating point 오차, rounding up,
rounding down 해 갖고
무슨 뭐 엡실론을 써 갖고
floating 값을 비교하라느니
이런 온갖 말도 안 되는
바보짓을 해 왔거든요
물론 이런 floating point 값을
다 좋은데
이거를 만약에 은행이나
이런 데서 쓰면 난리가 나는 거죠
막 그 floating point의 point 하나 바꾸면서
하면서 뭐 돈이 수가 달라지니까
그래서 은행이나 이런 거에서
정말 수치가 중요한 그런 분야에서는
floating point도 안 썼고,
double도 솔직히 쓰지는 않았어요
double 자체도 오차가 조금
적다뿐이지 있긴 있으니까
그래서 거기서는 그냥
fixed point라고 해서
무슨 뭐 앞에 정부 부분하고
실수 부분을 다 따로 분리해 갖고
실제 integer로 다 tracking하거나
아니면 string으로 다 tracking한 다음에
필요에 따라 string parsing해 갖고
계산하는 그런 방식을 많이 썼죠
뭐 가장 확실한 건
string이 가장 확실한 거였고
근데 그거랑 똑같은 얘기가
게임 쪽에서는 integer에도 있었어요
옛날에 뭐
처음에 16비트 머신일 때는
뭐 integer가 16비트인 게 낫다
그 다음에 32비트 머신 갔을 때는
integer가 32비트여야 된다
그러다가 이제는 integer를 64비트니까
웬만하면 64 비트로 만들어도 된다
뭐 이런 얘기가 막 나오잖아요
뭐 storage하고 speed
뭐 이런 차이인데
뭐 몇 비트짜리 레지스터가
주로 default냐 차이도 있고
뭐 memory alignment 문제도 있고
뭐 그래서
64비트 머신에서는 64비트 정수를 쓰는 게
뭐 빠를 수 있다는 건 이해를 하겠는데
요즘 들면 점점 생각이 되는 거에요
이 floating point 안 쓰면 안 되나 그만
제가 최근에 C# 코드 보면서도
제가 요즘 하는 C# 코드는
굳이 뭐 퍼포먼스가 중요한 그런,
뭐 중요는 하지만 게임처럼
중요한 게 아니기 때문에
웬만한 계산 보이면 그냥
double로 다 바꿔 버리고 있거든요 귀찮아서
그래도 조금 더 정밀한 게 낫지 이 개념에서
근데 그러면서도 마음에 안 드는 건
어차피 계산 들어가면 오차가 있는 거고
그렇다고 반올림을 언제나 시켜 줄 수도 없고
반내림을 언제나 시켜 줄 수도 없고
되게 싫은 거에요
하지만 그래도 float보다는 나으니까
심지어는 게임에서도 이 float보다 double을
쓸 수는 없을까라는 생각을 되게 많이 했어요
뭐 느려지는 성능 이런 건 다 있지만
한번 제가 뭐 실험을 해 보기에는 뭐
제가 그렇게 generic하게
만들어 놓은 엔진이 없어서
ODE처럼 쉽게 컴파일이
가능한 것도 아니고
그래서 망상을 하다가 이제
굉장히 테크 쪽으로 강한 사람,
프로그래머 하나한테 물어 봤었죠
float 대신 double을 쓰면 어떨까
뭐 지금 integer는 다 32비트, 64비트
넘어 가서 그거 써도 된다는데
근데 그 사람 말로는
자기도 아직,
그 floating point 그.. FPU가 있잖아요 CPU에
floating point 연산을 담당하는
그걸 뜯어 보진 않았는데
그게 아직도 32비트면 별 의미는 없다고
속도가 빨라지지도 않고
그리고 심지어는 한동안 그..
쉐이더 아키텍처에서는
그런 게 좀 있었어요
Cg 언어 같은 경우에는
그니까 뭐 HLSL 말고 Cg FX
거기서는 컴파일할 때 half
precision으로 컴파일하는 방법이 있고
full precision으로 컴파일
하는 방법이 있었거든요
제가 정확히 두 개가
몇 비트인지는 모르겠는데
그니까 float이란 데이터형이 있고
half란 데이터형이 있어요
제 생각에는 half란 데이터형이 32비트고
float이란 데이터형이 아마
64비트가 아니었던가 싶어요
그래서 거기서도 그렇게 하면은
여러 개의 floating point를 또 하나 레지스터에
몇 개 구겨 넣어서 동시에 계산해서 더 빠르다
뭐 이런 얘기도 있었는데
그래서 CPU
PC 쪽에는
저도 아직 안 열어 봤지만
제 생각에는 여전히 floating point가
기본 레지스터가 32비트가
아닐까라는 생각이 들어요
그래서 그 64비트로 했을 때
빨리지지도 않을 거고
오히려 느려질 거고
그런 생각이 막 드는데
굉장히 불만 중의 하나에요
망상 중의 하나지만
float을 왜 아직도 우린 쓰고 있는가
10년 전에, 20년 전에 float 쓸 때
아 나중에는 신경 안 써도 될 거야
그래서 우리 에..
ODE 같은 엔진도 미리
double이 될 수 있게
뭐 아니면
수학 산술적인 연산을 중요하게
만들기 위해서도 그랬을 수도 있지만
그렇게 만들어 놨는데
정작 아직도 float을 쓰고 있다는 게
너무 마음에 안 드는 거에요
그래서 우리는 언제나 할 수 있을까
그 생각은 드는데
뭐 망상이죠
그리고 어떤 의미에서는
float의 개념을 아예 넘어서
그냥 아예 fixed point로 갈 수 있는 세상이
왔으면 더 좋겠다는 생각도 많이 해요
fixed point 솔직히 생각해 보면
잘 곰곰히 생각해 보면
어차피 우리 integer 32비트
여태까지 썼잖아요
그럼 integer 32비트 두 개 뭉쳐 갖고
그걸로 floating point를 표현하면
그게 64비트 아닌가?
fixed point로 그냥?
첫 번째 32비트는 그냥 정수 부분,
그리고 나머지 32비트는 실수 부분인데
그냥 그거를 정수로 하면은
정수가 지원하는 2 to the 32
있잖아요 2의 32제곱(2^32)
그거까지 하면서 그 정도의 값은 표현
할 수 있지 않을까라는 생각을 하고 있죠
그러면 뭐 계산하는 것도
이거 이거 따로 계산한 다음에
정수 부분, 실수 부분,
나머지 그.. 뭐라고 하죠?
carry over? 반올림?
반올림 아닌데
올림인가?
자릿수 올림
그거만 처리해 주면 되니까
자릿수 내림이라든가
그렇게
그런 망상을 했었어요
근데 이거를 제가 직접 하나하나 코드로
짜 갖고 다 지원해 주기는 너무 귀찮고
그냥 language에서 나왔으면
참 좋겠다는 생각이 들어요
어떤 language에는
라이브러리 형태인지
아닌지 모르겠지만
자체 언어로 지원하는 게
BigInteger라는 게 있었던 것 같아요
그게 아마 제 기억에는
제가 틀릴 수도 있어요
그 32비트나 64비트의 한계를 넘는
끝도 없이 아무리 큰 integer도 만들 수 있는
그런 개념인 걸로 알고 있거든요
근데 뭐
제가 어떤 언어에서 봤든
아마 스크립트 언어
쪽에서 봤던 것 같은데
제 느낌에는 그냥
string으로 해서, string으로
한 자리 한 자리 계산해서
뭐 자릿수 올림, 자릿수 내림
다 해 주는 것 같고
뭐 제가 이렇다 할 해법은 없어요
그냥 헛소리를 막 한 것뿐이지
그래서
그냥 아
float보다는 double을 쓰고 싶고
double보다는 좀 더 정밀도가
확실한 뭔가를 쓰고 싶은데
이게 정말 성능 때문에 우리가 못 하는 걸까
오히려 가능한 게 아닐까 이제는
게임에서 예전만큼 CPU..
아 모르겠다
에셋이 많아지면서 그 에셋을
만들 능력이 없으니까
그럼 에셋을 더 이상 못 만드니까
그럼 에셋을 적당히만 만들면
남는 CPU 잉여 파워로 그냥 float 대신 double을
돌리고, double 대신 int를 돌려도 될 것 같은데
근데 문제는 CPU가 더 이상
발전을 안 하고 있는 상황에서
CPU 숫자가 늘어날 것 같지도 않고
제가 4, 5년 전에?
아니야 5, 6년 전인가 보다
샀던 컴퓨터가 코어 4개에
하이퍼스레딩 달려 갖고
총..
그니까 뭐 하드웨어 코어로는 4개고
소프트웨어 스레드까지 따지면..
아니야 하드웨어 스레드라 그러죠
하드웨어 스레드까지 따지면 총 8개인데
요즘 나오는 PC 중에 그거 이상 되는 게 별로 없어요
정말 powerful한 건 12개까지 달려 나오던가?
지난 뭐 5, 6년 동안에 그게 발전이었다면
앞으로도 굳이 CPU를, 무슨 250개가 달려 나온다
이런 얘기는 5년 안에도 아닌 것 같아서
그런 생각을 또 하고 있어요
언제나 망상이죠
망상은 계속하다가
비디오를 끊어야 돼
포프였습니다
