예전에
디버깅이 프로그램의 반이다 라는 비디오를 만든 적이 있어요
디버깅 의 중요성은 말했죠 그거하고 되게 비슷한 얘기 의 비디오 에요
제가 최근에 이제 어떤 좀 주니어 급의 프로그래머를
멘토링을 하다가 이제 발견한 문제인데 s 옆에 앉혀두고 프로그램이 하다가
버거 나와 떼고 치는거 보고 이 디버깅 입안이 달하는 비디오에서는 정말
디버깅을 주문시 하라고 했어요 근데 이거는 어떻게 보면 기술의 문제도
아니고 아무 기술의 문제 순 있어 근데 기법의 문제일수도 있는데 그것보다
더 중요한 것은 개인의 자생 것 같아요
음 제가 얼마전에 만든 비디오에서 그런 얘기했죠 숫자 놀음 정치의 뭐
얘기 이런거 얘기 하다가 실수를 할 줄 알아야 된다
사람은 실수를 하는게 솔직히 어 어느 정도 중요하다는 얘길 했어요 거기서
고쳤고 배워 나가면 되니까
똑같은 얘기에요 디버깅을 잘 못하는 애들의 문제점을 제가 보니까
디버그를 만드는것을 무서워해요
그리고 이제 버그가 만들어지면 보고자료 보고 있다고
그럼 거기서 자기 실수 했다는게 너무 부끄럽고 그래서 그것을 피하려고
하는 경우가 많아요
그래서 그것을 피하려는 애들에 또 특징중에 하나가
빨리 덮으려는 거지 그니까 이 버그를 만드므로 해서 이 버그를 고치고 이
퍼가 외 만들어 준 지 이해를 해서 다음에 이런 법을 안 만들겠다는
원인을 찾아서 실제 그 원인을 없애는 것보다는
이 현상이 보이잖아요 버그는 현상이 어떻게 된거 안보이게 덮어 버리고
아무 일도 없었던 것처럼 넘어 가고 싶어하는 애들 그게 삶에서도 나와요
그 사람들이 어떻게 살고 어떻게 그런 자기 실수에 대해 대처하는 야 라는
그런 자세가 버그를 고친 은거 에서 나와요
이런 애들의 특징은 아 이것저것 해요 이것 좀 하다가 버거가 일단
사라졌어 그러면 아 끝났습니다 더 풀려 그래요 이제 그 때 볼 때 따자
거 드냐
또 이거 바로 적 그전에 이때 굽신 않고 드라고 그저 일단 버거 뱉어
엿짜 나 지금 이걸 가다보면 지금은 안 터지는데 나중에 터진 어떡할
거냐고 다시 그때 또 거쳐 거 냐고
그때 이만큼 시간 투자해서 다시 편당 차야 해보실 거냐고
차라리 더 가 몇 번 할 때 이 현상을 덮는 게 중요한 게 아니라 정확히
버그가 어떻게 났는지를 이해를 하고 논리적으로 왠 아니라 알면은 이 걸을
고치면 언더라인 이슈 라 그러거든요 실제 가장 근원이 되는 문제 이유를
고치면 버그는 사라지니까 그런게 확인이 됐을 때 과거 가고 친구라고
하는거라고
그걸 굉장히
강조를 했어요 이제 괴롭 쩝 본인은 왜냐하면 덕 않았을 때 누구도 이유를
한번에 알지 못해요
그러면 내가 진짜 엄청 멍청한 거야 어떻게든 이거 찾는데 답이 안나와
d 포기하는 데 웬만한 건 학교 시험 걸리는 경우 많거든요 그러며 씨가
되는 답이 안나와 난 뜨게 멈추게 보이잖아요 그러면 거의 스트레스
개업하는 거야
아따 없고 넘어가자 이렇게 넘어가요 근데 문제는 뭐냐면
걔네들은 죽어도 디버깅을 뭐 태어나 중에 가도
참에 처음에 어렸을 때 배우며
뭐 주니어 때 배우며 그나마 누군 옆에서 용서 라도 하잖아요 그냥
중요하니까 좀 더 해 이런 식으로
근데 그래갖고 열차 쌓여 왔고 어쩌다가 뭐 올라가요 인터넷 시니어 근데
그때도 버그 못잡고 있어 그 못할 거에요 응 막 먹는 거죠
제가 예전에 디버깅을 해봤니 라는 비디오에서 어떤 씨니어 가 법 디버깅을
못하는 걸 엄청 딴 적이 있어요
바로 그런 사람이 되는 거예요 정말 가면 갈수록 쓸데 없고 뒤에서 수근
수근 거리는 살아
차라리
기회가 있을 때 그것을
문제를 보는 습관을 들이고 거기서 똑같은 문제를 안 만들 수 있는 실력을
키워 가는 거죠
또 크게 되게 중에서 생각하는데 왜 그렇게 모든 사람은 아니에요 왜
그러고 근데 일부 사람들이 왜 그렇게 버거를 만드는 것 요소 하는지
모르겠어요
버거를 만드는 것은 쪽팔린 게 아니에요
그 버그의 뭐라 그럴까
원인을 찾아 고치는 대신에 현상을 덮어버리는 계조 팔릴 거에요
크게 정말 쪽팔린 거예요 그래서 그런 말 등을 하고 싶었어요 돼 내가
디버깅 실력이 모자란다고 하는 사람들은
쪼금 그분을 고민해 보시길 봐요 내가 정말 어떤 문제를 봤을 때 내가
이걸 100% 이해 못해도 왜 덮고 넘어가는 경우가 많은가
그거를 정말 제대로 봐야 될 것 같아요 그래서
버그를 확실히 고치면 언제나 확실해요
버그를 밝혀내어 버 간암 이유를 확실히 이해를 해요
그리고 그 근본이 되는 문제를 고쳤는데 벅 않나 그런 거친 거에요 근데
그게 아니라 그냥 뭔지 몰라서 아무거나 마 이렇게 고치다 보니까 거쳐
였어
근데 이게 이걸 왜 것 천지 분명하게
뭐라 그럴까 인과 인간하고 줘 원인과 결과 그런 필수적인 링 관계가 안
보여요 금색을 않 거지 구요
그거 이해할 때까지 버그는 파야 되요
문제는 이제 나중에 뭐 당연히 당장 뭐가 서비스가 나가야 되는데 깨진다
뭐 이런 경우에는 대충 때 빵을 쳐먹고 나가는 경우도 있어요
근데 그거는 언제나 주석을 달아 놓고 자기가 시간이 날때
나잖아요 브렛 나가고 나면 그때 버려서 다시 한번 제대로 파야 되는거예요
그리고 주석의 이게 왜 고쳐주는 지 모르겠지만 일단은 핵으로 라도 이렇게
한다고 남겨놓고 내 이름 박아주면 은 내가 나중에 쪽팔려 나서 찾기 4
근데 이런 애들도 특징 2 안 남기 줘 대충 고치고 넘어가 나중에 또
비슷한거 에서 뻑이 나요
그러면 그 코드를 보는 사람은 아무것도 몰라요 보면서 이게 왜 이 코드가
있을까
이 코드가 과연 제대로 거친 걸까 아닐까
이걸로 간 빼도 될까 아닐까 유지보수가 힘들어요 그래서 제가 하고 싶었던
말은
디버깅을
버 아이가 버그를 만드는 걸 두려워하지 말자
그런데 버그를 제대로 못 고치는 거에 정말 쪽팔려 하자는 얘기가 하고
싶었어요
음
계획 음 그 정도로 하죠 예 뽑혔습니다
