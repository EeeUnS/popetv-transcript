안녕하세요 포프 입니다
제가 옛날에 게임 컴퓨터 그래픽 프로그래머였어요
옛날라고 해봐야 몇년 안되는데 뭐 요즘도 하는 일이 있었고
그래픽을 좀 보고 있긴 한데요 
OpenGL
그 드러운 OpenGL에서
뭐 그래서 하려고 하는 얘기는 오랜만에 그래픽 이야기를 좀 해보려고 해요
이거는 사실은
아직도 한국에서는 필요한 기법일 것 같긴 해요
제가 렐릭에서 옛날에 일할때
렐릭이 되게 유명한게
이펙트 특수효과 그러니까 파티클 튀는거 있죠 그걸 엄청나게 퍼붓기로
유명한 회사에요 2006년부터
제가 회사 나오고 나서 요즘 나오는 최신
게임에 있자나요
진짜 막 최고 그래픽 베틀필드 뭐 뭐 이런것들
그런거 봐도 전 짜증이 나는게 파티클이 되게 멋이 없어요
파티클이 뭐냐면 이렇게 총 같은거 벽에다 쏘면은
불꽃 팍팍 튀는 거 있자나요 
그거 보는데
뭘까 반짝이는 띠 몇 개 이거예요
뭐지..? 렐릭에서도 이짓을 안하는데
 그래서 생각을 요즘 했어요
렐릭이 한쪽에 잘 올인을 한 회사였구나
그리고 그 당시에 pc 전용이였기 때문에 예전에 그럴 수 있었고 
제가 만든 프로젝트에서는
콘솔에서 돌았고 노트북 4년 된것에서 돌리게 진짜 노력을 했기 때문에
4년 정도 지난 노트북에서 돌았어요
그걸 하기 위해 되게 엄청난 최적화 했기
때문에
파티클 최적화가 굉장히 중요 했었거든요 그래서 뭐 제가 직접한 일은 아니에요 
사실은 저와 같이 일하던 다니엘이란 친구 있잖아요
한국에서도 같이 강연가고 했던 그 친구 그 친구가 되게 많이 했던 일이에요
아 그 친구 전에 그 뭐 다른 회사 있던 다른 친구도 했었고
이미 그 친구가 프리젠테이션 했던 얘기고 그리고 근데
렐릭에서 파티클을 뽑을 수 있었던 이유는 사실은 하나였어요 뭐냐면
뭐 그렇죠 하나라고 하죠 뭐 이제는 많이 쓰는 기법을 것 같은데 예전에는
뭐 파티클 하나 그리면 보통은 요만한 이미지 가져다가
불꽃 이미지 갖다가 화면에 하나 그리고
 또 그리고 또 그리고 또 그리고 또 그리고 하는 거였거든요
그러니까 이미지 입혀가지고 사람 눈에 맞게 그리는 게 전부였어요
근데 렐릭에서는 이거를
뭐라 그럴까 이거 하나 전체를 매쉬로 구운 거에요
그니까 이게 5개가 있다
사각형이 그러면 cpu에서 5개를
구워요 메쉬로 버텍스 버퍼 라고 하죠
그 버퍼 안에 다 넣는 거예요
그러면 아까 5개 인가
넣었으니까  정점의 20개가 들어가겠죠
그리고 그걸 한번 들어오면
한번에 그려주는 거에요
이렇게 되면 좋은게
draw 콜을 할 때마다 굉장히 과부하가 있었거든요 pc 에서는
이것을 draw 콜을 할 때마다
메모리 잡아서 gpu에 보내고 뭐 커맨드 집어넣고 그리고 이것보다
한번에 보내는 게 싸요 그래서 그렇게 많이 했어요 근데
그래서 저희가 막 파티클 하면 뭐 화면에 몇 만개 몇 십만개 막 뿌리고
난리도 아니었거든요 저희 파티클 마치 장난아니게 날렸어요
이게 다 좋은데 pc에서 충분히 좋았고 뭐 뭐에서도 좋았는데
저희가 결과적으로는 한군데서 문제가 생겨 썼거든요
제 기억에 콘솔에서 ps3인지 xbox360인지 하나중에
그래도 속도가 느렸어요 그 속도가 느린 이유가 뭐냐면
워낙 뭐 500개고 5만개고 5000개를 그려도 화면에 차지한 픽셀 수가 있잖아요
그럼 그 픽셀을 그리고 그 위에 또 들어가 또 그리고 또
또 그린다구요
이게 다 반투명하기 때문에 파티클이라는게 아무래도 반투명일 수밖에 없잖아요
그러면 앞에서 뒤로 정렬해 가지고 뭐 뎁스 버퍼를 써 같고
뭐 얼리리젝션을 할 수 있는 방법도 없고 화면에 그려지는 모든 픽셀을 다 그렸어야만 했어요
그게 막 뭉게구름 막 나 올 때 보면은
몇 10개 레이어 몇 10개 막 덮어 그리고 전체 화면 막 그리고 이러면 속도가
너무 느렸거든요 그래서 아
저희가
픽셀 쉐이더는 되게 빨랐어요 저희는 픽셀 쉐이더가 빠른 이유가 
그 모든 연산을 굉장히 단순하게 했어요
뭐 제대로 조명 계산을 한 것도 없고 되게 단순하게 개산하고
노말 맵을 씌운 경우도 거의 없고 이니면 미리 조명 계산을 한다거나 뭐 이런
별별것을 해왔고 픽셀쉐이더는 굉장히 빠르게 했고 결과적으로 저희가 문제가 됐던 건 마지막 단계
그 픽셀을 쉐이더에서 그렸을 때
최종 렌더 버퍼 라고 하죠 렌더 버퍼에 갈때 블렌딩을 해야 될 거 아니에요
그 전에 있던 거랑 지금 거랑 알파 트랜스 알파값으로
트랜스 페어런트 블렌딩을 해야 되니까 투명도 블렌딩을
그거 블렌딩 하고 여기에 쓰는거 그게 엄청 느렸.. 
그게 너무 많으니까 그게 가장 보틀렉이되더라구요
그 저희가 했던 최종 방법이
프레임 속도가 빠르면 초당 30프레임 60 프레임 나오면 그냥 다 그려요
파티클 다 그리다가 갑자기 어느 순간 이게 30 프레임 밑으로 딱 떨어진다 그러면 저희는
이 파티클를 그리는 것을 가로 1/2 세로 1/2 줄여서
1/4 크기로 줄이게 만들었어요 그러니까 돌다가 지가 측정을 하다가 게임이 도는데 갑자기 느려져 그러면 이것을
레졸루션을 반으로 확 줄여 버려요 그러면은
실제 게임 씬는 여기 있고 이게 총 사이즈가 제대로 된 사이즈 풀 사이즈이고
그 때는 파티클 버퍼가 따로 있는거예요 한 1/4 사이즈 해가지고 그려요
그린 다음에 그러면 아무래도 화면을 커버하는게 4분의 1밖에 안 되니까
속도가 4배로 빨라 지거든요
그 다음에 이걸 다시 늘려 갖고 원래 씬에 덮어 쓰는 거에요
이게 되게 재밌었던게
이러면 뭐 게임 하다가 갑자기
막 경기가 뭉뚱그려졌다가 파티클이 뭉뚱그려졌다가
다시 잘 보였다가 뮹뜡구려졌다가 이런 일이 있거든요 그래서 아 이게 과연 뭐가 어떻게 해야 또 좀더 그나마 제대로 보일까
라고 고민하다가 저희가 최종적으로 했던게 사람 눈을 속이는 거 였어요
사람눈이 되게 재미있는 게 뭐냐면 뭉개구름이 막 피어 올 때 이게
한 프레임이 뭉개 질 때 눈에 그렇게 확 뛰지는 않아요 사실은 띄는 이유가
뭐냐면 그 뭉개 구름의 경계선이 있잖아요
배경 하고 있고 그게 파티클의 경계선 뭐 불꽃도 그렇고 모두 
이 경계선이 이게  뭉개지면요
그게 눈에 확 띄는 거에요 경계선이 경계가 확 바뀌니까 근데 그 가운데가 바뀌는거 안보이더라구요
그래서 저희가 진짜 마지막에 이거 어떻게 했냐면
되게 재미있었죠 반 사이즈로 그려요 1/4 사이즈로 그리고
화면에서 화면이 이걸 그린 다음에
경계를 경계 만 따서 다시 풀 사이즈로 그렸어요 그래서 경계는 실제 뭐랄까
실제 사이즈의 위에 그렸기 때문에 뚜렷하게 경계가 나오고 그 가운데 만 뭉게구름 뭐 그린거죠 뭐
그거 하려고 스텐실 입히고 뭐 하고 뭐 하고
뭐 별 별일 많았는데
뭐 결과적으론 스페이스마린 하면서 평 나온거 중에 평 나온거 봤을 때
뭐 아 파티클이 가끔 뭉게진다 이런거 하나도 못 봤거든요
대부분 모르고 있는거에요 파면서 아무 문제도 없이 사람들 했고
저희 최적화 에서는 그게 정말 엄청 많이 잡은 최적화 중에 하나였어요 그래서
혹시라도 그냥 파티클을 엄청 때려 부우시는 분들중에
그 가끔 파티클이 너무 느리다 그래서 파 트클 수를 줄여야 한다고 전체
게임 퀼리티를 아예 줄이시는 분들이 있거든요
파티클 너무 느리니까 이거는 아 뭐 파티클의 원래 뭐 이미지를 10개씩 썻다면 5개만 써 이래가지고 파트클이 이제 불꽃수 줄어들어 가지고 게임이 이상해 보이는 경우
그럼 차라리 랜더 파이프 라인을 좀 바꿔서 프레임 수 따라 줄어드는 걸
좀 크게 줄어들고 외각선만 풀해상도로 덮으는 거 한번 해 보세요
진짜 저희는 많이 그기서 이득 봤어요 그리고 dx9급에 하드웨어에서
많이 했던 거니까 아직도 MMO 한국에서 많이 그쪽으로 만들잖아요
그러면 아마도 도움이 될 거에요 제가 볼때는 dx11 이나 10에서
도움이 되는 건데
11까지 가면 컴퓨트 쉐이더를 써 가지고 어떻게 할 수 있는 방법도 있을 거고 여러가지 방법이 있기 때문에 그건 좀
이 방법이 그대로 먹겠지 는 생각을 해 봐야죠 음
그래서 사실 이 비디오를 되게 예전부터 만들려고 했어요
예전에 생각날때 만들자 했는데
계속 목록에서 몇년동안 뒤쳐져 있다가 지금 안 만들면 내가 까먹겠구나 싶어서
대충 만들어봤습니다 포프였습니다
0x6b6C7f9f4Ee723273f573973aDdeCd8578a6bF1E
