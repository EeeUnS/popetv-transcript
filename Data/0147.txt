예언서 포프 입니다 최근에 그 뭐지 cpp 컨 이라고 1
그 cpp 컨퍼런스 거 같아요 그거 작년 자료가 올해 자료 구나 올해
자료가 비디오가 몇 개 올라왔어요 아마 이 콜트 쪽에서 해 올렸던거
같은데 그 자료를 보면서
10 뿔뿔이 뭐 예전에 한번 뭐 99년도에 한번 나오고
구제 그렇다면 개정이 된거죠 그 이후에 굉장히 안 밖에 나가 로 11년도
바뀌고 13도 바뀌고 17년 도 맡기고
매년 3년마다 이제 바꾼 계획이 나오잖아요 그래서 처음 해낸 으니까 51
은 큰 체인지 13일 작은 체인지 17일 큰 치 이런 식으로 하고 뭐
인텔에서 뭐라고 하지
틱 탁 이라고 한다 뭐 그런 비슷한 개념으로 가는거 같기도 하고
써서
이전에도 비슷한 얘길 한 것 같아요 굉장히
맘에 안들어요 그러니까 좋은 것도 있어요 제가 이렇게 막 바뀌는 것도
나오면 쭉 보다가 일겁니다 해도 좋다 이거 좋다 면서 읽는 경우가 꽤
있는데 대표적인게 이제 뭐 라이브러리 화가 되는 것들은 굉장히 좋은
것들이 많아요 사실은 뭐 예전부터 있었던 범위
이제 범위 스코프로 하는 그 밑에 x 같은거 있잖아요
뭐라고 이제 범위 귀한 범위 제한 뭐 그런 그런 미 텍스 라던가 뭐 오토
베이 오브 이런 것들 그런 게 굉장히 어찌 보면은 다른 언어에서 이미
있는 것들 저희가 코딩하기 편하게 하는 것들
그러면서 가독성을 해치지 않는 것들은 굉장히 좋거든요
4 그러면서도 또 굉장히 잡다한거 많이 추가를 해요 근데
특히나 이제 씨의 문제인것 같은데 씨의 이제
템플릿 같은것을 쓰기 시작하다 보면 은
읽기 너무 복잡해지고 키보드 칠 때도 굉장히 귀찮아지는 그런 이상한 막
것들이 많거든요 보면 이게 후에 나머지 생각이 들 정도로
그런것들 좀 문제가 있고 아니면 은
어떤 것은 아예 가독성을 해야 하는 경우도 있어요 씨의 제가 장점이라고
보는가 언제나 그 거였어요
씰의 코드를 짜면 은 이게 하드웨어에서 어떻게 돌집 가며 해요 그래서
어떤 코드를 자동 간에 그 내부적으로 음 이렇게 돌 겠구나 감이 오고
그렇기 때문에 아 뭐라 그럴까요
아 코드 하나를 자더라도 성능에 대한 아까 뭐 반드시 최적화 하는 거
알지만 성능에 대한 자신감을 갖고자 할 수 있다는거
아님 나중에 코드가 봤을때 아 이게 여기서 이것때문에 이루어질 수
있겠구나 라는 그런 생각을 할 수 있다는거
그리고 어찌보면 음원 하드웨어 아까우니까 그냥 뭐 실수를 할 일이 어찌
거 그래 적어진다는 생각을 많이 했어요 근데 요즘 나오는 표준 우린 아마
그런 걸 보면서 그렇지 못한 것들이 너무 많은 것 같아요
그리고 일단 가족성 이해 하는 것도 많고
이건표 표준 얘기는 아니지만 최근에 들었던 그 스트링 최적화 cs 팀
최적화가 들어가 있대요
저는 스트링을 이제 보면 언제나 걱정이 됐던 게 뭐냐면 스트링은 언젠간
뭐 이렇게 플러스 가게 스팀을 추가할 수가 있잖아요 그럼 c 에서
어레이를 써보신분들 알겠지만 결과적으로 내부적으로는 스트링을 이렇게 덕
추가 하고 붙일 때마다 메모리 할당이 다시 일어나고 새로 매물에 알로
계셔 나고 예정 거 지우고 뭐 이런게 이 이런 일이 있어야 되는거 아누
9 나요
그럼 뭐 당연히 메모리 알고계신 굉장히 느린 문중에 1 9시에서 물론 뭐
커스텀 rok 달러 테이터를 줄 수 있다고 이렇게 얘기하는데 그건 어떻게
어찌보면 한번 세팅해 놓고 코드를 처음 때까지 잘 제대로 입지 않으면
커스텀 알로켄 때가 셋팅 설정 돼 인지 안됩니다 할 알기가 어렵기 때문에
오히려 가독성을 하는 부분이긴 하죠 그래서 당연히 게 드리겠다 라고
생각을 해서 저는 우리의 스팅은 않았어요 잠깐 차 어레이를 썩은 어제
자체 스트링을 만들어서 처음부터 어느 정도 스트라이크가 될지 리베
잡아주고 그걸 안 넘어가면서 정도의 쓰거나 넘어가면 뭐 집어서 틀을 내는
방향이 g
근데 이런 문제를 고치려고 어
음악 마이크로소프트 쪼개어 쓸 거야 다른 쪽도 그랬던 것 같고
이게 이제 문제는 컴파일러 많이 달라진다는 건데 그 내부적으로 스팀
추적할 것 같아요
그림 뭐냐면 스트링을 처음 만들때
스트링의 길이가 뭐 32개 캠프가 작아도 32개 16 연지 미리 어레이를
잡아두는 거에요
그리고 봄 계속 스팅 을 추가하면 은 프론트 밸런스 때까지는 그냥 스트링
만취 가는건 에 의해서
그러다가 갑자기 그걸 넘어가기 시작하면 은 이제 그 때부터 메모리 할당
뭐 할당하고 이것을 시작하는 얘기죠 뭐 꼼수 가 적힌 좋고 어찌보면
자동적 수저 칼 정말 좋긴 좋은데
저는 어이가 없는게 이게 이 순간부터 제가 코드를 읽을 때 과연 이게
메모리 할당이 되는지 안 되지만 보이는 거예요
컴파일러 따라 그 숫자가 바뀔 수도 있을 거고 버전 따라가게 달릴 수도
있을 거고
보기에서 아이 러 이런 코드를
보기가 싫은 데 라는 생각이 드는 거에요 오히려 이건 누린 거라고
않았던건 4 어쩔때 바로 멋진 느린거 그리고 어쩔때 라는 개념이 바뀔
수도 있다는게 너무 싫었고 그래서 뭐 컴파일러를 빨간 이런저런 최적화를
하는 사랑하는건 좋아요 근데
이렇게 내부 동작을 바꿈 정도 시작하는 문제가 있지 않나
차라리 미리 컴파일 시간 계산이 가능한 것들을 최적화 한다거나 코드
위에서 로 영향이 안주는 순서 바꿔도 영향을 주는 걸 스스로 바꾸게 해서
뭐 셈 블리 의 서로 뭐 웨이트가 없이 가에서 카이 켜게 한다는거
싸이클을 막히는 경우 제가 그런거 없이 만드는 그런거 다 좋은데
이건 아니잖아 생각이 들었어요 그리고 또하나 최근에 또 그렇게 뭐냐면
c 에서 굉장히 잘 못하고 있는 것중 하나가 뜻이 표준이 연해서 제가
볼때는
어찌 보면은 언어 자체로 이제 오픈 표준으로 해고 만드는것도 문제인거
같기도 하고 어쩌면 그 언어 하나를 정말 책임지고 자기의 원칙상 끌고 갈
수 있는 딱 한 사람의 거의 독재자 같은 사람이 없다는 것도 문제인것
갖게 돼요
155 토 포인터 같은 경우에도 예전에 나왔을 때 나오고 지금 오토 폰트
쓰지 말라고 다른거 나왔고 또 뭐 쓰지 말라 그러고
버전이 나올 때마다 예정 코의 문제를 발견해서 이걸 쓰지 말고 이걸
사랑은 가고 있는 바 방 예고
그러면서 못 빼고 또 컴퓨터 let 문지 때문에 여전히 지원하고 있죠
그리고 최근에 또 이제 지금 어떤 것 중에 그 rl 2호 케말 짓이라고
있어요
저도 얼마전까지 별로 신경을 안 쓰다가 최근에 대해서 제대로 한번
읽어봤는데 cp 컨텐츠의
이게 한마디를 뭐냐면 예전 같은 경우에는 그 함수 같은 경우나 뭐 이런거
에서 가장 큰 문제가 서식 복사 하는 그 컴퓨터 얘기였다 고 하는데 무브
이런거
중요한거는 템포 니 베리어블 그냥 반환 할 때니까 포인터가 아니라 뭐 내
오브젝트 클래스 안에서 어떤 오브젝트를 반할 때 그 옷의 카피가
들어가면서 뭐 이런 문제도 있고 캠프 로리 오브젝트 만든 다음에 함수
안에서 그걸 반응하며 는 함식 거니까 뭐 미제 복사가 일어나 잖아요 그럼
크게 내릴 수 있고 뭐 어레이를 그렇게 해 드릴 수가 있고 척추 소개해
드릴 수가 있기 때문에 그게 느리다는 것을 이제 그 텐프로 리베 이어
물을 그 곧바로 복사가 아니라 그 소유권을 넘겨주는 방식으로 할 수 있는
새로운 언어의 변화 갔다왔어요 rotor 이제 신이라고
이따 신택스 또 구리 고요 뭐 이렇게 막 음 어 펭귄 뭐였죠 이렇게 간
버스 안 들어간 것 2개씩 따라야 되고 그리고 코드 말겠다 봤을 때 과연
이걸 어디에 쓰는 게 옳을까
의심스러운 경우도 많고 또 예전 같은 경우엔 이제 뭐 컨 스트랩 꽤
플러스로 바 나가면 그게 보통은 했거든요 그런 식으로 근데 이제
그 게 아 니 라 1 커스티 가 아닌 이상은 그런 탱크로리 되어 그
자체를 그 퀘스트가 아닌 걸로 반할 수 없다는 단점이 있었죠
그걸 해결하기 위해 낭 거래요 예전처럼 그냥 뭐 뭐 오브젝트 같은거 있고
그 로커스트 뭐라 그러지 그 몇 프랑스로 참조로 반환하며 는 어차피
똑같은 거고 그게 아니라 그냥 컨트롤 할 수 없을 때 그 때는 복사가
어쨌든 일어나니까 그것은 맞게 하는게 알 베리 부터 해주신다
이것을 잘 하면 은 정말 뭐 카피 컷을 더 빨라지고 뭐 뭐 이런 얘기가
많아요
하지만 제가 도어
야 이거 를 제대로 쓸만하다 군대가 없을 것 같은 생각이 들고 신 텍스트
그리고
잘못을 던 를 쓰지 않을까 생각도 가끔 들고 물론 체 가지 이해가 모자는
거기에 할 거야 이 부분에 그런데 열심히 하고 있었어요
4 cp 컨 에서 올해 얘기를 하더라구요
다들 금호 그 유명하신 분이 짜 스칸 - 라든가 이런 분도 뭐 책의
되셨다는 데 신경쓰지 말라
요즘 사람들 문제가 새로운 거 나왔다고 너무 그 쪽으로 쏠려 가면서 너무
코드를 개판 치고 읽기 어렵게 만드는 데 사실 발발 이후 보다는 l 이유
그러니까 r 발리는 이제 오른쪽에 있는건 에러를 얼고 엘란 왼쪽에는
레벨이라고 하거든요
r 발리 보다는 에벨 저쪽에서 오히려 석도 조화가 많고 사미자 끊었다
먹는 것 같아
그리고 알바 류를 잘 볼수 없고 계속 실수하는 것보다는 차라리 옛날에
하던 대로 그냥 컨 스트랩 테라스로 반 학생 답안 하고 그렇게 쓰라고
그러더라구요
그 알베르 쓰지 말라고 지금 나온 리코 멘션이 올해 나오기 커맨드 진짜
올게요
작년에는 말 살리고 좋다 막 써 쓰다 이랬는데
올해 나온 애커맨 레이 션은 애쓰지 말아요 뜨지 말고 정말 어쩌다가 그
뭐 오브젝트 복사 하거나 뭐 이런 하는게 그게 엄청 느린 거는게 정말
프로파일에서 떠오르면 그 때 고칠 해요 근데 제가 프로그래밍하는 경험상
그게 내려갔고 코드가 느려진 경우 왔어요 뭐 그게 느려서 이제 뭐
레퍼런스로 반하거나 포인터를 반환 적은 불러 있죠
그런데 그 예전 시로 해결을 못해 갖고 그것때문에 정말 드렸던 경우가
없어요
그게 웃긴 뭐예요 그래서 결과적으로 또 뭔가 안 그럴 때 악기처럼 만들어
놓았고 어찌 보면은 어느 분야에서 쓰일 말란 고 싶진 있을지도 모르겠는데
뭐 라이브러리 속에서 쪽 쓰릴 수도 있을 수도 있겠고
근데 결과적으로 실수한 허밍 놓고 읽기도 어렵고 뭐 여러가지 따져봤을 때
쓰지 않는게 가장 안전하게 코드를 짤 수 있고
1 김에 정말 필요한 그때 서해 서라 근데 저는 프로파일러 에서 그게
느리다고 나온 좀 거의 본 적이 없어요
크게 문제 그니까 제가 올 때는 이거는 정말 스펙의 들어왔는데
한 90% 이상이 프로그램과 절대 신년 나서도 통해서 쓰지도 않을 것 은
스펙이 아니까
결과적으론 어느순간 또 이렇게 흐지부지 사라지는 까 말 그대로 표준 만
엄청 많아지고
정말 실제 쓰는 표준 굉장히 접은 그런 상황이 되지 않을까 생각도 들고
그래서 요번에 그걸 보면서 좀 많은 생각을 했어요 또 c 플러스 플러스
컴퓨터 좀 약간 좀 바보지 있었구나
예전에 오트 포인터 부터 그랬듯이
해서 내년 매년 이렇게 커맨드 션 나온거 보면 cp 비컨 이런데서 참
재미있어요
결과적으론 뭐 새로 나온 것도 오토 라던가 뭐 이렇게 마모 왜인지 폼
루프 라던 단 오프 라던가 그런건 굉장히 좋아요
왠지 베이스도 프 렌 즈 베 있을 건가 그렇게 정말 코드 쉽게 짤 수
있는 거 이런거 다 좋은데 그게 아니라 뭔가 좀 가독성 자체를 해야 하는
부분이 풀 표절로 들어오면 몇 년 안에
표준이 아니라 그 가이드 라고 하죠 가이드라인으로 이렇게 하지 말라 라고
나오는거 같아요 저는 그 꼴을 보면서 보면서 솔직히 조금씩 짜증이 나기
시작해 씨에 대해서 지금
그래서 요즘 제가 얼마전 아마 트위터에 쓴거 같은데
영문 트위터 정 같은데
학교에서 시공 불이 요즘 몰로 가리키는지 모르겠지만 그냥 이제 나 뭐 뭐
99년 이후 에 나오는게 없었잖아요 것도 굉장히 조금 바꾼 거예요 그
전에 정말 오랫동안 하나였고
그래서 씨를 굉장히 전통적으로 가르켜 거 든 요 정말 어레이 부터
시작해서 메모리 그리고 목 정말 하드웨어 가깝게
요즘엔 걸 어떻게 갈지 모르겠어요 저희 때만 해도 그 때 스틸의 있었는데
굉장히 수박 겉핥기 로 하고 넘어 같거든요
그 어찌보면 정도의 고마워 없구요 st 를 쓸 수 있는 부분이 산업화
많지가 않아요 제가 이제 입장에선 씨를 말릴 때 본을
근데 이제 새로운 표준이 나왔을 때 학교에서 정말 뭘 가르치고 너무
궁금한 거에요 이제 3 표준으로 맞췄고 걸로도 가르칠까 이제 뭐 하드웨어
신경안쓰고 좀더 알고리즘 쪽으로 마시니 없으나 는 식으로 4 그런거면
첫시작 타지 그러면 잡아 하지 못하는 씨를 할까 그 생각 들고 그래서
학교에서 도전은 여전히 좀 전통적인 씨를 발전 좋겠어요 그러다가 마지막에
정말 맛배기로 이런 새로운 게 있다는 걸 보여 주는 정도
왜냐하면
제가 아직도 실무에서 뭐 실무에서 피를 알 짝 은 있지만 아직은 요즘
시선을 많이 하죠
집은 씨를 계속 자면서도 요즘 느끼는거 좀 새로운 게임을 좀 꺼져 기면서
그런 최신 10 플러스 퍼스 일레븐 이나 꼴 팅 이런걸 좀 쓰려고
하거든요 근데 쓰면 쓸수록 정말 좋은 게 있고 몇 가지 시각은 이전
비디오에서 공유 했고 그 외에 정말 해로운 게 많다는 생각이 들었어요
말그대로 실수하고 실수를 적게 만들 수 있는 그런 것들 뭐 버추얼 해서
뭐 파이널 8 얼어 이런거 있잖아요 그런거 그런거 정말 좋죠 그런 것들은
너무너무 좋은데 정말 뭔가 페이지 하게 뭔가 해보려고 했는데
내부적으로 뭘 어떻게 할 지 전혀 처져 감도 안오고
그리고 나중에 가면 누구나 실수 점점 많이 하고 있기도 어려서 그래
가지고 쓰지 마세요 라고 이코 다시 나오나
그런거 보면서 아 이거 이 건 아니구요 생각이 들어요
뭐 예전에 스마트폰이 틀어 그래서 c 에서 오더 포인터 받으신 분들은 닭
얻으셔서 거 더 내셔야 될 거야 라고 쓰지 말라고 데코레이션이 저도
외국어 쓰는 지 몰랐는데
그래서 더
아쉬워요 c 에서 이제 한 명이 정말 강하게 뭔가를 잡아주는 사람이
없다는게 좀 아쉽고
시샵 또 그런 사람이 사람 그런 사람이 사라지기 시작하면서 점점 망가지고
있듯이
쉬는 참 많이 망가졌고 나 이 망가진 것을 제대로 학생들에게 가르치는
선생님 영농 해도 될까 가리켜서
이거나 탄탈 있어 보이 좋은걸로 맞서나
이런 식으로 가야 되는 사람이 있는데 오히려 게임업계 같은 사람들도
새로운 그 뭐라 그럴까
새로운게 나왔다면 신랑 그걸 너무 과하게 적용해서
엔진을 망치는 사람도 많이 봤어요 그런 얘기 진짜 많이 들었고 언젠가 목
얘기도 제가 할 것 같은데
새로운 기술 다 좋지만 역시 조금 지켜봐야만 그
쭉 조금 지켜본다 게 아니라 자기가 직접 10시 만져 보고 어느정도 아
이게 뭔가 하나에 도움이 되고 뭔가 해 주었구나 알 때 진짜 제대로된
프로덕션 퀄리티의 집어넣는 게 맞는 것 같아요
서울도 뭐 주저리주저리 씨를 깜 것 같네요
4 뽑혔습니다
