안녕하세요 포프 입니다
음~
그래도 무늬는 그래픽 프로그래머 였으니까
과거형
뭔가
가끔 그래픽 얘기를 해야 겠다는 생각은 많이 해요
그래서 오늘 하는 얘기는 감마 코렉션 얘기를 조금 하려고 해요
뭐
감마 코렉션 하면은 이제 뭐
쓰~
아마
한 5년전 쯤 부터 컴퓨터가 빨라지기 시작 하면서
제가 한창 라이팅을 제대로 할 려면 텍스처에 있는 그 이미지 있잖아요
그 이미지를 그대로 읽어오면 안된다.
이거는 뭐
실제 올바른 값이 아니여서
이거를 뭐 선형공간은로 변환해서 그거를 제대로 계산해 제대로 된게 나온다
그래서 그 예를 보면은
무슨, 이미지를 그대로 썼을 때  뭐~ 뭐~
그림자를 입히면 그림자가 게임을 어떻게 부드럽게 감쇄 하잖아요
실제 세계에서는 보면은 되게 샤프하게 가거든요
되게 날카롭게
공에 들어간 그 그림자 보면은 뭐 게임에서 보는 거 처럼 부드럽게 가는게 아니라
어떤 의미에서는 대개 이렇게 딱 금이 갈렸고 갑자기 확 까매지는 그런게 있어요
그래서, 그런 얘기 나왔고
이제 감마 코렉션 뭐냐 얘기도 많았고
저도 실제 처음 그때
처음이 아니구나
스페이스 마린 만들때
그때 한창 감마 코렉션에서 리니어로 가같고 그거 고치느라 말도 많았고
하드웨어 지원도 안했고
뭐 이런저런 얘기가 있는데
결과적으로는 감마 코렉션은 대개 간단 한거예요
대개 간단한 거예요
그게 뭐냐면
그~ 뭐뭐 여러가지 있어요 뭐뭐 CRT에 뭐고 어쩌고
뭐~ 브라운관 거기에 맞추기 위해서
그냥 그건 뭐 다 틀린 얘기도 아니고 다 맞는 얘긴데
그냥 그거 무시하고요
간단하게 이렇게 이야기 하면
제일 편해요
자 전에 말했죠
이제 RGB 색은 뭐 그냥 숫자일 뿐이다라고
그런 일단 8bit로 할게요
8비트면 2의 8승 이니까
각 채널 ??  채널에 들어 갈 수 있는 숫자가 0부터 255
256개 거든요
RGB 따로 따로
그러면, 여기에 값을 어떻게 넣을 거냐?
그러면 255는 가장 밝은색
완전히 빨간색이면 255 아예 빨간색이 없으면 0
뭐 그린하고 블루도 똑같고요
그렇게 색을 표현을 했어요
그런 이제
제일 간단하게 블랙 앤 화이트를 하죠
그레이스케일 그  회색으로
회색은 색이 아니지만 뭐 어쨌든
회색의 개념은 이제 레드, 그린, 블루가 똑같은 값이 있으면 어느 채널도 더 많이 있는 것이 없기 때문에
그냥 그냥 흑백으로 보이는 것 뿐이에요
그러면, 모든게 0이면 까만색
모든게 255면 하얀색
그럼 재밌는게 뭐냐면 그러면 이제 그 순서대로 이거를 저장을 해야 되잖아요
뭐 255이니까
각 단계가
잠깐만 내가 몇분의 몇 이게 헷갈리는데
0하고 반대 여서
1을 256로 나누는게 한단계에요 무조건
그러면, 그 단계별로 올라가면서 보여주는거 뿐이죠
근데, 재밌는게 뭐냐면
그렇게 값을 저장을 하면요, 어떻게 되냐면
사람의 눈이 되게 재밌어요
그 1에서 바로 다음 단계 2로 올라가는거 있잖아요
그 차이를 사람 눈이 확연하게 구분을 해요
근데, 255에서 254로 내려가는 건 사람 눈이 거의 구분을 못해요
그니까 밝은색에서 사람들은 그 색이 바뀌는것을 눈이 잘 판단을 못하는데
어두운 색은 잘하는 거예요
그래서, 그냥
참, 화면이 이렇게니까 이렇게 너야 되냐
모르겠지만 선형으로 이걸 넣어 버리면
1분의 256 2분의 256
2... 2... 256분의 1
아 그거 맞는거 같에
256분의 1
256분의 2
이런식으로 넣어버리면
이게 사람이 밑에서는 색이 바뀌는 거에요
그러니깐, 검은색에서 야간 회색으로 바뀌는 건 너무 티가 팍팍 나는 거예요.
부드럽게 바뀌지 않는데 그 위에는 뭉뚱그려져 가지고 다 하얗게 보이는거예요
지금 실제 쓰는 그 이미지 프로세서 이미지 프로그램에서 써봐요
그냥 RGB 값 0으로 너놓고 딱 칠해놓고 1로 해놓고 딱 칠하면
그 2개를  딱 노면  딱 구분되거든요
근데 이거를 255하고 254로 넣어버리면 구분이 생각보다 잘 안되요
그래서, 사람 눈이 볼 수 있는게 선형이 아닌 거예요
그럼 선형이 아니면 이 까만색을 더 잘 보잖아요
그러면 아 이거를 쫌 여기에 어떻게든 숫자를 많이 넣어줘야 겠다
그래서 한게 감마 코렉션이라는 건데
이렇게 선형으로 있는 그래프가 있잖아요
그러면 이거를 y좌표를 256으로 나눠요.
그러면 여기에 있는 게 256분의 1, 256분의 2이런 식으로 올라갈 거 아니에요
그럼 이 각도를 휘게 만들어서 이렇게 휘어버린 거예요
안쪽으로 들어가게 그러면
255분의 256분의 1이 아까보다 좀더 그 높은값을 보게 되나 낮은값을 보게 되나
뭐 어쨋든 간에 그런식으로 넣게 되면은
그 밑에서 들어가는 그 원래는 선형으로 봤을 때 이 중간까지 들어가는게 훨씬 아래로 내려가 버리기 때문에
그 밑에 것에 훨씬 더 많은 숫자를 저장을하고 위에 거는 좀 듬성듬성 저장하기 위해서 이런 곡선을 만든 거에요
그래서 뭐 감마가 1이면 선형
감마가 2.2면은  이렇게 뭐 이런식인데 그것은 
그냥 파워 함수 거든요
파워 함수가 뭐냐면 제곱
그러니깐 원래 있는 값을 0에서 1로 두고 제곱의 2.2 그게 보통 우리가 RGB 감마
sRGB가 2.2랑 좀 비슷해요 거의 비슷해요 그래서
2.2정도가 되면은 sRGB 그 그래프랑 되게 비슷한데
그러면은 0.5에 있던게 그냥 제곱만 해도 0.25 잖아요 
그럼 반이 작아 지는 거에요
그러면 그 위에 더 많은 것을 저장 할 수 있고 그 아래것도 촘촘하게 저장 할 수 있다는 얘기 거든요
그래서 그~ 렇게 해서 2.2를 곱해서 한거고 그러면 이제 그거를 최소 다시 선형으로 돌려와서 조명계산을 해야 
되니까
그거는 뭐 2.2의 역을 해 같고 2.2분의 1 해
 같고 제곱을 하면 된다는 얘기죠
제곱이 아니라 승
뭐 어쨌든간에
그래서, 현재 지금 모든 이미지 여태까지 저장했던거 있잖아요 8bit로 그게 이제 보통 sRGB로 저장 되어 있어요
감마 2.2로 한마디로 이런 그래프로 저장 되어 있는 거에요
사람눈에 보기 쉽게
그래서 그거를 선형으로 바꾸면 당연히
색이 좀 바꿔 보이는 거고
그래서 문제는 이제 화면에서 sRGB를  제대로 보여주냐 최종적으로 저장은 이렇게 하지만
화면은 제대로 보여주냐 요즘 대부분은 그래요
대부분의 프로그램들은 옛날엔 안 그런것도 있었고
게임 쪽에서는 그런 보정을 제대로 안했기 때문에 감마 보정 해줘같고 뭘 하겠다는 거죠
sRGB라는게 좀 재밌는게 뭐냐면
화면마다 사실은 그 이 색깔값에 반응하는 그런 밝기가 달라요, 사실은
그래서, 뭐
이런 컴퓨터 게임 그나마 낫고 모니터는 그나마 낫고 티비는 굉장히 개판이 거든요
그래서 콘솔게임 만들 때 그거 감마 제대로
 맞추는라고 고생을 많이 하고
콘솔게임 나온거 보면은 감마 조정하는거 있잖아요 
감마로 나오거나 밝기 조정하는거
그게 보통 그래프를  이렇게 해주냐  아니면 좀 들 해주냐 더 해주냐 그 차이에요 사실은
그래서 감마 코렉션이라는 것은 솔직한 이야기로 그게 전부에요
뭐 어찌보면은 한 5년 전부터 굉장히 이거 제대로 해야된다 이러면서 사람들이 혼돈 스러워하고
뭐 어떻게 하고 얘기를 많이 했던건데
결과적으로는 계산을 할 때는 곡선 들어가 있는 상태에서 계산을 하면 값이 제대로 안나오니까 조명 계산 할 때
선형으로 바꿔 주고 단 텍스처로 저장하거나 최종에 화면으로 보여 줄 때는 이렇게 해줘야만
아 그런 그 뭐라고 할까 Loss가 적다 잃는게 누실, 
유실, 유실되는 값이 적다
정밀도 이기도 하죠
그러고 이제 나중에 지금 쫌 많은 게임들은 이제 그런 8bit 가 아니라 16bit에 저장을 하기도 하죠
아무래도 그러면 좀 이런 변환 안해도 되니깐, 선형으로 다 저장해도 상관이 없으니까
컴퓨터그래픽이 더 나아질까 뭐 하드코어쪽으로 더 나아 지겠죠 저는 이제 2~3년 안에는 대부분의 사용자가 그냥
그 인텔 PC CPU에 들어간 그 GPU로 그냥 게임을 할거라고 생각하기 때문에
거기서도 발전을 하지 않으면  힘들거라고 보고
예전처럼 그냥 아니 근데 이 16bit 이런거는 솔직히 
통합된 칩이 되면 더 좋을 수 도 있어요.
왜냐하면은 여태까지의 문제가 지금 이미 그렇게 뭐 아키텍쳐를 만들어가지고 있고
CPU 에 메모리 따로 있고 GPU에 따로 메모리 있으면 얘네 복사해주고 그러는데 느리거든요
근데 CPU, GPU가 통합이 되면 그 메모리에 곧바로 접근이 되고 다 Share가 되기 때문에 그런 뭐랄까 뭐 이렇게
뭐  16bit 32bit 이런 BandWidth가 늘어도 실제 메모리는 많이 있으니까 컴퓨터에 그 메모리 이용해 쓰는거면은 오히려 예전보다 나을수 있어요
뭐 DDR5을 넣냐 DDR2를 넣냐 차이겠지만
그건 더 나아질거 같긴 하고
그래서 감마코렉션 뭐냐 정도 얘기 할려고 했으니까 얘기 했으니깐 음~ 그만 끊쳐
포프였습니다.
