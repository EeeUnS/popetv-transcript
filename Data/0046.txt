to a
으
예 안녕하세요 포프 입니다 오늘은 그 뭐라고 해야되지 페어 프로그램 에어
해야되나 페어 프로그래밍 까지는 아닌데 그런 비슷한거 에 대해 얘기를
해볼게요
제가 예전에 한번 비디오 만들면서
아 뭐 코드 리뷰가 이래서
정자 코드 리뷰가 효용이 있는 경우는 좀 생각보다 않지 않다는 얘기
했었거든요 그런데 그럼에도 불구하고
아 코드 리베 장점은 분명히 있잖아요 그래서 이제 장점이라는 게지 여러
사람이 코드를 알 수 있다
이런게 또 하나 장점인데 사실 코드 리뷰 만 해서는
많은 사람들이 코드를 알 수 있다고 생각하지 않아요
어차피 그냥 남도 코드 중립이 하는거 이 정도는 쉽게 할 수도 없고
분명히 제가 생각을 해보면서 잡아야만 그리고 짜면서 고민도 해보고 생각을
열심히 해 봐야만 그런 그 실제 들어가 있는 코드에 대한 의미도 알고
구조도 알고 이게 어떻게 내가 나중에 뭘로 추가하려면 알아야 되는지
이런것도 있다고 보거든요
아 그리고 그 뿐만이 아니라
음 이제 예를 들어서 어떤 코드를 작성한 사람이 있었는데 이제 그 사람이
아 회사를 떠났다 그 다름에 들어갔을 경우에 그 사람이 만들었던 코드는
과연 어떻게 할거냐 그걸 누가 또 배워서 누가 또 열심히 그걸 넣은게
받아서 그냥 추가하고 뭐 관리하고
아 메인 테니 유지 인가요 뭐 그거 아냐 그런 문제도 있거든요 그래서
제가 10억 우리회사 더 아니면서 살펴본 것도 있고 전자 생각한 것도
있고 그런데 그거를 회장 아 회장 그것을 해결하는 가장 좋은 방법은
페어 프로그램은 아니에요 이제 페어 프로그램은 말 그대로 코드 1 짤 때
2명을 집어넣어서 만명 콧잔등 한 명은 보고 있고 서로에게 상의해 가면서
코드를 짠다 라는게 페어 프로그램이 있는데 그것 까진 아니더라도 그거하고
쪼금 비슷한 방법으로 아 그런 부부 태어 프로그램이 장점과 코드 리뷰
해서 올 수 있는 장점
아 그리고 퇴사자 가 있을 경우 그거 코드를 넘겨받는 인수인계 절차를
원활히 하기 위한 그런 장점
그걸 할 수 있는 방법이 있더라구요 으 제가 생각한 방법은 뭐냐면
만약에 예를 들어서 어떤 기능이 있다고 해요
그럴때 파티클 기능 4 이제 파티클 시스템을 만들 때 사실은
아 파 티 프 시스템에 들어가는 여러 가지 작은 규모의 기능들이 있잖아요
그런데 대부분의 회사들에서 는 보통 한 명에게 그 모든 일을 맡기는
경우가 일반적 이에요
이제 그 이유가 뭐냐면 한 명이 이걸 전문 주로 담당하며 는 그만큼 이
사람이 모든 걸 아니까
아 어찌 보면 능률도 오르고 누가 물어봐도 빨리빨리 무슨 새로운 기능을
추가할 수 있고 이런 장점이 있는데 아
이런거에 문제점은 이제 그 사람이 나갔을 경우 그 다음 새로운 사람이
거의 인수인계 받는데 걸리는 시간이 좀 오래 걸립니다
이제 만약에 근데 이런거 를 2명 안테나 넣어주면 은 일이 좀 더
쉬워져요 재밌는게 예를 들어서
파티클 시스템이 있고 그 안에 뭐 기능 a b c d e 가 있다
그러면은 a 는 아모 사람에게 주고 김씨 해주고 비는 이씨에게 주고 다시
씨는 김 씨의 해주고 d 는 이씨의 개 주고 이런 식의 방법을 하다
보면은
아 그 둘은 결과적으로 계속 얘기를 해 가면서 개발 해야되요
왜냐하면 은 만약에 내가 기능 삐 를 만들려고 하는데 기능 비가 기능의
이에 다모 를 추가하는 것 같다
그러면 이제 김씨가 걸 만들었으니까 김치 한테 가서 물어 봤고 아 그거
좀 얘기도 하고 그런 컨셉도 잡고 포로에게 핑 폰 그러니까 탁구 치는
것처럼 에게 핑퐁 하면서 서로 기능을 추가하는 그런 장점이 있죠
이제 이렇게 하면은 처음에는 조금 유지 게 보일 수는 있어요 근데 제가
겪어본 바로는 어차피 모든 기능을 완벽하게 이해해야 만 어
어떤 파티클 시스템이 나오는 것도 아니고 1 8 10% 정도만이 해도
양쪽에 서로 추구하는 데 문제는 없다고 보거든요
하지만 그렇게 추가 함으로 인해서
80프로 나가야 되니까 결국 상대방의 형법에 80프로 게서 알아 오잖아요
그러면은 그 어떤 기능에 대한 지식을 소유한 사람이 두 명이 되는 거에요
그러면 나중에 아까 말씀드렸듯이 어떤 한명이 나가더라도
어 그 다음 사람 뭐 이 씨가 그 사람 볼을 이 80프로 알고 있으니까
떠맡고 새로운 사람이 들어오면 이제 새로운 기능을 추가하고 뭐 메인 테인
하고 버그를 고칠 때마다 이제 그 사람을 또 이렇게 핑퐁 처럼 많이
이렇게 연결 시키다 보면 은
어 뭐 사람이 정말 말 그대로 한 다음에 abd 더 나가지 않는 이상
충분히 그런거에 대철 그런
아
뭐라 그러죠 경우가 되더라구요
아 그래서 제가 하고 싶은 얘기는 이건 어찌보면 은
일반 개발자 제일 제일 밑 밑에 있는 개발자 보다는
위에서 이제 사람 관리하시는 분들 프로젝트 일정 짜샤 하시는 분들이 좀
생각하시면 좋은 부분 같아요 당연히 한 명에게 2점 기능을 맡기면
일이 빠르고 당장은 빠른것 같지만 정말 많이 1 무슨 일이 있었을 때
다른 사람에게 빼 커버를 쉽게 들어올 수 있다는거
전반적으로 봤을 때는 확실히 아 뭐라 그러죠
오늘 시간을 아끼는 거였어요 제가 여러가지 프로젝트를 해봄 열과
아 그리구 또 어떤 의미에서는 뭐라 그럴까요
음
그거 한국에서 어떤 의미에서는 이제 지식 공유를 잘 아는 이유
제가 볼때는 그거 일부분은
사람의 어떤 심리가 있는것 같아요 어떤 분들은 나 혼자 갖고 있는 지식을
내가 계속 가지고 있어야 해서 나를 안 짜르고 나를 계속 아 데리고 있는
다 이런 생각으로 인해 지식공유 보다는 자기 많이 할 수 있는지를 계속
머릿속에 다 두는 거죠 그래서 자기 자리를 지키려고
뭐 그런 분들 에게는 이런 방법이 조금 단점이 될수도 모르겠어요 그런데
정말 제가 여러 개 서 다녀보니 4 회사는 사람을 자르는 이유는
제가 볼 때는 그 사람이 정말 실력이 없어 자르는 게 대부분인 것 같고
으 단지 이 사람이 실력이 없지만요 지식을 갖고 있기 때문에 그냥 계속
둬야 된다라는
자세는 제가 별로 본적이 없어서 아니면 제가 이쪽에 써서 그런지
모르겠지만 과연 그럼 분들에게
이렇게 정말 단점이 지 모르겠어요 그러니 그런 걱정 하시는 분들 아베가
이직을 내뿜으며 는
아 내 자리가 없어 지는구나 기후가 아닐까 생각을 하거든요 어떤
의미에서는 아니면은
정말 그런 위치에 계시는 분이라면 은
9 세어 제가 딱히 뭐라 해드릴 컬럼 네 제가 바로 좋아하시는 분들은
아닌거 같아서 그런 분들은 아
저수지 그런 분들이 좀 없어졌으면 좋겠다 생각하는 줄여서
오히려 이래서 없어지면 저의 저의 거쳐 아 이건 좀 너무 막나가는 건가
그런 생각을 하고요 뭐 어쨌든간에 제가 그냥 하려고 했던 얘기는 뭐 어떤
분이 자랐으면 좋겠다 안 들었음 좋겠다 2기 아니라 정말 프로젝트에서
일정 관리 하고 이러시는 분들 입장에서는
말 그대로 이렇게 두 명 정도가 한 기능을 맡게 해 주면 좋다 는 거고요
그리고 실제 기능을 꺼 담당하는 사람 입장에서도 자기 혼자 모든 걸
짊어졌던 생각보다는 자기하고 다른 사람들이 할 수 있다고 생각을 하면은
뭐 그 사람도 좀 아플 때 제 쉴 수도 있고 아 이기는 내가 해야 되니까
반드시 회사가 에 대해 이러면서 엄청 내 필요도 없고 저는 그래서 우리도
괜찮다고 생각을 해요 그래서 혹시라도 아 이런 생각을 안해 보신 분들은
어 한 번쯤 생각을 해 보시고요 음 그리고 혹시라도 이런 부분 때문에
코드 리뷰를 굉장히 강압적으로 만 시킬수도 시키셨다 어떤 분들은 좀 코드
리뷰를 정말 조금 줄이고 라도 이런 부분을 도입해서 그 코드 리뷰 의
장점
을 그대로 넘어오고 코드 리베 단점은 좀 없애는 식으로
어 그런 식으로도 생각해 보시면 좋겠네요 오늘도 또 이렇게 되게
주저리주저리 말이 많았는데
다음 그게 전부에요 3 예
포프 였읍니다 으
으
a
we
wool 으
으 으
으
