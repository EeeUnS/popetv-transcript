그 영어로는 제목이 생각이 나는데 아직 아 물론 은 제목이 생각이 안나요
어 솔로 아아 생각했다 폴로를 2개 만들지 말자 라는 이야기를 하려고
그래요 뭐 세계도 아니고 5 그건 불러오는 하나 만들자 얘기라고 싶어
하는 건데 제가 이제 블로그 라고 하면 너무 좀 맥추 당적 이잖아요
뭐
뭐 힙합이나 랩 에서 도마 이런거 불러오라고 나기도 하고
브가 이제 흐름이 잖아요 그래서 이제 제가 말하는 흐름은
게임 개발에 있어서 음 보통 게임을 실행을 하면 은 스플래쉬 스크린 뜨고
타이트 스크린 뜨고
뭐 메인메뉴 뜨고 그 다음에 게임 걸로 알고 게임 수 까지 들어가고
이런식으로 보통 메뉴에 흐름이 있죠 그래서 거리지 에
모유와 2% 라고도 하고 뭐 게임 스테이트 플로라 그러다 하는데 그럼
흘러온 를 여러개 만드는 경우가 있어요
그 게임 최종 개발 용이 아니라 아니 최종 출시 용이 아니라 내부
개발용으로 아까 어떤 얘기냐 하면 일단 제가 언제나 보통 3 게임 개발
할때 모코 짜고 다시 컴파일 에서 게임 실행 하고 이게 뭐 하루에 10번
20번 30번 더 하잖아요
그러면 뭐시라 30분에서 할 수도 있겠지만 디버거 걸고 보고 무슨 기능
만들고 확인하고 이러니까
그런데 중요한 것은 매번 할때마다 타이트 스크램 보고 메인메뉴 보고 게임
골라서 들어가고 이걸 해야 된다는 거에요 그래서 그 시간을 아끼기 위해
뭐 그 처음 게임 시간 할 때 어떤 텍스트 파일에 읽게 해서 거기서
곧바로 어느 모 레벨로 점프 하게 만드는 그런 식의
어 플로우를 만드는 회사를
여태까지 두군데를 봤어요 어 그 그러나 그 두 근데 전부 다 약간의 음
프로세스의 문제라고 해야 될지 아니면 이제
좀 버그를 빨리빨리 못잡는 문제가 있었고 그걸 나중에 이제 좀 게임 출시
자기 바로 직전에 좀 더 문제가 되는 왜냐면 업어 가 있는지도 모르고
있다가 나중에 버거가 나오니까 입어 가 언제 나올지도 모르고 있는데 그
그런거 있잖아 그 동안의 사람들이고 쳐놓은 코드를 1
뭐 한 컴퓨터 3배쯤 되고 그러면 시계 오히려 박해진 거지
그리고 좀더 이제 디버깅이 어려워 지는 현상이 있었는데
그럼 버그들이 이제 발생할 이유가 대부분은
대부분 이라고 하지만 대부분 말이 안되고 어느 정도는 이렇게 플러그가
여러개가 있었기 때문이에요
제가 최근에 겪은 것은 이렇게 즉 게임에 들어가서 이제 메인 메뉴를 보고
메인메뉴를 버튼을 클릭해서 이 맵의 들어가서 뭘 시작하자 라고 하면은
언제나 나오는 가운데 이 플러그를 통하지 않고 그냥 곧바로 게임 속으로
부팅하는 블로그 리까지 메뉴 다 스킵하고
깬 쏙 플레이를 곧바로 보여주는 걸로 처음부터 로딩이 배는 블로그에서는
그게 버거가 절대 안 나면 그런 것들이 있었어요 그래서 이제 개발자들은
이제 아 자비를 메인메뉴 들어왔던 데 귀찮으니까 이렇게 하자 라고 해서
언제나 그렇게 했는데 그래서 개발자들은 계속 함수와 단 버거 은하로
넘어가다가 나중에 이제 마지막 에 걸린 그런 문제가 넣었던 있었죠
그 이후 번에 제가 게임 출시 한것도 그렇고 이 출시한 게임 임원진을
다음편에서 얘기 할게요 왜냐하면
비디오 나가 스케줄 가 다음편 나갈 스케줄이 보니까 다음편 남 할 때 즉
그 게임이 풀렸을 것 같아요 그래서 그걸 말씀드릴 거고
요번 게임 도 그랬고 음
예전에 한번 어떤 회사 의 시 의
거기 되게 파탄이 나는 회사였는데 이제 제가 직원은 아니라 고전 따라서
아이다가 저희 회사 그 회사 최종 마무리를 해 주려고 들어갓다 회사 중에
하나죠
거기도 좀 그랬어요 그래서 그런데 공통적인 것은 암 대부분이 이렇게
더 그가 이렇게 있는데 잘 발견도 못하고 좀 줘 뭐라 그럴까
깔끔하지 못한 그런 코드가 많았다고 해야될까요 그런 게 많았어요
아마 이런 플로우를 여러개로 나누면서 그러나 이거 편하니까 이렇게 할래
라고 하는 하는 그런 마음가짐을 가진 프로그래머들이 결정을 내리는
회사라면 은 다른 곳도 이렇게 아 그래 나중에 문제가 생기는 말든
몰라 이러고 넘어가는 마인드 거 같아서 나중에 못 고치는 경우가 좀
많았고
물론 이 플로 가 두개로 난 일 때 그 두 플로르 에서 둘다 작동을 하게
어떻게 구조를 잡고 이러면 말이 되는데
회사라는 곳이 워낙 많은 프로그래머가 이라고 그 모든 프로 루머가 뛰어난
프로그램 말씀 절대 없고요
그리고 그 프로그램을 전부 다 매일 같이 코드를 보면서 리뷰할 수 있는
그런
시간적 금전적 여유가 있는 회사도 많지가 않고 그래서 어느 순간 보지
않는 순간 코드가 망가지는 경우가 있어요
제가 예전에 봤고 뭐 비디오 에서도 말했던 그런 비슷한 게 있거든요 이런
원칙을 세워 두고 코딩을 하면 은 크게 벗어나는 순간 눈에 딱 보이기
때문에 그런 위험요소를 미리 좀 말이 줄일 수 있다는거
제가 보는 솔로 문제에서 그거예요 플러 오는 언제나 하나요 만 되요 이게
디버그 용이 던 윌리스 용이 든
몰 있으니 제주시 용 해요 언제나 한하여 하지만 그 똑같은 플로르
사람들이 거치면서 어떤 상태 그 중간에 거치는 플러스 더 상태가 잘못
처장이 되거나 잘못에 팅 이래서 나중에 뒤에 드러나는 버그가 있더라도
이거는 버그가 생기는 순간 찾기가 쉬워요 왜냐하면 은 매일매일 개발한
사람들이 매일 매일 보는 결과 니까
예전에 제가 말했던 비디오에서 뭐 개밥 먹는 프로그래머 이런 비디오가
있거든요 거기서 말하거나 똑같은거 제가 개발한 것은 제가 언제 테스트가
되어야 되는 환경 해요
그래서 그러면 맨날 할 때마다 무슨 버튼 누르고 너무 막 귀찮지 않냐
귀찮 초 그래서 정말 그걸 없애고 싶으면 그 통해 들어가는 과정 있잖아요
그 최종 그 게임 플레이 까지 그 과정을
그 컨트롤러 패 캣 그 스크립트 같은걸로 짜고 자동화를 시키면 되는
거에요 제가 애 전에 아마 아
무슨 유니테스트 쪼그만 좋다는 식으로 얘기를 하면서 그 어떤 나은 방법이
뭐 bat 테스트 였나 그거 할때 오토메이션 테스트 했었거든요
그런 식으로 게임이 딱 런칭 되었는가 스크립트가 있는 건 상관이 없죠 이
텍스트 파일 같은게 그래서 거기서 얘기하는게
뭐 스플릿 스크린 뜨고 2초 뒤에 버튼으로 석 스킵하고 타이틀 메뉴에서
밑으로 2번 내려서 누른 다음에 오른쪽 5번 위로 세 번 내고 이걸 고른
다음에
들어가라는 이런 스크립트를 쉽게 레코딩을 할 수 있는 시스템이 있다면
지금 말한 플러그를 스키 파는것은 훨씬 쉬워져요
그리고 이거는 똑같이 처음 블로 처음 화면부터 모든 화면을 거쳐서
들어가는 거기 때문에 거기 서버가 일이 발생을 했다면 웬만한 경우에
보이죠 물론 100% 는 못잡아 였던거 타이밍 이슈도 있고 모두 있기
때문에
그러나 1 처음에 있는 화면 새내기 한꺼번에 스킵 함으로 해서
음
아예 그 중간에 설정된 세팅 자체가 상태가 자체가 살아줘서 볼 수 없는
버그 이런 경우는 없죠 그래서
이제 뭐 언젠가 그런 얘기를 해요 제목 게으른 사람들이 회상을 낮게
만들었다 이 모터 컨트롤 도 그렇고 좋은 얘기 많이 하는데 음 그건 은
말 그대로
일반사용자 입장인 것 일반 사용자는 게으르면 개울 수 없지만 프로그래머는
지금 당장 한순간에
편한 아 그거 때문에 나중에 일어날 수 있는 이런 좀
뭐라 그럴까
저는 디제스터 라고 보는데 거의 재난 상황 이라고 보는데 이건 좀 제
성향상 그런것도 있어요 저는 이제
뭐든간에 예측 가능한 걸 좀 좋아요 그래서 게임을 특히 출시하는 때에는
어느 정도 버그가 예측을 가능 해야 이게 마음 편하게 일정을 짤 수 있고
진행이 가능한데 이렇게 말도 안되는 여러가지 이렇게 꼼수 들을 해놓고
어디서 터질지 모르는 거라 하이고 터지면 그 때 바라는 마인드로 내
뜨다가 마지막에 가서 파파 박 터지기 시작하면 은 그 때부터 굉장히 고라
퍼진다는 거죠 그리고 그 모
프로젝트관리 에서도 조금 이제 문제가 많아 지는 부분이기도 하고
그리고 만약에 정말 재수가 없어서
그 마지막을 날짜를 못 맞췄어요
그럼 이제 그 이미 이렇게 저희 뭐 유통사 퍼블리셔
걔네들이 넣어놓은 마케팅 금액과
이런 거라도 따 이 때 그 최대 효율을 못 보낼 수도 있거든요 그래서
저는 그런 데드라인을 되게 좀 중요시 여기는 편이고 그렇게 이렇게 딴
사람들의 노력이 같이 들어가 있는거면
그것을 위해서는 위험도 관리 가능한 위험을 가지고 있어야 한다고 보는데
블러 오리 여러개 만들어 거 자체가 저는 그런 관리가 는 위험성이 굉장히
져야 한다고 봐요 그래서 음
버그는 나올때 잡으며 하루 메탈 잡으면 대충 다 잡히 거든요 빨리 나와요
이제야 어제 들어간 코드가 안 되어서 얻게 되고 이 중에서 이거랑 관련
없네요 이거 니까 이걸 거다
그러면 가서 그 코다 뭐 뒷간 리버 타고 본다 라고 문제가 없어 그러면
그 코드에 문제가 있는 걸 아니까 그 코드만 곳 찾고 이 일을 찾으면
되는데
아까 말했듯이 게 1개월 게 터지며 는 이미 그 순간 코드 체크해 있는게
뭐 드릴 텐데
찾게 되기 어렵죠 아 그래서
블러 오는 차 나와 난 되자 라는 얘기를 정말 하고 싶었어요 그래서
게임에서 간음 수로 오랜 까고 처음에 파도 타임 한테 생각하고
게임을 스테플러 없이 해서 만드는 동안 연 언제나 플러그가 하나가 되게
해서 그리고 플로우를 빨리 해야 없애고 싶으면 은
어제도 오토메이션 테스트 학 하기 위해서나 스모킹 테스트하기 위해서 어느
정도 컨트롤러 패키 오토메이션 은 하는게
일반적이었다 얻으며 제 경험상 근데 뭐 모든 회사가 그러진 않을 테지만
차라리 뿔로 2개 만들며 듣고 고쳐나가는 시간에 그거 하나 제대로
잡아주면 굉장히 모든 이 편해질 것 같아요
아니면 뭐 ai 전이 있다거나 그러면 거기에 대처 이렇게
aid 버튼 컨트롤의 베개 주력으로 많이 할 수도 있으니까
그래서 그렇게 생각을 하고 음 오늘은 그래서 또 최근 예전에도 봤던
문제지만 최근에 또
좀 조금 약간 코드 베이스가 그렇게 훌륭하지 못한 교회사에서 하는 일을
보고 다시 생각을 조 블로 를 2개 만들지만 초 불러오는
가능하면 하나로 가자
예 그랬구요 4 뽑혔습니다
