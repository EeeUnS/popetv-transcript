안녕하세요, 포프입니다.

오늘도 제가 관리하는 회사에서 금지되어 있는 사용례, 코딩표준에 대해서 말씀드릴게요. 제가 코딩표준을 책임지고 있는 회사에서는 이 코드를 넣는 순간 빌드가 안 되거나 테스트가 안 돼서 배포가 안 되는 일들이 발생해요. 그래서 프로그램을 반드시 고쳐야 합니다. 이 중 일부는 웹사이트에 올려놓은 코딩 표준에도 올라가 있고, 일부는 각 회사의 내부 문서로만 있는 겁니다. 이건 제가 책임지고 있는 회사에 관한 거지, 제가 이 코딩 표준을 책임지고 있지 않는 회사와 일할 때는 당연히 그 회사의 코딩 표준에 맞춰서 코딩을 해주고요, 이게 올바른 프로그래머가 일하는 방식이라고 믿고 있습니다. 

자, 오늘 얘기할 거, C#에서 Math.Round라는 함수 알죠? 반올림하는 함수. 제가 관리하는 회사에서 그거 쓰면 코드 배포가 안 됩니다. '에? 반올림을 못 하게 해요? 그러면 하드코어처럼 막 +0.5 한 다음에 Trungcation 하나요? 거기다 int 형변환 하나요?' 아니요, 그게 아니에요. 

혹시 C#의 Math.Round를 할 때 '사사오입'으로 되는지 아니면 '은행원의 반올림'으로 되는지 아세요? 생각보다 모르시는 분들 많을걸요? '뭐가 더 올바른 방식이냐?' 물으면 되게 애매해요. 게임 쪽이나 이런 거 할 때는 사사오입이 훨씬 좋기는 해요. 이게 아니라 많은 부동소수점 연산을 해야 하거나 많은 곱셈 연산을 하고 이후에도 값이 정확해야 하는 분야에서는 부동소수점 오차를 고려하면 은행원의 반올림, Banker's Rounding이 훨씬 더 나은 방법이라고 알려져 있습니다. C#의 기본 동작은 불행히도 은행원의 반올림이에요. 그래서 생각했던 거와 다른 동작들이 나올 수 있어요. 조금 괴롭죠? 이 디폴트가 한국 사람들 특징일지 모르겠는데, 한국 사람들은 반올림하면 무조건 사사오입이에요. 왜냐하면 우리는 학교에서 그렇게 배웠고 그렇게 말을 안 하면 처맞았거든요. 그래서 우리는 파블로프의 개처럼 돼버린 거예요. 아주 훌륭해요. 저 솔직히 사사오입 좀 더 맞다고 생각해요. 편하거든. 근데 수치 연산을 하거나 이럴 때는 아니라고 하니까 그렇게 된 거죠. 이거를 아는 사람들이 많이 없어요. 그리고 아는 사람들도 코드를 작성하려면 Math.Round 하고 값 넣은 다음에 그 뒤에 Enum으로 어떤 모드를 넣어줘야 해요. 근데 이것도 이름도 더럽게 괴랄해요. 그냥 이름이 사사오입, 은행원 반올림 이렇게 하면 좋거든요? 근데 무슨 어느 쪽으로 반올림하고, 어느 쪽으로 보면 헷갈려요. 읽고 나중에 또 돌아와서 이름 보면 또 헷갈려요. '이게 그거였나?'. 한마디로 이름 자체가 직관적이지 못한 거예요.

그래서 저희는 MathUtils라는 정적 클래스를 만들고, 이 안에 Round 함수를 만들었습니다. 그래서 NormalRound, 저희 입장에서 이게 사사오입이기 때문에 이 함수가 있고, 다른 건 BankerRound라고 해서 아예 사람들이 이해하는 이름으로 넣어준 거예요. 혹시라도 Domain Driven Design 좋아하시는 분이 있을지 모르겠지만, 이게 DDD에서 말하는 Ubiquitous Language랑 똑같은 겁니다. 그래서 누구나 이해할 수 있는 이름을 넣고 아니면 누구나 교육할 수 있는 이름이죠? '우리 회사에서 Normal Rounding은 이거다. 그렇기 때문에 다른 Rounding이 있는데 얘는 Banker's Rounding에 하는 거다. 둘 중의 하나 골라 써라.' 다른 반올림 기법도 있어요. 근데 지금 우리 회사에서 두 개 이상 쓸 일이 없는 거예요. 그래서 그거를 만들어서 했고, Math.Round를 쓰는 순간 코드가 '우웩!' 하고요, 그 대신 설명을 해주죠. 'MathUtils.NormalRound나 MathUtils.BankerRound 써라.' 이런 겁니다. 그래서 가끔 언어들의 기본 동작이 내 입맛에 맞지 않으면 함수를 만들어서 사용해야 하는 게 프로그래머의 로망, 그런 거죠.

포프였습니다.