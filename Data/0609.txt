안녕하세요, 포프입니다.

제가 코딩 표준을 책임지고 있는 회사에서는 금지된 코딩 표준이 몇 가지가 있고요, 이걸 사용했을 때 빌드가 안 되거나, 배포가 안 되거나 해서 어쩔 수 없이 프로그래머가 곧바로 고치게 하는 것들이 있습니다. 이런 걸 설명하는 영상 중에 하나고요, 코딩 표준들의 일부는 당연히 제 웹사이트에 올라가 있고, 또 일부는 회사마다 내부 문서로 존재하고, 이건 제가 코딩 표준을 책임져주고 있는 회사에 관한 얘기지 그렇지 않은 회사하고 일을 할 때는 당연히 그 회사의 코딩 표준에 맞게 코딩합니다. 그래서 코딩 표준은 '회사 따라가는 거다'라고 말씀을 드려요.

오늘 말할 건 C#의 새로운 기능 중의 하나고, 제가 기다려 봤던 기능 중의 하나인데, C#에서 배열을 초기화할 때는 C에서 그렇듯이 그냥 중괄호 사용해서 초기화하는 게 최고고요, 그 외에 컬렉션, List나 이런 걸 초기화할 때 새로운 문법이 나왔죠? 중괄호 대신 대괄호를 넣고 초기화를 해줄 수가 있습니다. 그러면 new List 한 다음에 하나씩 List.Add하는 거 이런 것들을 막을 수가 있죠.

그래서 이제는 '컬렉션에 한해서 요걸 써라.'라고 해요. 배열을 굳이 얘를 써야 하는지 아직도 모르겠고, '배열은 그냥 다른 언어들과 똑같게 그냥 중괄호를 쓰고, 일단 List 같은 거 초기화할 때 이거 써라'라고 얘기를 하고 있어요. 그 이유는 이게 보통의 프로그래머들한테 실수를 줄이고 더 빠른 코드를 만들어 줄 수 있어서예요. 엄밀히 말하면 이런 List 같은 걸 초기화하는 가장 빠른 방법은 List를 만들 때 크기를 Reserve하구요, 그리고 그다음에 하나씩 List.Add를 하는 게 아마 제일 빠른 방법일 거예요. 하지만 Reserve를 하고 넣는 거에서 당장 썼을 때 코드는 빠를 수가 있는데, Reserve 할 때 용량을 만약에 3을 정하고 3개를 넣어놨어요. 나중에 언젠가 코드를 고치다가 초기화할 때 2개를 더 잡을 수 있거든요? 5개를 더 했는데, 까먹고 얘를 안 바꾸는 경우들이 있습니다. 이게 생각보다 어느 순간 시간이 지나다 보면 코드가 더 느려질 수 있는 위험성도 가지고 있어요. 근데 처음부터 배열에서 그렇듯이 대괄호를 넣고 초기화를 해버리면, 이 숫자에 따라 내부적으로 어떻게든 Reserve를 해줄 거 아니에요? 이게 벤치마크 해 봤을 때 Reserve하고 넣는 것보다 조금 느려요. 아주 조금. 근데 왜 느려야 할지도 잘 모르겠어요. 굳이 느릴 필요가 없는데. 이유는 모르겠어요.

그래서 이걸 하는 것만으로 나중에 초기화하는 List에 몇 개를 더 추가하더라도 아까 Reserve에서 말했던 비효율성이 없어진다는 거죠. 한마디로 Reserve를 하고 넣는 건 두 개의 연산이지만 얘는 하나의 연산으로, 프로그래머의 생각하는 연산으로는 하나가 되기 때문에 오히려 실수를 줄일 수 있어서 저희는 다 이걸로 강요를 하고 있어요. 예전에 게임 회사에서도 있었는 일이지만 컨테이너 같은 데에 어떤 정해진 숫자의 요소를 넣음에도 불구하고 Reserve를 안 하는 사람들이 꽤 많았거든요? 이걸 안 하는 사람들이 많다는 것은 안 해도 코드가 돌기 때문에 신경 안 쓰고 돌리는 거거든요? 그래서 안 해도 신경 안 해도 잘 될 수 있는 문법이 나왔다면 안 할 이유가 없는 거죠. 근데 이게 참 아직은 C#이 새로운 기능 나올 때마다 괜히 '이걸로 다 써라' 그래요. 배열을 초기화할 때도 이걸 쓰라고 막 이렇게 추천을 해주는데, 배열 따로 컬렉션 따로 분류해서 얘는 얘, 쟤는 쟤 이런 규칙을 아직 넣을 수가 없어서 좀 안타까운데, '점차 나아지지 않을까?' 생각은 하고 있어요. 이 두 개가 분리가 돼야 '배열은 어쩔 수 없이 다른 언어랑 공통돼야 하니까 얘네만 이대로 쓰는 거고, 컬렉션은 그냥 이걸로 하겠지.' 생각은 하는데, 어느 정도 시간이 지나면 이게 귀찮아져서 '배열도 다 이걸로 초기화해.'라고 할 수도 있을 것 같기는 해요. 그래서 Collection Initializer라고 하는 거 꽤 좋은 거고, 이제 이걸로 강요하고, 그 외에 좀 Reserve하고 하나씩 추가하는 것들을 바꾸라고 계속 권고를 하고 있죠. 요건 맨날 '안 된다.' 그러다가 '요건 새로 나온 거니까 쓰세요.'라고 하고 있네요? 그죠? 그래서 봤는데 명백한 것들은 열심히 쓰라고 합니다. 그리고 생각 없이 썼을 때 기본적으로 성능의 저하를 가져올 여지가 별로 없고 실수를 할 여지가 별로 없는 것들, 그래서 그런 것들은 계속 도입하고 있습니다.

포프였습니다.