굉장히 오랜만에 10불 찾아 된 10번 에 대해서 얘기해 보는데
예전에 뭐 내가 쓴 시프 풀 일레븐 이런 얘기는 몇분 만들었죠
이걸 이 제목을 바꿔야 될것 같아요 차세대 10불 내가 쓴
뭐 어쨌든 오늘 할 얘기는
모듈 시프 포레 드디어 모듈이 들어와요
까 싶을 뿔의 모듈의 굉장히 뭐냐면
10불 하고 잡아 슈퍼 풀 하고 치 샵을 볼 때 큰 차이점이 있잖아요
스프 볼은 헤더 하고 시피 파일을 분류가 되어 있고 자바나 c 작은
그렇지 않아요
그런데 시프 볼에서 헤더를 잘못 잉크를 나기 시작하면 막 서로 컴파일 도
안되고 이거 알 수 없네 게 중복에 난리가 났지만
c 샵 은 그런 일도 없죠 그 차이가 뭐냐면 cc 아까 자바는 모듈
시스템에 고슈 볼은 모두 시스템이 아닌 거에요
그래도 모두 시스템 뭔지 설명해 보다 c 풀뿌리 어떻게 돌아가는 지를
말씀을 중에 편할 것 같아요
지프 번에는 헤더와 12 피를 얻죠
헤더의 는 모르는 것이냐 며 는 함수 시그네쳐 클래스 시간 애초 내
함수는 실제 요론 a 피해가 있고 요런거 를 호출하고 요런 멤버 변수가
있습니다
짚불 에서는 이제 그거에 대한 9 & leap 에는 이 함수를 이렇게
구해서 얘기 함수 함수 함수
이렇게 구현한 거에요 그런데 딸은 파일에서 이 클래스 써야 된다
그러면은 이 당시에는 뭐 인클로저 짜 나요 인크루트가 뭐냐면 이 파일에서
2
헤드파이 링크로 되요 그럼 이거를 카피 앤 페이스트 락의 복부 태 욕불
컴파일할 때 복부 태서 그럼 iap 가 있으니까 나는 얘를 호출할 수
있구나 그런 컴파일하고 그 그딴 오빠 또 헤더파일을 레퍼런스 하면은 복부
태어났고 않아 ap 가 있으니깐 2 ap 가 있으면 일단 컴파일은 가능해
그러면 오브젝트를 만들고 나는 이 api 를 호출 해야 돼 라고 기억을
하는 거에요 그러다가 나중에 아까 인플레 멘트 소외되어 있던 파일 있었죠
그의 컴파일된 이거 탄 오브젝트 파일 되요 obj 라는 파일 형태 요그
비쥬얼 수도에서는
그러면 나중에 링크 작업이 있어요 링크는 이 오브젝트 발을 다 모아서
합치는 거에요 합칠 때 애가 이 api 에 a 란 함수를 호출 했었어
근데 내가 어딘지 몰라 내 디카가 보니까 오브젝트 파일의 게 있어요 아
그렇구나
그러면 이것을 아 그래 너는 기회 를 호출하는 걸로 해서 뭐 점프
테이블이 겠죠 보통 어셈블리로 2 메모리 주소로 점프해서 끅
이렇게 컴파일 됐기 때문에 되는거예요
그렇기 때문에 근데 문제는 만약에 cpp 파일
아까 구현 한계 여기에 인클루드 가 된다
가능해요 사실을 잉크로 등 카피 앤 페이스트 기 때문에 가능해요
그럼 여기 들어와서 이 플랜트 션 2ea 패에 이 함수가 있고 이
오브젝트를 도 apa 함수가 있어요
그러면 링크 하는 도중에 에러가 나요 o a 라는 함수가 2번 있어 어떤
것도 될지 모르겠어요 에라
뭐 뭐 컴파일러 최적화 에서 좀 걸을 시작 중복되는 건지 확인해서
제거해줄 수 있겠지만 어쨌든 그래요
그렇게 굉장히 좀 복잡해 줘 왜냐하면 은 그러면 이 헤더에서 다른 외도로
포함해 되는데 이 다른 또 얘를 포함 해야 돼
그럼 그런거 안 돼요 그럼 그걸 해결하기 위해서 아 헤더를 포함하는
대신에 이런 게 있어 라고 포드 데커레이션 일하고 있거든요
나는 그냥 이런게 어딘가 있어 라고 자 타이핑을 치는 거야 라는 클래스
a 라는 게 있어
내부는 모르겠지만 클래스의 이라는게 있고 클래스 a 가 있다는 정도로
컴파일이 되면은 예를 들어 포인터 레퍼런스 같은 경우는 점프 테이블이 기
때문에 그 클래스가 존재한다는 것만 알려는 컴파일 되거든요
그런 뭔가 꼼수가 나온 거에요
시 샵과 자바는 어떤 식이 냐 면 내부적으로 제가 정확히 지금 모르겠는데
이런 걸 거에요 c 샵 은 모든 클래스 와 2+ 한 파일에 들어갔죠
사실 이게 깔끔하고 보기 좋아요 뭐 짧고 보기 좋은건 아니지만 한군데서
관리 한다는 것에서 보기가 좋아요
그러면 그
컴파일을 하고 해라 컴파일러 까진 아니지만 그 모
비주얼스튜디오 있을 거야 정확히 제가 개념이 안 잡히는데
거기서 그럼 헤더파일 게 다 있잖아요 그럼 그 정보를 기억을 하고
있는거예요 그래서 다른 클래스에서 이걸 호출 읽었다고 그래 나는 이게
있으니까 링크 해 줄게
한마디로 헤더 파일이 라는 것을 자동으로 생성 을 해줬다고 보는게 맞죠
그리고 이제 뭐 그의 메모리에 있든 따른 파일이 있던 그래서 참조하면서
앞에 난 이거 빨리 쓰니까 쓸 수 있어
이런 개념이고 그렇게 그 시스템을 스프레드 오겠다는 거에요 그래서 그
제안이 있었고
시프 풀씨 칩 7의 음 기능이 들어와요
그래서 이제 모듈 시스템이라고 해왔고 아 제가 빨 확장되는 정확히 기억이
안나는데
어떤 확장자 에서 그 파이를 먹는 거에요 그럼 이제 아니다
cpd 파일을 쓰고 모진 기능을 키면 은
애가 그 씹힐 파일 그가 모든 그 뭐랄까
아
클래스 하고 모든 게 있는 거 에서 4 지가 알아서 그 아까 말했던 그
이 헤더 같은 자동 헤더를 만들어서 그것을 이제 털어 참조 라는 거죠
그래서 이렇게 되면 장점이 뭐냐면 cpp 에 가장 시프 불의 가장 속도
저하의 요인이 뭐냐면 컴파일 시에 헤더 8
그러면 내가 이 파일에서 해석 8 10 개를 포함 했는데 각 헤더
파일에서 따라해도 빠른 10개씩 포함해
그러면 가빠 1 긋고 복사하고 붙이는데 막 막 1000개 잉크 되고
cpp 파일 1 컴파일 한 대
1000개 10만 파이 컴 집어넣었고 할 하는 그런 경우가 있었거든요
그건 문제랑 그게 를 해결해 줄 것 같고 실제 멋이 샵이나 자바의 컴파일
속도가 빠른 것도 그 게 커요
그리구
이게 지금 비주얼 스튜디오에 들어와 있긴해요 2015 지금 버전의 근데
이게
커맨드 라인으로 켜야 뭐 엑스페리먼트 털 실험적인 기능 모듈 시스템
이런식으로 해서 저도 아직 안 써봤어요 제대로 보면서
정시 깔 아지 엑스페리먼트 링 이유는
시프트 17에 험한 남았는데 최종안이 안 나온 것 같아요 최종안을 아직도
만들고 있어요 그게 나오면 그 제대로 지원하고 정식 기능으로 뽑을 것
같아요 그런 제가 다 음식 풀풀 프로젝트라는 모두 시스템을 쓸것 같아요
컴파일 시간에 때문에 그 컴파일 시간 해결하려고 막 말도 안되게 t 14
를 만들어가고 쉽게 한다거나
별짓 다 했거든요 망 주니 tv 라고 야곱 1집 이 파일을 100개를
하나로 뭉쳐서 컴파일 한다거나
그러고 치듯이 거 같구요 제가 봤던 c 풀풀 기능 중에는 가장 맘에 들어
갈때 지금은 최근에 나온 기능중에
그래서 그렇게 돼 있고 그 이제 또 이제 싶을 풀에서 그러면 한 가지
문제가 되는게
그러면 우리는 그 이후 데크 했던거 어떡하냐 엄청 많이 했잖아 옛날에 마
그
pd 파이 들어가 검수 이상 아직 많이 한거 그거 따라 아마 헤더파일
다르게 컴파일 되고 뭐 이런 것도 있었고 그것도 지금 비주얼스튜디오
블로거 나온거 보면 지원을 한데요 그래서 제대로 쓸 수 있다 아직도 야구
하는데 그거는 그냥 이프 fm 컴파일 정도 바꿀 때 인것 같고 그 막
함수 대신 atf 함수 만드는 경우 그 동우 까지 어떻게 되는지
모르겠어요 그건 좀 더 봐야 될 것 같고
음 지금 다 써봐라 라고 하고 있잖아요
음 그냥 이게 온다는 걸 알고 계시고
비주얼 스튜디오에서 정식으로 지원할 때 그때 한번 써보시면 봐요
아 테스트 한번 해보시고 괜찮은 이제 제가 매트가 읽은 바로는 앙 괜찮을
이용 별로 없어요 요 최근 그니까
이상하게 매크로 떡 칠해 놓은 그런 코드가 안 세상을 크게 문제가 없을
것 같아요
그래서 아 모듈 시스템 드디어 들어오는구나 하는게 기쁘고
어떻게 구현할 지 대해 궁금 했는데 다행히 그냥 에 비 쥬스의 컴파일하면
은 이제 어떤 8 자기 확장자가 있더라구요 그 확장자로 헤더 파일 자동
생성해 주고 다른 파일에서 그 헤더파일 1 보는 것만으로 아 이게 어떻게
도는 군을 알 수 있게 해주는 그런 방식으로 만들어 더라구요 그래서
어느 뭐 곧 결과적으로 좋은 점은 이제 헤더를 손으로 일일이 포함 앱
주필 줄 필요가 없이 나는 이 모듈을 쓰겠다 라고 이제 뭐랄까 선호하는게
전부 이 모듈을 쓰겠다 뭣이 샵에서 유지 이런거 쓰듯이 자와 해서 인
폴터 쓰듯이
그럼 이제 그거를 그게 패키지가 어딘지 그런것도 이제 막 이전처럼 막
경로설정 안해주고
에 뭐 idea e 에서 가 아니겠죠
그럼 정말 어떻게 절정의 id 에서 자라서 해결해준다
현재 뻗어 안에 들어있는 모든 그 클래스들의 건 좀 더 봐야 겠네요
어떻게 모듈 최종 비전과 하는지 그것까지는 제가 설명을 해 봤어요 정확히
뭐 디렉터를 수 척척 어떻게 되는지 이거는 제가 볼 때는 자동으로 해결해
주는 것 같은데
시프 컴파일러 스펙상 에서
모듈 마한 이따 이따 모듈 폴더 라마 전해졌던 것 같아요 그래서 모듈
폴더를 정해 좋았고 그 꼴 단에 있는 전부 모듈을 붉어서 알아서 봐줄
그래서 어찌보면 은 그러한 그렇게 서브젝트 레이드 포함 포함 할 거구요
그래서 에
그 정도면 은 이제 그냥 자바나 c # a 지능과 비슷해 지는 거죠 근데
이제
차이점이라면 이제 싶을 뿐 은 기본적으로 리플렉션 을 안 쓰는 게 일반적
이니까
리플렉션 에서 쉽게 얻을 수 있던 모든 장점 사실 없어졌죠 시샤 은 제가
올 때는 dlsr 그냥 부어버린 다음에
바뀔 때마다 그래서 구워져 쓰면 뭐 봐야 돼 있어 메모리 뜬
그럼 거기서 리플렉션 뽑았고 어떤게 이제 다 나오거든요 아 무슨 뭐야
센터를 애써 쉽게 작동 했고 크게 없는 거죠 사실 뭐
id 수준에서 rti 켜 버리고 컴파일 한 다음에 찾아 볼 수 있겠지만
그래도 c # 리플렉션 만큼 완벽한 기능은 아니기 때문에 그 정도
모듈은 저도 되게 관심을 가지고 있고 제가 지금 있는 회사에서도 1
컴파일 헤더파일 잘못 건드리면 컴파일 막 30분 40분 걸리는 말던 들은
gc 일어나기 때문에 뭐 컴파일 타 이름 주기 네모안에 얘길 많았지만
제가 볼 때는 그 프로젝트도 결과적으로 그냥 모듈 시스템 으로 가서
해결할 것 같아요
모두 이제 들어옵니다 여태까지 알고 있든 그건가 컴파일 시간 줄이기
흑마법 은 별로 필요 없는게 될거 같아요
뭐 최소한 이제 신부 뿔 신 스펙에서 나아지는 게 있으니까
다행이죠 제가 50 스펙 나오는 것 중에 안좋게 보는 게 되게 많았는데
가끔 이렇게 노다지가 보일 때 좋아요 예 뽑혔습니다
