제가 c 샵 을 굉장히 사랑한다고 눈이 박혀 왔는데 그러면서도 c # a
최근 들어서는 여기저기 망가졌다 라는 얘기도 했었잖아요 최근에 제가
발견한 건 아니고
전환 굉장히 친한 친구이자 동료 가 발견한건데
아시 샵에서 또 하나의 문제점은 알게 됐어요 이거는
최근에 만든 것도 아니고 좀 오래된 코드 인데 오래된 클래스 고 어 그에
비해
어이 이거 를 왜 거기 할 때 소스가 생각이 들 정도로 좀 황당 을
상당한 코드를 발견했죠
황당 코드가 아냐 이제 c # 자체 라이브러리 인데
xml 씌어 말이 저의 로리가 있잖아요
액션 ncr 라이즈가 하는 일에 이제 xml 파일을 두고 이제 그걸
오브젝트로 입니다 던가 오브젝트를 xml c 를 xml 로 바꾼 하던가
이 짓을 해요
미제 당연히 시샵 이니까 리플렉션 시스템을 자꾸 하는건데
이게 xml 셸 아이즈 굉장히 재밌게 작동을 하더라구요
xml 쉴라 시리얼 라이저 로 처음에 오브젝트 나모 xml 을 쥬얼
라이즈 지 얼마 이즈 디 lig 를 할 때
그 내부적으로 어셈블리 파일을 만들어요 그러니까 어떻게 만드냐 며 는
뭐 리플렉션 통해서 아 그럼 이거는 이렇게 해석하고 저렇게 크고 어셈블리
파일을 만들어 갔고 그거를 캐셔 쪼금 메모리에 그리고 그 다음에 또
똑같은 타입을 씌어 가이즈 나티 cli 를 할 때 그 만들어진 어셈블리를
가지고 그걸 쓰는 거에요 그래서 처음 coli 저한테 좀 느리고
그 다음부터 할 때는 굉장히 빠르게 할 수 있게 굉장히 뭐 올바른
방법이긴 하죠 그래 뭐 괜찮은 방법이 구나
뭐 뭐야 어셈블리 미리 따로 만들려고 또 따른 kr 수 도 있지만 뭐
그래도 제가 지금 말하는 문제점을 똑같이 발생하더라도 요
이거에 문제점이 뭐냐면 이 어셈블리를 재활용 하는거 2
이거를 재활용하는
그 패스 라고 해야되나요 그거는
엑셈 cli 저그가 생성자가 되게 여러 개가 있어요
그 중에서 딱 2개만 이 재활용을 해요
어셈블리 만든것을 그게 첫번째 10월 라이저 가 xml 쉬운 라이저
들어가고 그 다음에 타일 때 고개 하나 고 그 다음 께 xml 의
일라이저 하고 그 다음에 타입 컴 마스트 링 크기 아마 루트도 드 네이밍
감옥 그런 네임 스페이스가 그런걸 거에요 그래서 유 두 가지 컨셉트로 할
때만 이 만든 어셈블리를 재활용 해요
그러면 그건 안 따라 컨트롤 수도 있거든요
저희가 이번에 제가 제가 요번에 처음 요번에 봤던 거 커서 두렵다는
생성자는
그 첫 번째 매개 변수의 타입을 받고 두 번째 매개변수로 추가적인
타입이라고 해서 타입 어레이를 받아요
근데 그걸 딱 할 경우에는 어셈블리를 똑같이 만들어 처음 실행할 때
똑같이 만들고 그걸 이용해서 디 션 c 를 낸다 하죠
근데 얘가 문제가 있어요 이걸 재활용을 안돼요
다음에 또 똑같은 1 타입으로 그 cli 를 하려고 하면 똑같이 다시
어셈블리를 만들고 그리고 또 쉘 아지를 하고 일단 속도가 느린 것도
문제지만 이 속도가 저희가 이번에 봤던 경우는 이 어셈블리의 만드는
속도가 1.7 쳤어요
근데 어셈블리 재활용을 하면 실제 cli 좋아하는 시간에 0.1 초 민아
그래서 엄청난 속도 저하도 있지만 더 웃긴건 은
아까워 샘플을 만든다 그랬잖아요 그런거 어셈블리의 만든게 가비지 컬렉션이
되느냐 안 돼요 그냥 어셈블리 만들어 두고 또 나중에 또 위 큰 섬을 또
어셈블 만들어두고 만들어두고 만들어두고
그래 이게 계속 호출이 되면 메모리 릭을 계속 만드는 거야 그게 msdn
도큐멘트 테이션을 써 있긴 해요 근데 어이가 없는 거에요 왜 이 함수를
냅두고 있을까
lms 에 도쿄 맺으려 하는 얘기는 만약에 이 두 컨스트럭터 가 아니라
다른 코스트 롤렉스의 실려 잘 할꺼면
이가희 뉴 엑셀 시간 라이즈 하고 그 다른 매개변수 놓았고 만든 그
오브젝트를 딕션 이라던가 어디에 놓았고 미리 캐쉬 를 해두고 나중에 그걸
확인해서 이미 한번 cli 한거는 니가 퍼내어 써라
그러니까
그 엑셀시어 lig 어 함수 자체가 내부의 사더니 를 저희 고 1 고
해야 하라고 권하는 거죠
근데 진짜 이해가 안됐어요
솔직한 얘기를 코드 절대 문서 하나 다 읽어보지 않아서 별로 없잖아 요즘
그냥 해서 액션 쉬워졌고 이 함수 받은 이가 이렇게 되겠구나 라고 해서
만든 것 뿐이거든요
근데 첫번째 성능 저하도 문제지만 두번째 진짜 웃기는게 이 맹물에 리라면
진짜 웃긴 거예요 그렇게 성적을 길 꺼면 그냥 메모리를 더 만들지 말던가
it 를 선물 안만들고 그냥 cli 드셔야 하고 버리는 다 가듯이
건립되고 하던가
그것도 아니고 어중간하게 양쪽 나쁜 것만 골라 온 거야
속도 느리고 메모리 두 사람 없고 메모리 풀리지도 않고 그래서
보면서 저는 야 지호는 진짜 잘 만들었구나
그래서 이 문제를 찾은 친구하고 얘기를 좀 했는데 어젠가 술마시면서
이 친구 말로는 그 커쇼 부터 그게 사실은 파워유저를 위한 거고 그 일반
유저들은 앞에 거 2개만 쓰는게 맛다시 얘기해요
보면 제 주장은 어차피 코딩한 사람의 90% 가 개 판인데
죄송합니다 개판 인데 그러니 개판 까지 아니어도
그렇게 뛰어나지 않은 데 그 사람들이
문서를 다 이런 거 라고 생각하며 다치고 웃기지 않아요 실수를 만들어질
나중에 웃기고
그럼 차라리 처음 2 컨스트럭터 는 베이지 그 어셈블리의 놓고
라이브러리의 나머지 2개 하지만 파우더로 위한 라이브러리 따로 제공 해야
되거든요
그럼 그게 오려 만든 방법이지 왜 그렇게 실수 할 여지를 만드는 이가 더
이해가 안 돼요
그래서
이번에 보고 느낀 게 아 정말 언어라는 게
한명이 만드는게 아니라 아니 아니라서 그런지 몰라도
이리저리 하다보면 정말 실수가 생길 수 있는 분 많고 그 실수가 퍽
울림으로 나오다 보면 은 그걸 쓰던 사람이 제가 쉽게 바꿀 수도 없구나
네 지금 엑셀시어 라이즈 제가 본거 로는 이정도는 브레이킹 체질을 만들어
라도 다음 버전 나올 때 차라리 함수를 없애버리기 난거 같아요 극한 쇼트
자체를
아니면은 그 코엑스에서 내부에서 자체로 또 캐쉬가 되게 해 주던가
이렇게 캐쉬 못할 리가 없거든요 그리고 정말 파워유저를 위한 캐쉬가 없는
그런 버전을 만들 거면 골자로 라이브로 주던가
그게 맞는거 같은데 요번에 좀
어 저도 보고 많이 느꼈어요 저도 이제 처음에 그걸 성능을 잡다가 사도
내려왔고 왜 이런가 했는데
보이게 저희 머스탱 어플로 나 이런거 읽어보면 혼탁해진 된다고 그래서
그런 우린 것만 따른 문제가 있었거나 식으면 얘기했지
정말 그 매개변수가 이렇게 몇개가 들어갔을 때
그거 로 인해 아이의 캐시비 없어지고 메모리까지 된다는게
msdn 의 키키 뒤 줘야만 나오더라구요
요즘 사람들 솔직히 스택 오버플로 맨앞 오직 nam 사람도 별로 없잖아요
그래서 참 안타까운 일이라 생각을 했고 액셀 쉬운 - 시는 분들 중에
혹시라도 아까 처음에 말했던 그 커스터 2개 쓰시지 않는 분들은
반드시 자체 캐쉬 를 만들도록 하세요
고도 찾아갔고
어 그 정도면 은 뭐 이거는 시샵 을 까는 것 보다는 그냥 지 샵에서
문제가 생기시는 부분에 대한 유용한 정보 팁 이었네요
예 구청 하면 되죠 뭐 에 뽑혔습니다
