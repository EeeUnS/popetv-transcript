얘네 4p 입니다 음 제가 예전에
뭐지 그
코딩 스타일에 대해서 본 얘기한 적이 있어요 이렇게 제 블로그에서 주력이
했던거 같은데 코딩 스타일이 이렇게 박스에 필요가 있냐
그리고 뭐 어떤 아키텍트 클래스를 갔다와 오고 나서 이제 그 사람이
말하기를 코딩 스탠다드 는 올해 해야되고 뭘 해야 되지만 일지만 쓰고
보수 뭐 이유는 쓰지 않아도 된다 왜 그렇게 따라 되는지를 얘기했는데
저는 개인적으로 코딩 스탠다드 가 되게 간단하게 원하는 사람 중에 하나요
예 그러니까
실수를 크게 만들지 않을 만한 그런 코딩 스탠다드 라면은
아니 어떻게 해도 실수를 만들지 안된 경우 라면은
그걸 가족성 해치지 않는 경우라면 굳이 두 사람의 코딩 스타일에 완벽하게
맞지는 않아도 된다고 생각을 하거든요
물론 이제 사람들마다 굉장히 코딩 스타일에 적응을 잘하는 사람도 있고
제가 그래요 그거 자기만의 그 세상에 빠져 코딩 스타일 회사에서 원하는
걸 적응 못하는 사람도 있어요 근데 그 쓸데없는 시간을 그런
트롤 들한테 뭐 고치려고 쓰는 것보다는 차라리
어느정도 유연하게 같고 정말 문제가 되는건 잡자 나는게 저주 이거든요
이제
최근에 이제 포프 tv 채팅 방에서
뭐 누가 그런걸 물어 봤어요 그 efs 모스 쓸 때 보통 언어 드레스 중
과로를 많이 쓰나요 컬리 브래킷 이라고 하는거나 컬리 프레이 쓰되 신가
곡을 많이 쓰는데 이제 한 두가지 방법이 있죠 가장 큰걸로 는 이제 이프
가 있고 이프 바로 옆에서 가루를 연 다음에 이 그가 이후 바로 오른쪽에
다 가루를 열고 실제 가루를 다룰 때는 아이하고 맞춰 곳 않는 방법
주로 자바 진영에서 많이 쓰는 방법이고
자바 2d 에서 주로 많이 썼고 clr 코드 에서도 많이 재수없게 했어야
할 c 플러스 플러스 더 그러고 이제 최근에 하는 언어들은 보통 이 풀을
쓰고 3주를 만든 다음에 아이에 맞춰 소 브래킷 열고
그리고 아이에 맞춰서 맞으면 불쾌 받았거든요
쓰디 둘중에 뭐가 더 편한 야 뭐 이런 얘기가 나왔는데 사실
이 부분에 있어서는 제 생각은 그래요 아 이게 나한테 편한건 언제나 제가
익숙하게 편해요
누구나 그래요 저도 이제 시작을 당연히 꽤 오래전에 코딩을 했으니까
이프 옆에 프랭키 10 9 이렇게 이 피트가 가로 받는걸 했는데 저는
현재로는
이프 아래 다가 열어요 그 이유가 뭐냐면
일단 옛날에 ep 옆에서 열기 시작한 이유가 뭐냐면 둘다 말에 열 등
오른쪽에 10대 똑같은 거 거든요 사실을 신택스 정도로 난 문제가 없고
둘다 컴파일 다 되요 왠만한 언어에서 정말 이상하고 괴기한 언어가 아닌
다 이상은 제가 이렇게 말하면 어떤 언어 인지 알 거에요 제가 별로
안좋아하는 언어 하나 있어요 최신 에너지
그런 언어가 아닌 이상은 돼요 근데 예전에는 왜 굳이 옆에다 부천 냐
예전에는 화면에서 볼 수 있는 코딩 그 라인 수가 적었어요
옛날에 처음 제가 코딩 시작할 때 막 그 도스창 으로 생각하게 얼마는
제 정확히 기억은 안나는데 최대 볼수 있는 주소가 40주 인가 24
주리가 밖에 안 됐거든요
해상도가 640 꼬박 2 4회 82 라고 보면은
포탄 아다모 1 24 픽셀은 먹어줘야 되니까 그럼 20 줄일 거고
329 폭 200 수 없잖아요 그런 말 그대로 열어줄 나오는 거에요 줄
그래서 뭐 제가 볼때는 제 기억에 수 원래 줄인 데 제가 기억이 틀릴 때
47 수 있어요
그래서 코드를 보다 보면은 한 눈에 안들어 오잖아요
1 오른쪽 봐야 잭 보이는데 그런 마스크로 올리고 내리고 올리고 내리고
이게 갑갑해서 가능한 한 페이지 좀더 코드를 많이 넣는게 코드 얘기들 때
편하다고 해서 줄어만 있었던게 옆에 붙이는 거 였어요
그쪽에 따른 얘기도 그거랑 가슴 키스 해 해드릴께요
그런데 요즘은 화면이 보통 1080p 는 쓰고 만들어 720p 는
쓰잖아요
그럼 거기서 나올 수 있는 이미라 인수가 충분 하거든요 이걸 브래킷을
아래의 붙여도 충분히 볼수가 있어요
굳이 애를 먹게 줄이면서 까지 그럴 필요 없는데
그러면 왜 이 밑에 가나 넣는 방식인 않냐 제가 왜 그렇게 느낀 이라고
보면은
일단 사람 눈은 언제나 패턴을 찾는 걸 되게 잘해요
그 대칭되는 거 있잖아요 이렇게 어느 면에서 이렇게 닿는 면이 있다거나
모빌을 화살표 도 위 아래 좌 우가 반대측 늘어나고 대칭 이잖아요 어쨌든
간에
그래 는 이유가 사람이 그 패턴을 잘 보는 거에요 그래서 실제 만약에 줘
제작이 컷 않는 곳이 있어요 그러면 이 코드를 어디 얻는건 야 브래킷을
금 쭉 갔을 때 위의 브래킷 이 있으면 훨씬 사람이 빨리 캐치 한다구요
그 저는 뭐 본인이 어떤거 2스킬 있는지 모르겠지만
앞으로는 모든 언어가 다 이렇게 계층적으로 갈 거라고 봐요 가면 갈수록
그 이유가 당연하게 새로 프로그램의 한 사람이 있으면 굳이 쓸데없는 거에
시간 낭비하면서 이런걸 익숙해질 필요가 없잖아요 사실 그건 밑에서 쭉
보고 아 여기 있으면 그 이러고 넘어가면 되는거니까
그래서 는 그렇게 할 거라고 보고 그리고 어찌 보면은 그게 올바른 코딩
스탠다드 라고 좀 봐요
나한테 익숙한 게 아니라 사람들이 전반적으로 뭐 1분이라도 아낄 수 있는
거 뭐 어느 쪽으로 3가 없는 거면 그래도 그나마 안한거 그리고 굳이
예전 에서 그렇게 뚫어야 했던 이유도 없으니까 한줄 이렇게 올려 왔고
저는 그렇게 보고
물론 이게 굉장히 종교적인 논란으로 가요 사실은 나는 이게 좋다 저게
좋다 이게 봤다 근데 제가 여태까지 오른쪽이 하는게 맞다 라고 하는
사람의 얘길 정말 딱 두가지 여태까지 나한테 계속하다 그걸 또 하나가
알게 한 줄에 아예 한 페이지에 코드가 많이 나오 좋다
근데 이제 제가 말씀드리지 한 페이지에 코드가 많이 나 좋다 얘기는
굉장히 많이 사라진 얘기 고요
왜냐하면 지금 현재 id 지금 현재 화면 해상도에서 보면은
이미
충분히 만들이 나오고 더 많이 나와 봐야 오히려 눈이 올라갔다 내려왔다
며 얘기니까 로직의 사람이 따를 수 있는 1개 정도가 있는 것 같아요
코딩이 사실을 그 주술을 이제 거의 넘어간다고 봐요 그리고 만약에 제가
그렇더라도 내가 코드가 천 줄이 앞에 지나가다 이해할 수 있어 이 정도의
사람일지라도 어차피 협업을 하다 보면은
그 수준은 하향평준화 시킨 해봤거든요 어느 정도까지
그럼 결과적으로 제가 볼 때 사람들이 평균적으로 있으니 읽을 수 있는
코드 수만큼
이미 이 브라켓에 밑으로 내려서 써도 보이기 때문에 굳이 프로필을 줄이
필요는 없고 그래서 구하고 이제 아까 첫번째 말씀드린 사람들이 하는 얘기
나한테 계속 하니까
이거는 저는 보통 굉장히 무시하는 것중에 하나에요 왜 나한테 단순히
익숙해서 이게 낫다 라고 우리는 거는 그냥 여태까지 해온 개의
내가 바꾸기 쉽고 내가 불편하니까 회의 들이밀고 갈꺼나
2 내가 바꿔라 이게 내 방법이 굳이 의미는 없지만 내가 편하게 가봤고
라는 거고 굉장히 이기적인 거고 그리고 그런 얘기 있죠 이제 뭐 한국에서
예전에 많이 하는 얘긴데 이제 아름다운 전통을 유지하고 잘못된 뭐 관습은
고쳐야 된다 이런 얘기 있잖아요 제가 때 게 잘못된 관습적인 것 같아요
가면 갈 수
뭐요 그래서 그거는 이렇게 에 그게 맞는 것 같고
물론 이제 콘솔에서 코딩 하시는 분들 있죠 아직도 많고 조작되어 놓고 막
그 터미널에서 하시는 분들
그런분들에게 내 어제 한 줄이 맞을 수도 있어요 어쭈 려 하는게
그전에 일단은 기본적으로 사람들이 뭐
굉장히 모던한 오퍼레이팅 시스템 에서 훌륭한 2 를 쓴다고 생각을 가정을
하고 얘기 하는 거기 때문에 그렇게 얘기 하구요
그리고 이걸 않았다 비슷한 얘기
그 있죠 이제 이프 문 밑에 코드가 한줄 있을 때
괄호를 열어야 되냐 말아야 되느냐 이프 코드 한줄 ss 상관없어요 ef
안주로 끝나면 되거든요
인정되는 분 법 이거든요 내 처는 언제나 과로 느라고 보통 얘기에요
물론 둘다 목적 밑에 이렇게 걸어 붙이면 이유가 뭐냐면
예전의 그 이거는 그냥 뭐 반드시 이 문제가 그것땜에 생긴 건 아니지만
하트 물 이라는 얼마전에 오픈 ss 의 주연 ssc 주저 그니까 htpc
키워 그런 연결하는 그런
아니지 스크 cq 셔 이니까 그런거를 이제 시켜 컬렉션을 연결하는 그런
프로토콜의 줄수 높을 수가 있는데 거기서 한번 엄청난 시킬지 우리
나왔어요
그 이유가 사실은 뭐냐면은 이거 때문이었어요 그러니까 제가 정확히 끝까지
안 읽어봤는데
분명히 코드가 이렇게 돼 있을거라 생각을 해요 이 푸니 있었고
여기 이 부문의 하면은 뭔가 이걸 해라 이게 이제 무슨 로그인을 해야지만
되는거라 c 피력해 채널이 만들어지면 되는거겠죠
그렇게 코드가 있었고 잘 작동을 했어요 언젠가 어느 순간 누군가가 와서
아 이 폰 로지 개
1 주로 넣고 대학의 추가 해야 겟다 라고 해고
진짜 이쁨 은 밑에다 코드를 추가 했어요 절에 있던 코드 밑에 근데 있는
테이션 다 맞췄는데 깜빡 잊고
브래킷 를 치는 걸 까먹은 거에요
그게 문제 어떤가요 그러면은 이 첫 번째 줄에 이 통해서 각 작동이
되는데 인 젠 테이션 아무 상관 없으니까 어차피 씨 같은 언어에서는
그 이프 문의 걸리지 않아도 두번째 주문 실행했던 거예요 근데 그게
문제가 되는 거거든요
이거는 말 그대로 이거를 제아 언제나 브래킷을 치려고 하는 이유는 그런
실수를 막기 위해서 라고 생각하면 좋겠어요 까
저는 코드 자수 잘 짤 수도 있는데 제가 나중에 와서 오랜만에 서 코드
치거나 아니면 저보다 조금 못한 사람이 와서 완벽해야 조금 이렇게 정신이
없어 따거나 사람이 바빠서
코드를 짤 때 그런 버그가 생길 수가 있다는 거예요 그래서 단순히 네
태중에 돼 있으니까 아 일주일이 되새겨 들면 되겠지 로 생각할 수가
있어요 아이디가 그거 안 자주 나잇 일수도 있고 그리고 또 파이썬 에
익숙해진 사람이라면 그게 당연하다고 생각할 수도 있어요
이제 판서를 안좋으니 중에 하나도 건 없지만
그 이런거 때문에 실수를 막기 위해서는 차라리 명시적으로 범위 라 그러져
스코프 그 코드의 범위를 정해 주는 게 좋아요
버그를 막을 수 있고 이런 이게 재미 노턴 쏘세요
누구나 다 리뷰 하는거고 뭐 컨트리 셨을 때 누가 컨트리 하는지
모르겠지만 풀 이 퀘스트에서 당일 리뷰하고 쓸 거에요
눈으로 볼 때 맞아 보여요 근데 문제는 e5 플레이스 해치가 전세계 웹
페이지의 뭐 70호 50% 쓰던거 였거든요
d2 문제가 생겼을 때 이미 전세계 57 10% 는 그 위험의 있었어요
모든 패스가 도난 당할 위험이 언제 뭔지 까먹었는데
그래서 코드를 안전하게 짠 다 아는 게 있어요 실수를 덜 하기 위해 저는
그런 개념에서
입수 밑에 한줄 코드가 있어 언제나 브래킷 여는 걸 추천하고
그리고 아까 말했듯이 고모 이프 옆에 어 내 밑에 여야는
그냥 가독성을 높이기 에서 밑에도 라고 하는
하고 싶어요 제가 보는 제 코딩 스탠다드 보이거나 어찌 보면은
제가 앞으로 어쩌면 그냥 제가 쓰는 코딩 스타일을 좀 더 얘기할 저도
모르겠어요 그런 식으로 반대 이제 방법이 옳은 것도 아니고 제가 못가
다른 방향으로 써야만 되는 것도 있죠
아까 텀이 나같은 경우 나 그의 좀
의미있게 왜 코딩 스탠다드 그렇게 써야되는 좀 이해하는 쓰고 싶어요
예 그리고 이제 예전에 비해 많은 뭐 기계 발전 모니터 발전 둘의 발전
있었으니까 좀 거기에 맞는 거리 좀 생각하고 싶은 것 같아요
음 2 정도고 에 뽑혔습니다
