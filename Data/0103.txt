또 이번에도 빼먹지 않고 만들게 됐어요 제 생각에는
이거하고 이거 다음 더 만들면 아 저한테 7월말에 지나갈 것 같아서 그
다음부터는 시간이 좀 여유롭게 포프 팀을 만들 수 있지 않을까 하는
생각에 좀 더 마음이 놓이고 요 아 들어가면 좀 일이 될까 빠지니까
수를 남용하는 일이 좀 좋을 거 같아서
그럼 좀 더 맨 정신으로 열심히 만들수 있을것 같아요
처음부터 시작해 들에게 얼굴에 좀 이상한게 많이 났는데
제 생각에는 절반 의 이유는
1회 바빠서 피곤한 것도 있었고 다른 쪽 절반의 이유는 제 생각이 4
일이 바빠지고 말이라면 제가 은근히
알코올에 의존하는 경향이 있기 때문에 그것 때문에 피부가 굉장히 안 좋아
했던 게 아닌가 하는 생각도 들고
어쨌든 간에 음
아 오늘 할 얘기 맞아 오늘 할 얘기는 음 제가 예전에 좀 오래된
얘기인데
사실 트위터 한번 이 얘기를 했다가
쪽 논란이 된 적이 있어요 뭐 제가 의도하는 거에 본질을 못 보고 본지
왜 겪다 리를 자꾸만 보고 거기에 뭐
o 왜인지 모르겠지만 나름대로
열받아 아시는 분이 있었는데 뭐 그 거야 제모 별로 중요한 얘기가 아니고
사실 게임 개발자들이 이 모 반드시 게임개발자 쪽은 아니겠지만
모 게임 개발이 라던가 아니면 리서치 연구 가 굉장히 많이 들어가는
그런다 분야에서
아 실제 실무에서 일을 하시는 분들은 합계 쪽 자료를 볼 일이 가끔
있어요
아 그 이유가 뭐냐면 이제 학계 쪽은 아무래도
바로 현재 시험 가능한 그런 알고리즘이 나 뭐 그런 새로운 방법을 만드는
것보다는
거운 그 시간이 걸리더라도 이제 미래 이런 가능성이 있다 싶으면 그거에
대한 연구를 하고 자료를 발표하고 그게 합계 나오는 거고
이제 그게 뭐든 더 시간이 지나서 하드웨어 발전이 있거나 아니면 정말
우리가 그 필요한 상황이 왔을 때 그걸 이제 실무자들이 많이 가져다 쓰는
경향이 있거든요
물론 요즘 같은 경우에도 실무자들이 새로 발견한 그런 기법들을 아 또
어디가서 발표하기 때문에 그게 이제 학교 자를 함께 자료 와 거의 동등한
수준으로 발표가 되는 경우도 모르니 있고 이제 그 가장 좋은 예가 이제
c 그래프 라고
아 그 전 세계에서 가장 유명한 컴퓨터 그래픽스 쪽이 좋아 뭐 계속
그래픽스 라고 하면 왜 단어의 디자인 의미하는게 아니라 실제 3d 그래픽
뒤에 들어가는 모든 기술이나 그런걸 다 포함하는 거고 그래서 이제
애니메이션 어깨나 어깨에 머 께 이런 쪽에서 많이 가게 되죠
그 저도 아무래도 그래픽 프로그램 오일을 되게 오래 해왔기 때문에
결과적으로 저희가 아직 3d 그래픽 이론 이라고 해서 거기서 배우고
공부하고 뭐 구현하고 게임 속에 도구 이런 것들이 사실은 그런데 에서
가져온 거였어요
그게 재밌었던 게 3d 그래픽에서 저희가 지금 흔히 쓰는 그런 기법들이
잖아요 크게
길게 보면 거의 50년 60년 7 년에 수학자들이 개발한 것을 저희가
이제 드디어 뭐 3d 하드웨어 있고 뭐 이렇게 돌릴 수가 있어 돌리는 것
뿐이거든요
실제 지금 쓰는 조명 계산이나 이런 것들 보면 굉장히 오래된 주는게
산들이 많아요
그 중요한 거는
그 진한 60 50 뭐 70년 중에 그
하드웨어 개발이 굉장히 드렸던 적이 있었고 그 순간에 이지요 그 어느
정도 뒤부터 갑자기 하드웨어의 발전이 굉장히 빨리 일어난 적이 있어요
이제 그게 제가 봤을때 지난번 콘솔 세대가 그런데 되었거든요
그래서 그 동안의 굉장히 많은 기술을 저희가 접목을 했고 그걸 이제 3d
그래픽에서 많이 아 이용을 했죠
저희가 반드시 3d 그래픽을 얘기하는게 아니라 모 게임 플레이 프로그램
하시는 분들을 보면 길찾기 알고리즘 이라던가 이런 모든 것들이
아 옛날에 개발된 것을 지금 해서 열심히 쓰게 되는 경우도 있고 뭐
aiba 배출이 뭐 기타 뭐 애니메이션 뭐 이런 babu 이런 것들 전부
다 아 사실은 학교 쪽에서 나온 처럼 굉장히 커요 그래서 게임 프로그램
하시다 보면은 어느 순간에는 그런 학교 자료를 올리기 있을 거에요
왜냐하면 은 게임은 언제나 새로운 걸 추구 하니까 아 있게 해줌 이렇게
새로운 걸 해보자 그러면 그걸 어떻게 약 어떻게 구한 해지를 고민할 때
개인이 처음부터 만드는 법도 있지만 당연히 다른 사람이 해는 그런 업무가
있으면 그 거르고 거기서 뭐 필요한 건 받아 오거나 아니면 그 사람이
뭔가를 뭐 엑스페리먼트 실험을 했고 그 결과를 논문 등으로 발표했기
때문에 그 거리 참조해 중 참 좋은 거죠 그건 굉장히 좋은 건데 제가
그때 트위터 있었던 얘기 거였어요
학계에서 가끔 자료로 낼 때 이게 실시간으로 돈다
아니면 이게 정말 뭐 인출해 태우 플레이메이트 라고 된다고 하거든요
실시간 리얼 타임의 고
인터럽트의 플레이트는 아 그 정도 속도 까진 아니어도 그래도 상호작용이
가능한 프라임 정도 일까
뭐 아무리 제제가 실시간 이라고 말했습니다 30일 초에 30g 이
안나오면 cg 가 아니라고 못 보거든요 실제 그게 업계에서 흔히
받아들이는 아 그런
뭐라 그래 통념이 기도하고 그리고 인출 아티브 아까 상호작용이 가능한
그런 프레임 레이트 는
10 프레임 레이트 까지는 줄거 같아요 1초에 10 프레임 인구
업데이트가 가능하면
근데 중요한 것은 이게 학계에서 용어를 굉장히 느슨하게 써요 그리고 왜
그렇게 하는지도 대충 알겠지만
학계에서 일단 느슨하게 쓰는 경우는 자기 홍보 유고 밖에 있다고 봐요
내가 논문을 내면서 이게 실시간으로 본다 라고 하는거 와 7시간을
안된다고 하는거 에 금이 제가 크잖아요
그러면 저는 20 프레임 많더라도 실시간 본다 라고 말하고 싶죠 그리고
어떤 의미에서는 모티 리의 애니메이션 이런 경우에서 사실 솔직히 토니
퍼플레인 tone 프레임만 도는 경우도 있기 때문에 훨씬 시간이라고 말할
수도 있기는 있어요
근데 이제는 컴퓨터그래픽 업계에서 최소한 30 프레임 은 되어야 실시간
이라고 보고
60프레임 까지 돼 주는 걸 바라는 경우도 꽤 있죠 그래서 저는 그거에
대한 불만이 있다 있는데 제가 하고 싶은 말은
학계에서 어떤 자료가 실시간 돈다고 나왔을때
실무자 입장에서 그걸 그냥 곧바로 보고 아 이게
되는구나 라고 게 데모 프로그램 대충 한번 돌려보고 그래 게임의 묻혀
결정을 하지 마시라는 거에요
언제나 함께 나오는 자료는 검증과 검토를 하라는 말씀을 드리고 싶어요
일단 함께 문화가 서로 다른 다른 그런 논문을 뭔가 잘 모실 때 까는
문화는 솔직히 아니에요
오히려 그 것보다 나은 것을 만들어가는 뭐야 지 사실분은 굉장히 좋은 0
생각이라고 저는 생각을 드는데
저희 실무자 입장에서는 아무래도 여기서 실시간 돈다 라고 했으며 저는
믿고 실시간 썼으면 좋잖아요
근데 그게 안 되기 때문에 언제나 그것을 받아 보고 기법을 직접 돌려
보고 심지어는 게임의 노 보고 테스트로 반드시 제대로 청소도 필요없죠
어떻게는 프로타이 마노 보고 그게 정말 논문에서 주저하는 실시간 이 맞는
지를 확인한 뒤에
그게 정말 차기 게임에 도움이 되며 는 또 어떻게 따고 결정을 하라고
말씀드리고 싶어요 제가 이 말씀을 드리는 이유가
채 그랬잖아요 지난 몇 년 동안에 저번 콘솔 그대의 굉장히 많은
하드웨어적 의 발전이 있었고 그렇게 쪽에서 그래서 많은 그래
프로그래머들이 그런 함께 나오는 그런 자료들이 열심히 적용을 하려고 했고
그리고 그런 과정에서 그런 실수를 저지르는 사람들을 많이 봤어요
r 급 되는구나 멋지구나 그래서 그 도입하겠다고 결정을 하고 스토리
받아보니까
크게 안 보는 거야 그럼 그때 아무 생각없이 빼면 되는데 또 사람이란게
일단 결정을 내리고 하겠다고 마음먹은 상에서 중단에 포기하는게 도 어려운
것 같아요 그래서 이미 뭐 아티스트나 도와드리고 하겠다고 말을 해 놨기
때문에 그걸 또 맞추려고 열심히 노력하다가 결과적으로 마취도 못하고
적당히 절반 짜리 구현해 하고 실제 안하느니만 못한 그런 경우도 봤고
그래서 실제 몇 개월 동안 낭비라는 사람들도 받고 프로그래머 중에
그런게 있기 때문에 고무 부분을 좀 한번 언제나 확인을 하고 가시라는
말씀을 드리고 싶었어요
그리고 또 하나 하나 주의해야 될 것은 모일 t5 튜브 프레임 레이트
충분한 경우가 있죠 캠프라인 포 세컨드 만나도 뭐 아
실제 뭐 라이트 맵을 만든다거나 뭐 ao 맵을 만든다거나 이런거는 충분히
속도가 느려도 천천히 뭐라 그러죠 반복하면서 업데이트하면서 괜찮은
뭐 비주얼을 만드는 도움이 될 순 있어요 근데
여기서 또 한가지 주의해야 할게 학계에서 말하는 실시간 은 시체 실시하는
경우도 있어요
초당 30프레임 너는 실시간 근데 여기서 정말 중요한 점은
그것은 말 그대로 그 학교가 논문에서 주장하는 내용을 하는게 실시간 이죠
예를 들어 그래픽의 얘기를 든다면 화면에 그래픽을 그리는 것만이 실시간
이요 1초에 30장을 그리스 정도
근데 게임은 그래픽만 이 아니잖아요 그래서 영화계에 개선할 수 있을지
모르겠지만
게임에서는 이것이 시간 아니에요 실제 ai 로 돌려야 되고 모모
애니메이션 같은것도 업데이트 해줘야 되고 ui 드 그려줘 의 그려 주는거
ui 도 뭐 업데이트 해줘야 되고 몬 오직 따돌려 줘야 되고
이것 저것 저것을 다 합해서 저희는 30 - 나와야 되거든요 그래서
엄밀하게 따지면 모든 일을 쩍 gp 완벽하게 쏟아붓고 c 핏줄에 부하가
전혀 없지 않는 이상은
학계에서 30 프레임의 실시간 이라고 나오는것은 게임에서 곧바로 접목이
거의 불가능해요
그리고 물론 그걸 누가 더 발전시키고 개선시켜 적을 빠르게 만들 수도
있고 그게 저희의 뭐가 될 수도 있죠 진짜 저희가 그런 경우도 있고
근데 제가 지금 드는 한가지 우려는 그 거에요
지난 코스가 이제 굉장히 하드웨어가 발전이 빨랐다 그랬잖아요
그러면 그 발전이 다음 코드를 세대도 이어질 거냐
이미 아니라는게 판명이 같죠 지금 ops 보나 엑스박스 원 정도의
들어가면 하드웨어 수준이 실제 왠만한 컴퓨터보다 못하니까
그럼 일반 사람들의 컴퓨터는 더 발전될 거냐 8 종료 되겠지만 컴퓨터를
그렇게 많이 살까 라는 의심이 되는 거 이제 가면 갈수록 왜냐하면 저두
제가 가지고 내 컴퓨터가 펜티엄 뽀
아니 i7 처음 나왔을때 그 거에요 2008년 2009년 인데 그것도
아직까지 아무 무리 없이 쓰고 있고 실제 뭐 다른 컴퓨터에 쓰더라도
제 컴퓨터가 빠르다는 건 없는데요 ssd 들어간 컴퓨터만 족발을 뿐이죠
그러면 저도 개발자 입장인데 업그레이드할 필요가 없는 못 느끼는데 실제
그냥 컴퓨터를 쓰는 유저 입장에서
진짜 진짜 진짜 하드코어 게이머가 아닌 이상 굳이 목 그래픽카드도 좋은
올라오고 실패로 좋은걸 올라갈까 조금씩 스러워요
그리고 어찌보면 그래픽카드 의 성능도 발전시키는 것도 어느 정도 이제는
좀 느려지고 있고
아 그리고 이제 뭐 그의 그보다는 져 효 적용 이라는 지적이 전력 이런
쪽에 좀 더 노력을 기울이고 있고 그보다 또 굉장히 많은 이제 클라우드
쪽을 기반으로 한 건 서비스가 더 발전하고 있는 상황에서
뭐 그런다고 자 클라우드 게임을 완벽하게 지원 될거라 생각은 하지만 그
쪽에 어떻게는 게임중에 접목이 해서 뭔가 또 뭐라 그래요 cpu 파우더
가져오는 부분이 있겠지만 제가 생각할때 그래피 쪽에서 의 발전은 예전만큼
빠르지 않을 거에요
그러면은 지금부터 역시 리서치 하는 사람들이 또 계속 가터 나갈 거고
저희 시트 실무 했을 수 있는 것은 그만큼 못 따라잡는 경우가 올 수도
있기 때문에
제 생각에는 접어 한 세대에서 아 이거는 우리가 다 할 수 있다는 - 실
가졌다면
요건 세대는 조금 주의하고 약간 뒤로 물러서서
그런걸 좀 더 검증하는 자세가 중요할 것 같다는 생각에서 아 비디오로
만들었고
뭐 이 비디오를 보고 제 트위터에서도 그때 on 그거 였던거 같아요
이미 u 를 보고 제가 학교를 딴다고 생각하시는 분들이 있었어요 그래서
물론 제가 학교를 안 깔 이유도 없고 깔리고 없어요
학대 대통령이 이를 제대로 가지고 멋지게 하시는 분도 있고 저는 그분들이
종교 하고 그 분들 이 해 주신 수많은 일 때문에 제 1도 쉬웠고 그가
금제 게임들 좋게 나오고 는 매우 보았고 그에 비해
또 언어 깨는 똑같이 계산은 언어 깨나 일체 데려간 사람이 10%
미만이라고 좀 학교도 마찬가지라고 봐요 그래서 그만큼 수많은 측정의
자료들이 도 있고 그 수많 쭉정이를 대부분은 보지 않지만 어쩌다가 진짜
멋있게 보이는 데
여태까지 아무도 검증을 아닌데 제가 검증 했는데 극에서 솔직히
핫 놈 물에서 주장하는 것만큼 사실은 아니었다는 게 아 쟤 순으로 발견을
하게 되면은 전화번호 깔 수밖에 없는 거에요 그래서 일단 게임 프로그래머
드 쪽 한테 그리고 다른 실무자 4 하고 있지만 그러나 때 자료가 나왔을
때 100% 믿지 말고 검증을 통해서 확인을 하라고 말씀드리고
학교에 계시는 분들은 그 예전의 생각하던 그런 실시간 하고 인출해 팁으로
에이트 의 개념을 좀 벗어 하셨으면 해요 왜냐하면 이제는 실시간 에
개념이 최소 30 프레임의 나오고 인출할 때 대체로 싶은 씨로 프레임이
나오는게 사실이기 때문에 그 정도의 - 해가지고 좀 용어 정립 을 한번
좀 제대로 했으면 좋겠다 생각을 하고 그러면은
아무래도 서로 피곤한 일이 좀 적어지고 9 9
다른 사람들이 본인을 욕하는 이리저 것이잖아요 다시 그러면 그래서 그런
부분에서 좀 생겨서 쓰는 하고
아
그정도 얘기만 될 것 같아요 뭐 해줄 때 정도는 풀릴 거 같고 그래서
마지막으로 그냥 다시 하고 싶은 말은 학교 쪽 자료로 쓸 때 언제나 좀
한번 검증을 해 보고 쓰시라고
뭐 몇 번 이미 대신 분도 계실 거고 이미 그것을 처음부터 잘 아시는
분도 계실거 지만 그의 경력 많고 실력 지금 그래픽 그런것도 그런 실수를
저지른 것 같기 때문에 우리의 말씀에서 한번 명 만들었구요
예 보프 겠습니다
