소스 컨트롤의 대상 진짜 많이 얘기했는데
아 아마 그 이유가 대부분 이건 것 같아요
그 디스트 리미티드 쏠수 컨트롤 시스템 있잖아요 깃이 라든가 목표를
라던가
그런게 많이 나오면서 이제 게임 쪽 사람들이 많이 고민을 많이 하잖아요
이게 소스 컨트롤을 이제 옮겨야 되냐
뭐 딜 쏠수 관제 시스템이 주는 장점은 가장 큰것을 솔직한 얘기로
오프라인에서 제가 작업을 할 수 있다는 거에요 그래서 어떤 의미에서 보면
은 한 회사에서 다들 모여서 일하는 그런 게임 회사 라면은 소치 이게
이렇게 필요하지는 않아요 그냥 여태까지 썬 머치 포스 를 쓰고 계시면
제일 좋고
그게 아니어도 썩 버전을 써도 크게 문제는 없어요 왜냐하면 은 특히 게임
쪽은
제가 저번에도 뭐 얘기를 한번 깐 것 같지만
바이너리 데이터가 엄청 나거든요 그런 바이너리 데이터의 버전을 1
뭐 컨트롤 할 필요가 없다고 말하는 사람들은 말 그대로 그냥 큰 사람들
분야에서 소스 코드만 있는 분야 니까 필요가 없다는 얘기지
그 사람들 뭐 컴파일한 dll 파일 같은데 필요가 그런 더 전 커처
안에서도 있는 얘기지
그걸 아티스트리 만드는 s 게임에서 크네 3 버전 컨트롤 적용하면
안된다고 마라
그렇게 확대 해석하는 사람들은 그냥 졸라 멍청한 거에요 제가 볼때는 그냥
왜 그 얘기가 나온 지도 모른채 그냥 멍청해서 그냥 그 상황에서 아 원래
이런 버전 커 초에는 바이어를 있는게 아니에요
이런 개소리 하는 거거든요 그거는 타기 소리고
버전 컨트롤 시스템 있는거는 소스 코드나 반열에 가 중요한 게 아니라
그냥 제가 해왔던 작업 그 전에 어떤 작업의 그런 버전들이 1 적용이 된
나야 나중에 뭐 이런 버전에서 이건 왜 고층 다 볼 때도 유용하고 아니면
2.40 돌아갈 때는 이용하고 그 히스토리를 잃지 않는 단계의 중요한
거에요 그래서 이제 어떤 의미에서는 뭐 버전 컨트롤 것이 더 전시
스토리를 뭐 신경치료 둬야 된다 이런 말을 하는 것도 가끔 가다 는 별
의미가 없는 이유가
어차피 50년 된 코드 등 돌아갈 거 아니고 그 때 그 코드를 지금 문제
삼지 않을 정도의 그런
뭐라 그럴까 회 사 람 그니까 이제 그것도 달라요 어떤 시스템을 만들어
내어서 소프트웨어 단계에 따라 다른데 게임은 제가 올 때 십 년 전에
걸로 이렇게 신경 스콧 모든 히스토리를 신경 쓸 이유는 없는 것 같아요
그래서 그런 경우에는 그 히스토리를 뭐지 해 버리더라도 상관 없다는 거죠
더 다시 돌아와서 오늘 하려고 했던 얘기 사실은 파이널데이터 예요
그래서 소스 컨트롤 시스템이 모든 버전 정보를 조작하고 있다는 것은
결과적으로 어딘가 리포트 토리의 데이터베이스의 각 버전마다 의 파일이
들어가 있다고 생각하시면 되요 대체 편해요
근데 모든 파일을 뭐 지금 버전이 해서 빨리 502 로고 버전 투고 왜
필요한 2개 업체 1매 가잖아요
이제 그걸 1 맥아를 보관하려면 뭐 용량이 커질 수도 있으니까 그걸
압축을 할 수도 있고 아니면 그 전 버전에서 그 다음 버전 자 etf 를
저장할 수도 있고 그래서 그런 식의 서모 용량을 줄이는 여러가지가 있어요
그래서 썩 버전 이라던가 퍼피 수라 다만 중앙처리장치 없기 때문에 중앙
컨트롤 시스템이 없기 때문에 서버 에서 다 컨트롤하는 시스템이에요
그런 모든 그 히스토리는 중앙 서버에 있어요 그 중앙 쓰고 용량만 엄청
큼 여는 실토를 몇 만개 몇십만 들쳐 박아도 상관이 없었던 거죠
그리고 클라이언트가 제가 소스코드를 개발할 때 저는 개발할 때 당연히
대부분이 가장 최신 버전에서 개발 할 거 아니에요 그러면 저는 최신버전
파일만 금이 포에서 받았고 하기 때문에 제 용량은 져 어떤 거에요 근데
여기서 이제 d 스트립 위치도 버전 컨트롤 스테미나 온 거죠
디시 라던가 뭐 교열 이런거 그거에 문제는 뭐냐면 이 개념은 가지고 간단
했어요
중앙의 썩어 있죠 제 컴퓨터에 썩어 나 만드는 거에요 그래서 이 두 서로
싸이의 싱크 시키고 저는 작업할 때 요 서버에서 다시 따른 파일 때는
디렉토리로 최신 버전은 뽑아서 작업한 다음에 집어넣고 내 서버에 그렇다
시 따른 중앙 서버로 씽크 시키겠다는 개념이 세포로 직한 얘기를 오후에
dtl 치즈 버전 컨트롤 시스템 이거든요
큰 문제 뭐냐 여기에 아까 서버가 엄청크다 그랬죠
원 테라바이트 제 서버 도 그럴 수가 있어요 싱크 해야 되기 때문에
그래서 바이너리 데이터를 기신 아머 키를 녹기 시작하면 문제가 된다고
얘기하는 게 그런 거였어요 사실은 뭐 일단
자체 알고리즘 자체가 워낙 그 고기 자체가 리눅스 커널 지원하려고
지원하려고 나왔던 거고 뭐 퀼 시작은 어떤건지 모르겠는데 비슷한 개념으로
같고
그렇기 때문에 그 바이너리 데이터를 저장하면 파이널은 디파이 굉장히 쉽지
않거든요 예를 들어서
이미 깍 맥스 그 파일 같은거 아트 파일 만들었어요 그 다음 버전을
만들었어요
텍스트 처럼 이렇게만 한다는 수다나 바뀐게 아니라 바이너리 이렇게 구워
버리는 모든게 바뀔 수도 있거든요
그러면은 그 디프 라는 것 자체가 100 개념이 없으니까 그 별로 용량을
줄이지 못할 수가 있어요
지금 반시 매가 다음 8시 매가 아무리 압축하고 별 지랄 해봐야 18매
가로 최고 들어올 수도 있다구요
그러면 그게 쌓이다 보면 버전 1000개 마사지 기가바이트 놓고 달리
가는 거거든요
그 문제는 그 거에요 그래서 기대서 바 있는 놓지 마라 라고 얜 안게
거에요
뭐 필요 2 치마 나온게 뭐 큐를 또 내부 소장이 뒤풀이 반출한 이때는
뭐 또 느려지고 복잡하고 이런게 있었고 그래서 이제 근대 뭐 께 일 좀
했을 때는 안할 수가 없잖아 바이너리가 버전 분출 안에 않을 수 없잖아요
무슨 거기서 및 코맨드 현 이라고 무슨 들어 박스를 써 같고 다른 폴더
했고 정션 떠 같고 뭐 조금 만들어서 컨트롤박스 에서 관리하고 많이
흘리게 있는데
소스 컨트롤 시스템은 솔직한 일어 하나가 될 좋은거예요
왜 그 내가 게임 만들때 필요한 모든 sc 코드가 들어가는 그
프로젝트에서 버전 컨트롤 여러개 놓으면 그 서로간의 싱크 하기도 귀찮고
물러 시카는 법은 있어요
내가 지금 코드에서는 얻자 코드 쓰고 있는데
ss 오늘자 sc 아 근데 어디 그 오늘 짝 코드 들어간 것에 3
바뀌었고 있거나 c 바꿔 따거나 결국에는 모든 보는 시각 모든 버전이
같이 올라가야만 개발이 히어 지거든요
그래서 큰 회사들 같은데 보면 은 그냥 너 최고의 버전 컨트롤 시스템
사용 어퍼 포수 같은거 그래서 중앙 처리 해 왔고 모든 버전 야
포에타 나의 다 봐서 그래요 아아 페이스북 2 그래요 페이스북 또 뭐
키를 전부다 가요
전체 회사 코드가 우리 통 하나에 들어가는 전 알고 있어요
이제 뭐 그렇게 갖고 자기 자리 날은 회사도 있어요 그건 이제 말 그대로
미포 문제가 아니라 아이가 그렇게 올 보는게 아니라 제가 볼때는 귀신아
머큐리 걸 지원자 못할 때나 하는거고
그래 이제 끝나 높기 때문에 합쳐도 다른 스크립트 짧고 이걸 또 자기
클라이언트의 돌라고 합치고 이런 난리를 치는 거죠
모든 간의 게임을 만드신다면 제가 추천하고 싶은 명분 이 거에요
어 뒤뚱 이 더 저니 있고 먹 필요할 됐는데 긷지 원 아직 조금 유리한
것 같고 깃은 아직도 퓨어 리스트 자세가 돼 강해서 안 되게 많아서
머큐리얼 근데 기승 또 비주얼스튜디오 지원하기 때문에 서기를 솔직히 쓰긴
써야 되는데
뒤쪽은 제가 안 써 봤어요 근데 똑같은 익스텐션 이 있긴 있어요
뭐 키로 에서 보면은 라지 빨리 익스텐션 이 있거든요 그거 를 쓰라고 해
드리고 싶어요 왜냐하면 모바 이너비 파이어 던가 용량이 어느정도 큰
파일들은 그냥 옛날처럼 써라 이게 전부에요 그러니까 소스 코드를 집어
넣을 때는 모든 버전이 있고 그체 코드 제 개인 컴퓨터에 서버를 시켜야
돼요 그럼 그 건은 용량이 올라온 그니까 뭐 디스트로이어 있는거죠 근데
어둠은 파일 이상 크기가 돼 빠이 어느 정도 크게 이상이 되는 파일
이거나 바이너리 파일 다 컴퓨터 가능하고요
그거를 하면 그거는 최신 버전만 바라고 있다는 거예요 씽크 를 할 때
가장 최신 버전 받았고 제 로컬 서버 있는 넣고 예전에 있던 그건
테라바이트 한다 없는 거죠
그것만 쓰다가 만약 익었고 과거 버지와 돌아가야 된다
그럼 그 때는 올라 이런것도 있어요 근데 이제 뭐
한마디로 약간의 중단 단계 줘 바이너리 는 어쩔 때는 이렇게 뭐 볼거
전보다 돌아가려면 온라인 연결돼 있어야 되고 그거 아니면 녹화해서 자
이렇게 쓸 수 있고 파이널을 체크인할때 도 재밌어요 바이널 체크인 할
때는
재료 칼 서버에 그 시트로 남아요 왜냐면 제가 체크 했던거 고제 감을
돌아갈 이 더 많을 테니까
그래서 그건 이제 뭐 템포러리 폴더를 지정해 너 거기 이제 직원은 보기
있거든요
그럼 그 건은 제 개인 컴퓨터에 저장돼 있고 신카 만 당연히 서버 잔다
가지고 있고
근데 만약에 따른 사람이 그 제가 논거를 받아가면 그 사람의 역시도 최고
버전 제일 예뻐 전 받게 되고 그래서 라지 파이스 션 이란게 있구요
뭐 교회에서는 아 비법 개선 지원하고 현재 지원하는 데 킬른 이 지원하는
걸로 알고 있고 자기 스스로 뭐 필요하면 당연히 펴 복지원 알 수 있고요
클라이언트 sdx 전인 앱을 해줘야 되고요
식도 똑같은게 나오게 했어요 있는데 지금 썩어질 않았어요 저희 회사에서
요즘 뭐 어떤 폰에 타라는 이미지 빨리 되게 많대요 그림이미지 fr
그 그저 ea 한명이 추천해달라고 해서 뭐 이것저것 얘기 해 왔는데 제가
얘기한 거는
버전 컨트롤 하러 가는게 젤 받고 뭐 필요해서 이런게 있었고 아 bs
분명히 있을 거다 그러니까 그걸 제일 먼저 한번 살펴봐라
살며 받더라구요 이 끼니 때 요 테스트 해보게 때요 그래서 제가 제
테스트 안해봤지만
뭐 필요를 쓰시는 분들은 특히 이라거나 해서 값지게 3 하시는 분들이 는
그건 해보셔야 될 것 같아요 대 한 가지 아쉬운 분은 킬러는 중용 까지가
무려 고 빛 그 빚 빨리 테일 지원한 이거 좋구요
단지 단점은
뭐야 제 내가 전환 한다는거
그 비법 개 것도 6명이나 닿으면 까지 공짜나 요건 좀 아쉽고
아니면 말도 안되게 비주얼 스튜디오가 하고 기계다 처음부터 있는데 아직
거기 빗발이 텐션 자체가
안 되어 있는 것 같아요 비쥬얼 때 온라인에 그래서 저는 그게 tfs
자체가 마나피 큰 파일을 잘 처리 하니까 골조 믿게 활성화 이내에 보
시켜 줄 꺼라 생각했는데 아직 안 해준 것 같고
아 뭐 좀 더 따지면 되긴 되겠죠 이제
요즘은 저도 코드를 많이 짜면 디젤 스테 온라인에 많이 드는 편이거든요
왜냐하면 은 용량 무제 아니고 뭐 빠르고 로 마이크로소프트 자체가 좀
서버 갔다옴 데리 다른데보다 적어서 예
그 비디오 수도 연등 * 너무 잘되있고 그러고 있는데 어쨌든
머큐리얼 쓰시는 분들은 예 그리고 즉 있으신 분들은 라즈베리 스테이션
생각해보세요
그 특히 이제 게임 개발자 하시는 분들 바이너리 데이터 많은 분들
코드만 많은 분들은 걱정 안하셔도 되요 있는 것 그대로 쓰시면 되고 원래
기승
그거는 잘되니까 아직 그정도 음 에 뽑혔습니다
