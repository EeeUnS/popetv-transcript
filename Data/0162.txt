네 안녕하세요 포프 입니다 예
제가
어 저번에 이어 콕 바로 또 이걸 쉬지 않고 소프트에 만들고 있어요 진짜
이런게 오랜만인데
음 드디어 시간이 남고 겠죠
인간처럼 살아보자 라고 이러고 있는데
날씨가 갑자기 안 좋아지고 있어요 안 그 거에요 그래서 좋은 실버 고치고
비올때 조작할 때
시간이 남녀 누구나 생각하고 있고
오늘은 으 익셉션 얘기를 좀 해 볼 거 같아요 음
jk 각 제가 예전에 이 사실을 얘기한 적이 있는지 없는 지 모르겠어요
제가 이제
개인적으로 익셉셔널 남용하는 것 되게 안 좋아하거든요
뭐 그 이유를 써 발 했었나 기억이 안나는데
뭐 안했다면 제품이 남들이 3 요금제 다시 말아서 갈 텐데 그 중요한
것은
익셉션
일단 뭐 제가 이 설정한 좋아하는 이유 몇가지 들면 사실은 예전에 제가
안좋아하는 이유로 전에 계속 뭔가 뭔가 맘에 걸려서 되기 살짝 핸들링을
이렇게 안 좋아했는데 익셉션 자체도 이렇게 안좋아했는데
어 그거를 한참 생각을 하다가 예전에 이야기 하긴 했구나 했네요
그 좋을 스포츠 스키 그 아저씨가 쓴 블로그를 보고 앞에 생각과 되게
비슷하고 나는 거 알면서 접어 좀 더 체계적으로 정리되어 있는 걸 보고
아이덴 아 이래서 좀더 싫어한 거구나 라는 걸 좀 더 느꼈고
내가 이 섹션이 반드시 필요한 경우가 있다는 것도 알아요 왜냐하면 은 이
코드 자체가 내가 소유한 코드가 아닐때
예를 들어서 뭐 어떤 파트 라이브러리에서 xp 로 던진 하거나 아니면 은
예를 들어서 해 뭐야
뭐 파일아이 오나 뭐 이런거 할때 정말 제가 어떻게 컨트롤 하면서 할 수
없는 상황에서 뭔가 페이를 해 버릴 때가 있잖아요
그럴 때는 리셉션에 들어오는데 그럼 그것을 과연 어떻게 처리 해야 되느냐
라는 게 중요한 것 같아요
그래서 뭐
그냥 익셉션 에 대한 이해가 없이 걸 대충 쓰시는 분들
저도 이해가 확실하다고 생각하진 않는데 잘 안쓰니까
그런 분들은 그냥 대충 있어 좀 핸들링을 해 버려요 예전의 그 그 누구지
위험 천시 ce 용 책임이라고 했구요 영춘 이미 했었던 말처럼 저한테
개인적으로
차라리 서버가 돌다가 이국적인 하면 그때 클래식 않아 면은 그때 고칠 수
라도 있는데 이걸 일전 핸들링 약 그냥 대충 막 어떻게 돌리게 됩니다
보니까 나중에 한참 지나서 뻗어 버리는 거예요 그러면 이게 뻗어 쓸 때
그 당시에 뭐 덤프 나온거 에도 이런 처음에 있던 문제가 나오는 것도
아니고
5 콜 스택 이 제대로 있는것도 아니고 하고 한마디 디버깅 정보가 없어
디버거 더 힘들어 진다는 얘기가 있거든요
굉장히 맞는 얘기에요 그래서 저희 섹션 핸들링을 그게 굉장히 좀 많지
않았어요 왜냐하면
개 그 아이디어 자체는 굉장히 좋은 아이디어 인데
언어에서 그걸 지원을 굉장히 이상하게 해서 제대로 쓰기도 어렵고
어찌 보면은 개념적으로 사람들이 쉽게 생각할 수 있는 그런
뭐라 그럴까 순차적인 9조제 아니에요 왜냐하면 은 예전에 한창 입사시험
처음 나오고 막 그 3 병어 새로운게 있다고 나며 오락이 시작할 때는
보이드 함수 있잖아요 m 난 값이 없는 함수 아니면은
뭐 예전 언어들은 바 나가서 하나에서 못한 경우가 많았으니까
그런 경우에 반환값을 더 많이 하려면 함수 내부에서
익셉셔널 던져버린 다음에 그걸 호출될 때 커버에서 그것을 캐치를 해왔고
그 리턴값을 받았고 처리는 그런 기괴한 패턴까지 나온 적이 있었거든요
몰라 아직도 쓰는 사람이 있어요 그렇게 쓰시는분들 쓰지 마세요 그거 정말
잘못 음악 목 이에요
그 그러니까 이 패션의 문제가 크게 뭐냐면은 제가 직접 그 함수의 코드를
땀 오지 않는 어떤 일종의 단절이 된 찾기가 너무 힘들었던 거에요
그리고 그러고 보면은 코드 이렇게 호출 한다면 아 여기서 이런 1세 도발
발생할 수 있는데 이거를 처리해야 되는 것도 생각을 해야 되고 함수 호출
할 때마다
처리할 때도 과연 이게 올바로 천연 거냐 많이 나는것도 고민을 하게 되요
어떤 경우에는 이 섹션을 당연히 예측을 하고 이런 익숙해졌을 때 아무
문제없이 처리해 갖고 폭 안겨 돌게 해야 되는 경우도 있고 어떤 경우에는
것 로깅을 쏜 다음에 그런 뭐 아예 프로그램을 뻥 나게 만드는 경우도
있고 여러가지 예상이 존재가 하는거예요 그래서 뭐 뭐 좋을 스포츠 스키
아저씨 같은 경우는
자기네 익셉션 보다는 에러 코드가 좋다
그래서 이제 옛날 씨 하 스타일의 함수 보면은 인셉션 없고 에러코드
반환하고 마지막에 라가 뭐든지 보는 이런 방식이 있잖아요 저는 그 방식이
좋다고 생각하는 이는 뭐냐면
함수 시그널 책을 보는 것만으로도 에러 코드가 온다는 걸 알잖아요
그러면 그 에러 코드를 가지고 어떻게 처리해야 할지 생각을 할 수가
있어요 훨씬
함 수송을 따 보지 않아도 알 수가 있어요 뭔가 뭔가를 대비해야 한다는
것을
근데 익셉션 같은거는 함수 c 그렇지만 보고서로 왠만한 알 수가 없으니까
물론 자바는 예 왜요 하지만 모자반 주거가 너니까
이렇게 그렇고 그래서 그게 문제였는데
어쨌든 간에 뭐 4시에 돌아와서 익셉션 어떻게 핸들링 하는게 좋은걸
열심히 찾아 봤어요 근데 정말
찾다보니까 문제는 그 거더라구요 익셉션 어떻게 처리하는게 중요한 게
아니었어요
익셉션 이 났을 때 그 익셉션 이 나든 말든 현재 프로그램의 상태가
고장이 나지 않는걸 중요한거 같더라구요 그래서 이렇게 많은 문헌들을
찾아보면 뭐 이 기사도 핸들링 이런 것도 있지만 또 다른 그 뭐라 그러지
아 문헌을 보다보면 위키피디아 한 페이지 더 있는걸로 알고 있어요
그 익셉션 세이프 아 프로그램인가 ep 3
익셉션 세이프 핸들링과 그런 얘기가 있어야 프로그램인 것 같은데
한마디로 뭐냐면 코드가 진행 중에 한줄한줄 진행이 되잖아요 그럼 여기가
이슈 순이 났을 때도 이게 뻗어 뜬 처리를 하든 떠나서 현재 바꾸려고 한
상태가 있잖아요 오브젝트 올해 프로그래머처럼 상태를 바꾸는 게 주목적인
이까 그 상태가 예전 상태 더 망가지지 않아야 되는 그런 그런 책 뭐라
그럴까
아 원칙이 있어 원칙이 니까 이틀 쇼 1 던지는 코드 짤 때 어느 순간에
전편 하더라도 그 익셉션 에 문제가 없이 코드는 그냥 상태가 변하지
말아야 된다 아까 상태에 문제가 없어야 된다
그랬을 때 만약에 일정이 위로 올라갔을 때 누가 처리를 하더라도 내부
상태가 바뀌지 않으니까 그 원하지 않는 결론 안 나온다는 거죠
근데 문제는 이게 정말 아기가 어려움
그 보라지 완벽한 100% 이루게 진짜 어려운 것 같아요 특히나 이제 뭐
10불 뿔은 가능하다고 하는데 시작 같은 경우에는
익셉션 인해 프로그래밍 안에서 만나는게 아니라 내 프로그램 왜 외부에는
컨텐츠를 낮고 들어오기도 한데요 제가 그런 선 보지를 못했는데 그 읽다가
봤어요
그런 상황까지 오면은 내 코드 기반 이 아니고 내가 쓴 라이벌 기반도
아니고 내 키스에 나 버리는 것을 제가 어떻게 하라고
이런 그게 이제 시세 없는 되게 어렵다 c 플러스 는 차라리 가능했는데
그런 쉽진 않았다 라는 게 뭐 실제 마이크로소프트의 있는 굉장히 유명하신
분 도 있어요 좀 제 까먹었는데 중국계 사역 사람인 것 같은데
그분도 이제 그런 얘기 했었고 좋을 도 그런 얘기를 했었고
근데 문제는 현재 이제 웹 개발자들이 굉장히 테고 플럼 않은 관계로 그
사람들이 익셉셔널 되게 신봉 오라고 좋아하긴 해요
4 제가 이 섹션을 나니 요즘 쓴 결과 회사에서
진짜 제대로 있었죠 핸들링 한 사람 별로 못 받고 보니 제대로 하려고
했어 이렇게 놓치는 게 되게 많아요
확실히 쉬운 건 아니고 그래서 이런 가면 갈수록 저는 어 뭐 아직 책으로
만들지 않았는데 사실은 마이크로소프트 코드 컨트랙트 라는게 그걸 좀
해줘야 되는거 같은데 아직 완벽히 완성이 안된 그런 라이브러리 라
나중에 뭐 좀 더 얘기를 제가 하겠구요 그래서 그게 없는 상황에 생략
배포 하나 만들어서 디버그 사랑에서 잘 없어 틀을 놓았고 중간에 그냥
멈추게 만들고
아 뭐라 그러지
아 밀리 시설에서 없어 틀을 감촉이 섹션으로 바꾸는 방향을 생각을 하는데
그 쉽진 않더라고요
모시 샵이나 시프 같은거는 이제 xa 날 때 프로그램 브레이크 포인트를
걸어 주는 그런 디버거 틈도 있게 하잖아요
그건 나쁘진 않은데
그 코드 기반이 방대해 지면 썬루프 트라이벌 쓰는거 보면 마켓에서
밝혔지만 던지 그러다보면 은
거기 막 브로컬리 하는 앞으로 적어도 b 찾구 차례 코드 레벨에서 정말
디버그 릴리스 갈리면서 없어 to 디버그 앱의 익셉션 으로 바꿔주는
그러고 나쁘지 않다고 생각을 해요
하지만 제가 솔직히 생각하는것은
익셉션 은 정말 안 쓰고도 코드가 될수 있다는 안쓰는데 좋은거 같아요
최대한 안 쓰고 왜 라 코드를 처리하는 모를 처리 하든간에
뭐 예를 들어서 씻어 또 그 그런거 있잖아요
잉태 접할수 할 때 인 트 답할 수가 있고
인 트 가 트라이 팔 수가 있어요 인트라 팔순을 뭐 하는 거에요 는 뭐
스트링을 이제
문 나무 짜이 숫자로 바꿔 주려고 하다가 그게 많이 리스트 이니 뭐 따른
문자 요구하고 에러가 나는 경우 익셉셔널 먼저 요
현재는 8 사다가 있으면 캐치하고 작업해야 되는거고 트라이 팔 수는 이제
리턴값을 불리언 이에요 팔수가 상공 아니지 아니지 불면을 반응해 주고
패러 미터는 9패로 밑으로 해서 제가 인티 절로 주거든요
까 한마디로 이거는 날들 에러코드 비슷한 개념이죠
그래서 그렇게 쓰는 시대 또 좀 더 빠르기도 하고 익셉션 핸들링이 또 좀
비싼거 기도 하니까
그리고 코드를 보는 순간 아트 라이프 불륜을 봐야 하니까 여기 불리언
가지고 성공해야 아니라서 뭐를 해야 겠구나 한게 딱 감이 오거든요
코드 리더 * 좀 좋아지고 그러 지 샵이나 이런것들도 이제 점점 이
텐션이 없는 버전을 많이 만드는것 같아요 그런 내부 함수 전섭 함수
쪽에서 그래서 저는 굉장히 바람직한 방향이라고 보고
어 뭐 그래도 아까 말똥이 센 세 이 코드를 짜는 것은 굉장히 좋은
합니다
백퍼 짜는게 아니라 그거에 대한 생각을 하면 코드를 짜는 거 되게 좋은거
같아요 내가 이렇게 어떤 상태를 슬 핑 하고 파일이 있는데 이 파일이 뺄
수가 있는 거에요 그러면 어법 쌀 뺄수가 거 미터나 해버리면 이 상태가
바뀐 있잖아요 그럼 이 상태를 빨래 다 읽고 나서 이게 메모리 올라온
다음에 그 다음에 처리해주고
그러나 으로 메모리 드셔도 있을 수 있겠지만 아니면은 그게 빼 일할 경우
모처럼 캣츠 잡아볼 원래 상태로 둘러주고 바나나는
이런 생각을 해봄 필요 있는거죠 과연 이 코드가 여긴 때라면 져 코드가
어제 때라면 내가 이 폭은 상태가 어떻게 되느냐
이정도 생각은
어느 정도 해주는게 좋아요 시리즈 근데 뭐 이게
말도 모 은행 저 라던가 뭐 회사 쪽이 라던가 이러면 정말 힘들게 생각을
해보고 100% 맞추기 위해
그 게 아 니 라 모 게임 쪽이나 약간 좀 가끔 풀려 되는 부분 있잖아요
그런 부분에서는
완벽히 100% 는 아니어도 아무 정도까지 생각하면서 코드를 좀 짤 수
있어야 되지 않을까 생각이 들어요
그리고 막 제가 요즘 막 회사에서 돈이 상아 코드 중에 좀 실려 가면서
코드는 어떠냐 면
익셉션 어디서 발생하는 길이 개념도 없고
그리고 뭐 2편 어떻게 쳐야 되는지도 모르고 그러니까 아예
그리고 1조 한번 딱고 시험중에 그러니까 아예 그
웹의 잎의 후추 자체의 전부 에 트라이 캐치 건 다음에 처음부터 끝까지
밑에 이틀전 캣츠 하고야 m
5 502 라던가 뭐 심지어는 ok 발언을 받고 웹 퀘스트에서
그런거면 좀 있게 한 심하죠 뭐냐면은
오잉 깨져 사랑하는데 일종의 걸릴 욕 아무도 없고 입니다 없을 거에요
모인 ta 하는데 걸린 경우도 없고 예보 대출 한도 왠만 스위트 좀 걸릴
경우 같거든요
결과적으론 있으신 나는 경우는 db 그거 때나 빨 그거 때나 따라 웹
호출 할 때다
아니면 정말 뭔가 포대 대상 할 할 때 2배 개인데
그외 뷔페 날씨가 없나 라는 2 특전 이거 한다고 생각하면 되는 거거든요
근데 그거 생각하라고 그냐 이게 빠르고 편하니까 모두 낮추라 있겠지
익셉션 핸들링 하면은 나중에 이 패션 나도
제가 어디서 하는지도 알게 되신 들고 코드 얘기를 괴로워 지고
로그인도 안하고 그래서
차라리 객석 나고 또 로 해버리고 왼손을
까 로깅 할 로 기자단 로고가 있다면 스로우 해버리고 그리스전 메세지를
그 디버그 모드가 차례 화면에서 보는 게 편 어머니를 부러져서
그리고 이제 릴리스 모드 에서는 꺼버릴 수 있으니까 벅시 못했어요
그런것도 생각이 없고 그냥
코드의 다 돌게 만들자 트라이크 직급 이런 그 자체가 굉장히
제가 본 프로그래머는 아니고 그러면 거의 스크립트 정보 짜면서 이게 뭐
하는
이제 1명 정도가 아닌가 뭘 코드가 어떻게 도움이 신경 안 홀딱 돌게 한
만들자
나중에 이게 문제가 되든 말든 나는 신경 안쓰고 쌓은 사람이 못 고치게
개 장 일 수도 있고
좀 그런거 보면 조금 어느새
쪼 그래서
제가 예전에 한번 그 어떤 프로그램 한테 바깥 자기 좋은 프로라면 되고
싶다 라고 얘기하는 사람한테 말해 준 적이 있어요
좋은 프로그래머가 되려면 이 코드 한줄 한줄의
이유가 있어야 된다고 그 누군가 와서 이 코드 왜 이렇게 짰어요 라고
얘기했을 때 자기만의 이유가 있어야 되요
나는 이래서 이렇게 짰다 그게 틀니가 올 트는 뭐 중요한 건 아니에요
사실 우리가 사람마다 철학의 다라고
사람마다 추구하는 게 달라요 내가 옳다고 믿는 게 달라요 저는 뭐 이익이
편하고
아 뭐라 그러지 좀 단순한 코드를 되게 좋아하는 반면에 어떤 사람들은
굉장히 아키텍쳐 잘되어 있고 막 나중에 이렇게 막 천만 양에게 하고
그렇게 뭐 뭐라 그러지 익스텐션 할 수 있는가 확장할 수 있는 그런것도
중요시 한 사람도 있어요
저는 앞으로 5년 정도로 바라고 코딩하는 사람이고 그래서 그런거에 따라
코딩 처럼 달라지고 모르게 달라지는데
최소한 이 코드를 누군가 보러 갔을 때 내가 요한 주는 이래서 이렇게 짜
따라 라고 얘기할 수 있는 사람이나 좋은 프로그래머가 될 수 있다고
생각해요
제가 심지어는 그런 얘기 꺼내면 이상한 거 보면 뭐가 입고도 웰비 좋냐고
그럼 아
원래부터 그 다음 데이터 코드 그냥 비슷하겠다 따라오는 거야 그러면 결국
잘못된 거라고 가 잘못된 코드 봤으면 고치는게 프로그래머 거냐 사실을
그리고 아니면 그게 틀렸다는 걸 알지만 이게 의해서 했다 라고 말할 수
있는 점도 중요하다 이거 뭐 당장 급해서 라던가 이런 이유가 있어야
하는데 그게 없자 원래 그런 코드가 있었어 내 코드 아니야
이런걸로 되게 문제가 있다고 제가 터치 한 부분은 레코드가 아니어도
코드가 문제였을 멈춰 한다고 보거든요 어느 정도까지
아니 가 모압 당장 윌리스가 얘기해서 먹고 철수 라는 것도 괜찮은 방법
인데 전혀 그런거 없이 내 포드 아니야 원래 그런 것을 보는 거야 다
보고 베껴 써
정말 좋은 프로가 넓다는 것 같고
그 코드 한줄 한줄의 제가 설명을 해야 한다 해보면 은 또 하나 문제가
뭐냐면
별로 안좋은 프로그래머들이 보면은 코드 스타일이 막 중구난방이 에요
여기서는 뭐 이렇게 쓰고 영상 저렇게도 전혀 상반되는 방식으로
정권은 한마디로 자기 철학이 없다는 거죠 아예 그냥 이때는 이럴수가
저렇게 써 없을 때는 죄고 싶다 이렇게 쓰고
둘중에 하나가 좀 상반되는 스카이림 하나도 안 좋은 스타일 수 있거든요
물어보면 은
아 그냥 그렇게 써 종 모양 그렇게 써 이거 나도 자기 혼자 통통 일을
못 시키는 데 무슨 남하고 코드를 어떻게 짜고 남코 들 어떻게 고치 보고
이 사람들이 무슨 인터 및 일이 좀 시녀가 될 거예요
그런것도 좀 많이 받고 뭐 이케 쪼 1
핸들링 여기서 여기까지 왔는데
중요한 것은 아까 말씀 드리면 익셉션 이라도
문제가 없을 수 있는 코드를 만들려고 생각 정도로 해보는 거 좋은 거
아냐
그 정도로 그 마무리 하죠 예 뽑혔습니다
