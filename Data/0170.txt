포프입니다. 음~
저번주에 회사에서
소프트웨어 아키덱트 클래스를 보내줬었어요.
제가 가려고 했던건 아니고
갑자기 CTO가 부킹 다 해놓고 가라고 해서 갔는데
그... 클래스 차제는 제가 별로..
나쁜 클래스는 아닌데..
제가 생각했던 것 보다 수준이 낮았고
쓸데없는 이야기를 길게해서 시간 낭비라는 생각을 많이 했는데
뭐... 배워온 것은 기술적으로 하나(1개)...?
그리고 개인적으로
개인적으로 또 하나 느끼고 온게 있다면..
제가 이번에 회사에서 큰 프로젝트를 하면서
좀 말도안되는 스케쥴에 말도안되는 그런.. 피처가 나와서
이거 끝내려면 절대 PM을 못믿겠구나 싶어서 제가
마음대로 프로젝트 돌려서 끝낸게 있거든요.
15명? 20명? 이상 돌려서 우리 프로그래밍팀만..
그러면서 저는 문제 없이 끝내줬고
저는 당연히 이렇게 돌리는게 맞게 돌리는 방법이라고 생각하고 언제나 살아왔지만
뭐.. 그렇게 돌리는 사람을 별로 본적은 없었어요.
그런데.. 이 강의하는 사람도 굉장히 유명한 사람이에요.
닷넷에.. 음.. 어찌보면.. 다음 기수.. 닷넷 말고 그 차세대..
그... 테크의 디자인에 참여했던 사람이고
WCF라는거예요
다음이 될지 안될지 잘 모르겠지만 어쨋든간에
WCF 자체는... 기능은 굉장이 좋더라구요.
그거 디자인 처음 했던 사람이고 무슨...
여태까지 맡았던 프로젝트 전부 다 뭐.. 일정안에 무리없이 버젯(budget) 안에 끝냈던 그런 사람이고..
그 사람이 프로젝트를 돌리는 방식이 제가 돌리는 방식과 되게 비슷해요.. 그러니까~
소프트웨어 아키텍트는 프로젝트 매니징까지도 어느정도 들어가야 되고
그리고.. 뭐.. 여러가지 있어요. 보면서 그냥 내가 돌리는 방식이 맞았구나라는 확인을 할 수 있는게 있었고..
저희 회사에서 굉장히 반발이 심했었지만...
어..그래서 그런걸 얻은건 좋은건데 여기서...
나온 이야기중에 몇가지 재미있는게 있어요 그래서..
음..제가 원래부터 생각했던거에.. 음 뭐랄까~
확신을.. 확신이 아니라.. 역시 내가 생각하던거에 역시 똑같이 생각하는 사람이 있구나
그리고 이 사람도 성공적인 사람이구나라는 것에 대한
그런 만족감? 확신? 약간의 확신?
그런 것도 있고! 전혀 생각지도 못했던 거에 대한..
음.. 그런것도 한두가지 있었고.. 그래서 그런것을 좀.. 이야기를 할 것 같아요. 단지 오늘뿐만 아니라..
몇번을 좀 이야기할 것 같은데.. 음...
첫번째 이제.. 이사람이 진짜 재미있었던게 뭐였냐면
제가 예전부터 누누히 말하잖아요
누누히 말했나? 말했자나요~ 
저.. 익셉션 핸들링 되게 안좋다고..
뭔가..
문제가 있는 것 같다고.. 
그러면서 예전에 한번 비디오에서는..
그 대신에 익셉션 세이프 프로그래밍을 해라
익셉션이 어느 상황에서 발생을 해도..
그 프로그램이 오동작이 안나게 하기 위해서
프로그램 안정적으로 짜는 거라는게
'생각은 해볼 필요가 있다 그런데.. 그렇게하기가 너무 너무 힘들다' 라는 이야기를 했어요
이사람은 되게 재미있었던게 뭐냐면..
딱 그렇게 말해요. 익셉션이.. 예를 들어 DB 커넥션에서 익셉션이 나거나~
파일을 읽다가 익셉션이 나는 것은 익셉션이 날 수도 있어요. 그런건 당연히 처리를 해줘야 되는 것은 맞는데..
개인.. 그러니까 내가 만든 서비스안에서 익셉션이 나는 경우가 있잖아요... 그러면은~
이 사람은 익셉션 마스킹을 하라고 그래요.. 
무슨 이야기냐면..
익셉션이 나는 순간..
이미 상태가 유지가 된다는 것은 불가능 하다는 거예요..
그러니까 이미 익셉션이 났는데..
그 익셉션을 핸들링 멋지게해서 그대로 프로그램을 실행시키면..
그 다음 단계에서.. 그.. 뭐 .. 오브젝트에서 익셉션이 났다 그러면..
그 오브젝트를 접근을 하려고하면 이미 이 오브젝트를 가지고 있는 정보는 가비지고 이미 실패한건데..
거기서 뭔가를 돌린다는 것 자체가 말이 안된다는 거예요.. 그래서~
익셉션 자체가 난 경우에는 이미 그 자체를
그.. 뭐라그래~ 프로그램이 뻗는 수준까진 아닌데.. 
이사람은~ 그 자체가 큰 에러라고..
프로그램 실행 자체가 연속이 되면 안된다라고 이야기를 해요..
그런 개념~? 을 제대로 잡아놓은게 바로 WCP.. CF라는 그런 테크에 굉장히 그 개념이 굉장히 잘 잡혀있어요
물론.. 제가 볼 땐 컨피그레이션을 일일히 켜줘야되는 것 같긴한데.. 기본동작이 아니라.. 그건 좀 마음에 안들지만
어쨋든 익셉션이 나는 순간~ 그 오브젝트는 더 이상 접근자체가 안되는 식으로 그렇게 되어있어요
접근하면 곧바로 또 다른 익셉션이 나가지고 애초 실행이 안되도록 되어있죠.
그 사람이 말하는 것 첫번째는..
익셉션이 나는 순간. 그것을 익셉션 세이프하게 프로그래밍 한다는 것 자체는.. 거의 불가능하고..
그리고.. 이미 그 오퍼레이션 자체에 익셉션이 났는데..
그 오퍼레이션이 제대로 돌았다는 가정하에 다음 코드를 실행하는 것 자체가 말도 안되는 소리다
그래서 익셉션이 나는 순간.. 모든 것은 그냥.. 깨져야된다라는 개념이었고
두번째는 익셉션 그...
마스킹이라는 건데.. 이거 뭐 위키피아에서 쳐보면 나와요
그런데 이게 개념이 뭐냐면 예전같은 경우에 익셉션 핸들링하는 사람들은 대부분 익셉션이 난 경우에
익셉션을 throw해가지고 젤 위까지 throw 해서~
그.. 젤 위에서 그.. 익셉션을 누가 핸들링 하던 말던 마음데로 해라! 이거였자나요~
내 서비스 자체에서 익셉션이 나면.. 
그런데 이사람 말은 아까 말했듯이~
내 서비스에서 익셉션이 나는 순간 이미 모든 것은 망가졌고~
그것을 위에~ 그러니까 나를 호출하는 사람이 그거를 처리해준다고 생각하는 것 자체가 말도 안되고~
걔가 처리해줄수도 없고 내 내부를 보지않고 어떻게 처리하냐고...  그래서~
그런 상황에서는 차라리..
내부에서.. 그러니까 내 서비스 안에 있잖아요~
내 라이브러리면 라이브러리 안에서..
익셉션을 아예 try~ catch를 해버리고..
그러고 반환할 때는 내 익셉션 정보를 반환하는 것이 아니라 익셉션이 발생했다~
그래서 뭐 Bad 익셉션.. 뭐 이런식으로 익셉션이 발생했다. 이 딱 한가지! 딱 한가지 익셉션 메세지만 반환하는거에요~
그래서 익셉션이 발생해서 오퍼레이션을 끝내지 못했다
그럼 위에 사람은 무슨 익셉션이 났는지도 모르고..
그래서 처리도 못하고~ 그냥 그 상태에서 뻗으라고..
하지만...
이걸 디버깅은 해야되잖아요~
그런 경우에는.. 익셉션 내부에서 난 경우에 익셉션을 로깅은 해야된다는 거예요.. 그래서~
익셉션이 난 경우에~ 실제 자세한 익셉션 정보를 내부 로그 서버에 로깅을 하고~
내 서비스를 호출하는 그런.. 위에 콜러(caller, 호출자) 한테는 무조건~
'익셉션이 발생했고 그래서 더 이상 진행할 수 없다' 라고만 말해주면 된다 라는 얘길 해요.. 그래서..
제가 어찌보면은..
예전에 했던 말과 100% 맞진 않아요. 
저는 에러코드가 익셉션보다 낫다라고 얘기를 했었고.. 
가독성이라던가 이런것 때문에..
그런데, 이사람 입장에서는..
에러코드도 소용이 없다. 이미 에러코드가 내부에서 난 이상.. 위에서 에러코드를 재대로 처리 해 줄거라는 기대를 말고 그럴수도 없다라는 이야기거든요?!
똑같은 이야기로 뭐~ OpenGL Initialize 하다가 뭐~ 에러코드 났어. 그럼 뭐~ 위에서 어쩔거예요..
뭐.. OpenGL 내가 깔거야?
갑자기 뭐.. 그래픽 카드를 다이나믹하게 스와핑해주나? 프로그램 실행중에? 말이 안되잖아요..
그래서.. 그 얘기는 굉장히 맞는 이야기 같고 어찌보면은.. 제가.. 익셉션 핸들링이~
쓸데없이 복잡하다.. 그러니까~
처음부터 불가능한거를 '아~ 우린 할 수 있어!' 하고 시작한게 익셉션 핸들링이 아닐까..
아~ 익셉션이 났으면 이거 다 처리해가지고 무사하게 프로그램이 돌게 해야지~!
그런거 자체가 프로그래머의 오만이 아닐까 생각이 들어요. 어차피.. 익셉션이 나는 근본적인 이유를 처리할 수 없는데..
그럼.. 차라리 그 순간에 뻑나게 하고~
그리고~ 로깅만 제대로 되어있으면 그걸 디버깅하는게 맞다는 얘기죠.. 그래서..
그건 어느정도 동의를 하고.. 저도 이제 익셉션....
저는 웹쪽을 좀 더 짜야되기 때문에.. 그럴때 아마.. 
요~~런... 그런.. 뭐랄까..
Practice를 좀 더 써보지 않을까 생각은 드는데..
제가 생각할때는 제가 여태까지 봤던 익셉션 핸들링하는 것 중에는.. 가장..  명백하고 간단하고!
그리고.. 무슨 문제가 있을 때 가장 빨리 찾을 수 있는 방법인 것 같기도 하고~
익셉션이 난다고 해서 아예~ 서버가 크래쉬나면 안되긴 하거든요?
그.. 다음.. 리퀘스트는 받아야 되니까..
익셉션 핸들링해서~ 그건 좋은데?
다만.. 익셉션을 위에서 처리해가지고 니가
 알아서 돌게 하는게 아니라..
니가하는 지금 오퍼레이션 자체는 망가졌고! 그 오퍼레이션은 망가졌지만! 다음에 들어오는 리퀘스트는 받아줄께..
이정도로 처리하는 것은 나쁘지 않은 것 같아요. 그래서..
괜찮은 방법이라 생각이 들어서 이야기 했구요.. 음...
여기까지 한 이상.. 익셉션에 대한 이야기는 이제.. 더 이상 안하겠지..
아예 익셉션을 쓰지 말라는 결론까지 나왔기 때문에.. 
일단......
마음에 드는 방법이었고 그리고..
요즘 들어서 주목 받고 있는 익셉션 처리 방식이기도 한 것 같더라구요..
위키피디아 페이지까지 있고 그런것 보니까.. 그래서.. 뭐.. 익셉션 이야기는.. 그정도? 로.. 하고
뭐 다음에.. 몇가지 이야기를 더 할거예요. 이 강의에서 들었던 것 중에 제가 그래도 동의하는 것들..
예~ 포프였습니다.
