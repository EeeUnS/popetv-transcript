안녕하세요 꼽힙니다
아 우리가 너무 긴거 같아요 잘라 될 것 같에
아 뭐지 뭐 더라
제가 얼마전에 만든 비디오 언리얼 가윤이 t5 였던거 같아요 언니가 뽑아
분류돼 파이브
아그 비디오에서 2 댓글 달랐어요
아 댓글 달아주신 분이 있는데 이중 아님 인가
디자인은 출신이라고
금융의 치로 속도가 이빨은 게임을 만들려고 했는데 그거 가비지 컬렉션
때문에 속도가 안 돼 하고 실패를 했다
뭐 그거 때문에 9 오라고 그런데 찾아봤는데 아마 땅이 아
원하는 결과는 찾지 못했고 되고 져야 하는지 왜 찾지 못해 지는
모르겠지만
다분히 있거든요 그리고 그래서 이제 제가 말했던 그래프 카운티 전에
참석해 아무튼
아 참조 카운트 에서 아 그런 방법이 괜찮아 보인다고 해서 뭐 그 설명을
해달라고 하셨는데 사실 그냥 글로 남길 까다가
어 비디오를 만드는 만큼 그렇게 뭐 b 굉장히 쉬운 얘기라서 답이 그래서
그 거라 안 만들 거다 어차피 제가 창조 카운터 하고
아 가비지 컬렉션에 대해서 좀 한번 더 얘기 하려고 했기 때문에 그걸
합니다 연결에서 지금 비디오 만들게요
처음 몇 분 정도 로 이제 그분은 답을 드리는 것이기 때문에 그냥 뭐
가비지 컬렉션 하고 그래서 카운트 쪽 잘 아시는 분들은 굳이 안보셔도 될
것 같은가 대충 스킵 하시고 어디 뿐만 들으시면 될 것 같은데 일단 이
충만 이마트 말씀드리면
음 첫번째 그 레프티 암 타고 가비지 콜렉션이 어떻게 작동 완화를 설명을
드릴께요
근데 이거는 아 언어 자체에서 지원을 하는게 젤 편하거든요 물론 추가를
할 수도 있지만
시샵 같은 경우는 이미 지갑에 가비지 컬렉션 으로 만들어진 언어이기
때문에 거기 달에 스카우트 로 올리는 것 자체가 상당히 좀
까다 봐요 아 특히 유니티 까지 먹고 들어가면 은 더더욱 힘들어 질
거에요
아 그래서 일단 그건 그다지 쉬운 먹은 아닌데 몹시 해서 다 하는거
기도할 수 있는데
별로 권해 드리지 않고 야 설명은 이렇게 가르쳐 컬렉션 하구요 이렇게
한테 어떻게든지
그리고 왜 레 스케어드 제가 더 낫다고 주장하는 이제
일단 가비지 컬렉션을 이런 방법이에요 예를 들어서 뭐 오브젝트 라고 가지
전에는 오브젝트를 만들었다
만들어서 이걸 어떤 변수에서 기억을 알수가 있어요 뭐
가장 흔한 예로 이제 뭐 튜티 갭에 30초 말이라고 요 총알 오브젝트를
만들어서 아 이 변수 뭐 총알 플라이 플라이 라는 그 변수에 집어넣고
쓰고 있어요 쓰고 있다가 어떻소 쓰니까 이제 그냥 이 변수를 아 더이상
안쓰는거 예를 들어서 뭐 함수 안에서 쓰는거 함수에서 이 변수 각 아랫
저 레퍼런스를 가지고 있다고 저는 하거든요 버턴 그르 그 물체 래퍼
가지고 있던걸 이제 함수 밖으로 변수가 나가면 이게 사라지면서 레퍼런스가
없어지니 잖아요 그럼 이 물체가
그냥 메모리 남아있어요 메모리 남아있어요
근데 그러다가 이제 메모리를 계속 머물 총알을 뭐 다 뺏겨 만들 수
있으니까 그러면 몇 백개의 총알이 계속 매물이 쌓여 있는 거에요 그러다가
메모리가 어느 정도 이상으로 올라가죠 뭐 지금은 500매 갔었다
뭐가 해석은 좀 말이 안되는 것 같고 1 10메가 이상해졌다 그러면 이제
그 시작
그 버추얼 멋이 있어요 그 한마디로 그냥 뭐 국가 설명 귀찮고
그러면 개가 이제 내가 메모리가 심해 가 되니까 메모리 너무 많이 먹는
것 같애 좀 아 좀 안 쓰는 물체를 줘야겠다는 생각을 해서 그때
뭐 언제나 그런건 아니지만요 집 기본적으로 모든 프로그램의 실행을 딱
멈추고 그리고 이제 모든 물체를 뒤지는 거야 메모리에 있는 이물질이 탁
트이면서 언어를 지금 쓰고 있는 놈이냐 변수가 있냐 물어봐요
그래서 포토몬 카운터 나 뭐 이런걸 가지고 있거나 뭐 여러가지 그런 법이
있는데 그걸 찾아 보는 거에요 그래서 꼭 그래 나는 누군가 쓰고 있어 글
안 주어 근데 아까 만들었던 거 총알이 있잖아요 그러면 봤을 때보다는
아무도 날은 맥스웰 아내가 없는데 그러면 꼭 그래 던지 와야겠다
그래서 이렇게 지우는 과정이 가비지 컬렉션 이에요 그래서 뭐 지금 대충
생각을 하면 아시겠지만 일단 물체가 많고 그리고
아 그러면 다음은 뒤지면서 봐요 어떤 놈이 누구를 뭐 참조 보이즈 를
확인해야 될 거 아니에요 그럼 거기에 걸리는 과정에서 실행이 멈추기
때문에 그게 얼마나 되느냐에 따라
멈칫하는 형상이 나타나는 거야 특히 게임 같은 경우에는 모바일 쪽으로
조금 다르겠지만
아 컴퓨터 같은 경우에는 6t 프레임도 가끔 올리려고 60프레임 그리고
30 프레임 은 보통 기본으로 집어넣고 들어가고 30% 의 의미 1 1
프레임이 3.3 선 미리 세컨드 에 돌아야 되요 근데
1 2 3 4 말라
33 인가
꼭 헷갈려 r2 좀 멍청해 진 것 같아요
33 13일 34 밀리 세컨드 안에 돌아야 되요 그러면
그 생성 및 2 사이크 4 올래 면 보통 따른 게이 돌 잖아요 무슨
업데이트로 부 돌고 뭐 렌즈 힘들고 이러면서 보통은 굉장히 타이트 해요
왠만큼 단순한 게임이 아닌이상 그리고 게임 2
뭐 모델도 많이 그리고 그러면 좋은거니까 최대한 거리 이용하려고 하면
30mm 색 한다면 29일 있어선 정도가 딱 맞춰 온다구요
근데 그때 가비지 컬렉션이 안되면 걍 덜어져 29 밀리 세컨드 로
그러다가 감식 한참 부탁 들어오는데
그렇게 10 밀리 세컨드 먹어봐 그러면 이게 30
29 메리트가 돼서 40mm 세컨 들어가는 거에요
40 39 미리 세컨드 그러면 그 순간에 한 프레임이 2 하게 딱 되기
때문에 그게 멈칫하며 현상이 보이는 거죠
그리고 그게 뭐 시밀레 세컨 너의 그 이상이 넘어가면 더 심한거 고
그렇다고 게임 자체를 그냥 어 그래
가비지 컬렉션 10 밀리 세컨드 걸리고 예상하고 무조건 19 및
해석한다면 줄인다 그러면 별로 표현할 수 있는 것도 별로 없어요
그리고 이게 60프레임 까지 가면 더 긴 파인 하는거구요
16 4 세컨드 안에 16.6 용융 7을 밀리 세컨드 모든걸 그려야
되는데 가비지 컬렉션 10 밀리 세컨드 들어가면 이미 그걸로 끝난
거라구요
그래서 이거는 그게 안 된다고 말하는 거에요 그럼 반대로 계속해 한테는
뭐냐면
이 물체를 그 뭐래 스카우트를 작성으로 지원하는 언어 드 요즘은 있어요
대표에게 이제 아
ios 에서 이제 오브젝티브 c 쓰면 아마 걸어 차종으로 킬 수 있었다고
기억을 해요 근데 이게 뭐냐면 이 물체를 생성 해요
그리고 이 물체를 어딘가에 데이브 하잖아요 뭐 이걸 명시적으로 할 수도
있고 암 목적으로 할수도 있는데 그러면 내가 물체 안에 모든 물체 안에
그 카운터가 있는 거에요
내가 어떤 놈이 나를 가지고 간 이라는게 그러면 어떤 놈은 아니고 몇번을
누가 나를 참조 하고 있냐 그러면 aa 블레셋을 개입을 하면 은
아 이 최적화가 일로 올라가 있는 거 일로 그 다음에 이것을 다시 또 삐
에도 대입을 하면 은 참석한 tv 로 올라요
그 다음에 나중에 a 가 살아 지도 사라질 때 그니까 뭐 함수에 범위
밖으로 벗어나거나 이럴때 2 참조 카운터가 1 줄어드는 거죠 가운데서
걸어줘 그렇고 하나가 줄어드는 거죠 그러면 제 1회 되잖아요 그러면 그때
지워지는 건 아니지만 나중에 피까지 밖으로 사라져 일대 그럼 영이
되잖아요 그럼 그 순간에 물체를 지워요
물론 뭐 힘 메모리 아시는 분은 아시겠지만 물체 를 생성하고 지우는 것
자체가 속도가 많이 걸리는 거 거든요 근데 가비지 컬렉션 아고라 수캐
않다고 다른 점은
매 프레임마다 지워지는 물체에 거행되는 물체가 있어요
근데 지워지는 순간에 이 물체를 집과 참조가 더 이나 안되는 순간에 이
물체를 기워 저어 지워버려 쭉 이 때문에 그 순간에 목이 약간 멈칫하는
것 까지는 눈에 안보여도 있는것이고 0.1 세컨드 가든 다던가 그것도 안
들릴 거 에 사시는
그런거 에서 또 같은 건데 가비지 컬렉션은 이거를 그 순간에 앉으니까 그
순간에 빠른데 나중에 왕창 모았다가 추천된 한꺼번에 지니까 그걸 0.12
3 카드를 수천개 더하면 못 걸림이 100 밀리 세컨드 니까 그런 축
늘어진 다는 거죠 그래서
이 게임 처럼 실시간으로 도는 프로그램에서는 몇 스카우트 감았다는 거에요
그 한 프레임에 뭐라고 확 찌우는 게 아니라 척도로 파먹는 이 아니라
꾸준히 조금씩 이를 느리게 해주는거 조금씩 느리기 때문에 아 그래 뭐
오브젝트 한 100개정도 생기고 지어졌는데 1 5 밀리 세컨드 뭐 3mm
세컨 된다 그러면 원래 33 밀리 세컨드 5l 계시니까 거긴 약간 줄여서
28mm 세컨드 에 따 게임 맞춰놓고 그런 문제 없겠구나
이 정도로 해서 예측이 가능하고 멈칫하는 게 없다는 거죠 그래서 그거
때문에 좋다고 하는 거고
아까도 말씀드렸듯이 거는 언어적인 지원이 보통은 많은 부분이기 때문에
그게 없으면 조금은 힘들어요 물론 씨아 곳이 플러스 플러스 에서 이제 두
개를 지원을 하긴 하지만 뭐 뭐 자체 지원 아니면 사람들도 열심히
만들었죠 좀 표준에서 좀 보호 토 포인터 나도 개판 치고 뭐 이런 것도
있었고
뭐 이외에 원래 고전적인 cc 플러스 플러스 방법은 rx 카운티를 그
자체가 업종 사실은 그냥 뉴 에서 만들고 딜에 타면 지우는 거였기 때문에
그게 가장 빠르게 해요
굳이 뭐 카운트 참조 안하고 뭐 이런것도 있기 때문에
근데 이제 문제는 실수 로 다른데서 이제 참조 라는 걸 지웠을 때 크게
이제 모델링 포인터 라고 하는데 한마디로 그 물체가 사라진 거기 때문에
그때 그걸 쓰려 가면 뭐 법인 할 수도 있고 엉뚱한 짓을 할 수 있고
그런 문제 0
이제 그것을 조금
그런 일을 조금 마 가지고자 손수 안해도 되고 자라고 하는 의미에서 야
성능을 포기하더라도 이제 만들기 질의 스카우트 시스템이나 가지 컬러
시스템이고
그런 개념이 있는데 결과적으로 신 시험에서는 가비지 컬렉션이 배우의
기반으로 있기 때문에
그거를
이용 그걸 버리고 웹 스카우트 로 전향을 1가 좀 되게 애매해요 사실은
아
g 그러면 이제 아까 하신 말씀 있잖아요 그럼 어떻게 이 문제를 해결할
하냐
저희 벌써 몇 년 전부터 해왔던 거에요 옛날에 모바일 보내서 이제 잡아
지원하게 je t'aime 라고 노키아 본 뭐 scorers 6t 이런
시리즈 에서 제이투엠 이라고 이제 모바일 에디션 있어요
그 엔진오일에 나오기 전이죠 그거 할 때도 똑같이 잡아도 가비지 컬렉션
시스템이 었으니까
결과적으로는 c 스타일러 코딩을 짜는 거에요 근데 시스템에 코딩을 짠해
지어주지 않는거 예를 들어서 아까 말했던 그 총알 같은 경우에는 뭐
총알을 쏘고 사라지면 지워지지 않아요 그 아예 뭐라 그래 레퍼런스가 살아
있잖아요 그런 일이 없게 만들면 되요 그냥 모든것을 배열에 쳐 박아
넣는데 예를 들어서 내가 현재 게임에서
음 뭐라 그래
총 안 한번에 화면에 나올 수 있는 총알 숫자가 1천개 다 그러면 배열을
참게를 만들고 그 배열 참게 안에
어촌과 오브젝트 1000개를 만들어주면 되요 일단은 그 대신 이제 뭐
유니티의 개념에서는 at 에이션 이남호 액티브 이런 플레이 있잖아요 그
프로퍼티가 그 액티브 를 꺼면 업데이트도 안되고 아무것도 안 되죠 그러면
1000개를 만들어주고
다 꺼 두는 거예요 그러다가 총알을 쏠리게 있으면 2배를 훑으면서 여기서
액티브 있지 않은 하나 골라서 그 액티브 시키고 위치 맞춰주고
이제 플레이 한다면 어느 정도 시간이 지나면 다시 꺼주는 그래서
결과적으로는 이 배열이 모든 오브젝트를 자꾸 있기 때문에 가비지 가 안
생기죠
이게 좀 그 가능한 얘기냐 라고 물으시는 분이 있는데 저희 시대는 않게
코딩 해왔고 저도 사실은 xna 라고 이제 시샵 기반으로 한 x 박스들이
6t 에서도 는 그런 플랫폼이 있었어요
그걸로 게임 할 때도 그렇게 했어요 그래서 가 비지를 뭔 로딩이 나
업로딩 할 때는 안 생길 수가 없어요 로딩 업로딩 할 때 딱 생겨 놓고
그 때 어
레벨 로딩 한 이후에 가리 클러치 돌릴 수 있거든요 시스템 다시 짓인가
하면은 음 그래서 갈 것입니다 해놓고 게임이 돈은 그 순간에는 죽어도
감히 질 안 만드는 거에요 그래서 실제 저는 가 빛이 하나도 안 만드는
게임을 혼자서 만들어가고 예전에 엑스박스 d6 처음 나왔을 때 그때는
ce 기반 이었지만 그 때도 음 뭐 레서피 안테나가 빚이 끌어주는 야 안
쓰고도 그런 식으로 만들어 봤었고
그래서 그런 식으로 미리 알 로케이션 해놓고 깍
보통 메모리 풀 시스템이 그 메모리 푸른 아니고 오브젝트 풀 시스템이라고
많이 해요
결과적으로는 가비지 컬렉션이 들어가는 귀 아니까 언어에서 게임을 만들면
그렇게 만드는 수밖에 없어요
실시간으로 이렇게도 되는 게임 연 그래서 그게 거의 유일한 방법을 보고
지금 현재로는
이제 뭐 그 뒤에 문제가 되는것은 가끔 뭐 os 가 모바일 os 레벨에서
가끔 그런 메세지를 줘 너 메모리 너무 많이 먹는다 지워줘 라
그럼 그걸 지웠다가 다시 늘릴 수 있는 방법은 생각을 해 봐야 되고
어찌보면 은 이른바 모습 나쁘지 않을 수도 있어요
뭐
그냥 물체로 생성하는데 지우지 않고 그냥 계속 어레이 나 아까 배열이나
뭘 리스트도 쳐 박아 넣는 거에요
아 그러고 나중에 메모리 그리고 이제 재활용을 하다가
막 저렴하다고 지우다 가면 그냥 잡혀 있잖아요
4 나중에 os 에서 앱의 os 수준에서 메모리 좀 줄여 나 그러면 그
후 천사 치워 주는 방법도 있죠 그리고 다시 생성하고
뭐
그러면 어때 있으니까 그게 아마 가장 중간에서 적절한 방법이 아닐까
싶어요
아 os 자체에서 제 메모리가 딸린다고 메시지가 날라 올 정도면 은 이미
성능은 줄어든 상태고 어차피 맘스 타는 현상이 있을 거 기 때문에
모고 까지는 뭐 어떻게 할 수가 없지만 일반적으로 게임을 할 때 멈칫한
현상은 없
웬만큼 주겠죠 거의 없을 수도 있고 그게 거의 유일한 방법이고
음 그 여기까지가 이제 아까 그 상황에 어떻게 된다고 했지 그 그 그
분에 대한 답이 될 거 같아요 잠깐만 너
이충환 님에 대한 답이 될 것 같고 디자이너 라고 하셨어요 그래서 아마
모르셨던 것 같은데 게임 프로그래머 1 2년 하시거나 머시 # 조금
쓰시거나 그런 분을 아쉽고 같은데 뭐 디자이너 니까 그래픽 하시는 분 을
의미하는 거겠지 한국에서는
아
여기서는 디자인하면 게임의 기획자 에서
아 그 정도 9 그리고 또 하나 이 후회될 좀 c 샵 에서 그 박시하고
안 박씨에게 점이 있어요
그 그것도 좀 살펴 보셔야 할 거에요 그것까지 구제 설명들이 필요없고
그냥 시샵 에는 오브젝트 타입이 있고 가비지 컬렉션 되는 오브젝트 타이
그 외에 값 타입이 있어요 벨리 타입이라고 스트럭쳐 는 다 그 거에요
그래서 그거 같은 경우는 매 프랑스 카운터 같은거 안 해요
네 이제 어레이 리스트를 쓰면 은 쓰지 말아야 되는데 다시 더 이상
어레이 디스트 를 쓰시면 거기는 오브젝트 안 봤거든요
거기에 이제 인테 라던가 스트럭처 같은걸 넣으면 은 내부적으로 오브젝트로
바꿔줘요 거리에 박싱 이라고 하는 건데
까 값을 가져다가 박스를 씌운 다른 개념이죠 그 담궈 놨다가 내뿜을 때는
이걸 박스를 뽑아서 박스를 걷어내고 언 박싱 이라고 해요
그리고 값을 주는 거죠 그럼 오브젝트가 생겼다 없었다는 그게 있잖아요
이 과정에서 값이 엄청 생겨요 그래서 아 그런 값 타입 을 저장할 때는
어레이 스트레스 심히 안되고 뭐 그 재를 일하고 있어요 리스트 하고
이렇게 각 바로 지구 무슨 형태 적어 주는 거 그걸 쓰셔야 되고
근데 그거는 그냥 쓰시면 되요 어레이 지자체 버리시면 되요 더 이상 건
쓰실 이유가 없어 드리자
그냥 다 제네릭 으로 가시면 되는거고
뭐 그정도 그 정도가 이제 2분에 대한 답변이 얻고
아 원래 제가 하려고 했던 얘기는
아 까먹었다 가비지 컬렉션 아 그래프 카운트가
굉장히 괜찮았어요 사실은 아니까 뭐래 스카우트는
그 뭐 이렇게 안테나 올리는거 크게 문제가 아니거든요
이렇게 무슨 뭐 그래 여기서 뭐 개입 연산자 있을 때 거의 랩 스커트
올리면 되는 거거든요 그냥 그래서 별 거 아니라고 생각을 했는데 이게
이제 멀티 떨어진 들어가면서 굉장히 골치가 아파 졌어요 사실은 이게 과연
맥주캔 더 빠를까 라는 의심이 될 정도로 이게 그 과연 그만큼 좋을까
한테 정도로 크게 문제가 된 게 뭐냐면
그브 그 뭐야 그
멀리 떨어진 있으면 뭐 쓰려 등에서 여러 가지 물체를
접근을 하잖아요 그래서 뭐 애들에 대해서 거의 물체 접근에서 뜰에서
삐어서 님을 접근할 수가 있고 그런 맥스 카운트를 같이 올려주면 내려주고
할 일이 많은데 그 순간에
서로 락을 앙 걸어주면 은 웨이스 컨디션이 일어나 거든요
음 그러면 더 저런 렉스 카운트 개판 되고 그래서 그 매수 칸 돌려줘야
막을 걸어야 되는 건 단점이 생겨 이제는 그래서 멀티 스레딩
에서 액션캠 틀을 걸리면 락을 걸어 중에서 일반적이 되어 싱글 스레드
에서만 어떤 물체를 쓸 때도 크게 다른 부터 맥스 카운트 시스템을 하나로
만들어 놓고 상속 받는 게 일반적이라 락을 무조건 걸게 돼서 그 악
걸리는 순간 그 순간에
지는 그 cpu 속도가 아 cpu 사이클이 은근히 내려줘요 되게 웃긴게
예 목에 한번 두번 정도로 상당히 없는데 뭐가 천 번 일어나면 은 1
업데이트 루프 중에
그래서 그거를 잡느라고 굉장히 고생을 많이 했었어요 이 게임 만들때도
그래서 별 별 짓을 다 했는데
그래서 멀티 스레딩 해서 가면 랩스 카운트가 뭐 열정이 가베 클럽 많았죠
그래도 참 성능적인 책임에서 별루 구나 란 생각이 점점 들어왔고
예전에 이거를 뭐 여러가지 방법이 있죠 그냥 뭐
ils 카운팅 을 포기 하는 방법도 있고 받고 먹는 순간에는 이쪽 스레드
했을 때 랙 형태가 포기하면 양 곧바로 포인터 마다하고 쓸 수 있게
만들자
그래서 그럼 o 토레스 같은거로 걷어내고 포인터 만 전달해주고 이렇게
하는 경우도 있고
네 그런 결국에는 맥스 캠핑에 의를 많이 3실 하는 부분이기 때문에
이것을 좀 어떻게 더 제대로 처리할 수 있는 방법이 없나 그 생각이 많이
들어요
뭐 뭐 아톰의 잉크 있으나 토미 크리스 이런 요즘 뭐 그거 를 지원하는
cpu 도 있지만
그거 또 뭐 뭐 나 꺼는 것보단 빠른데 그렇게 빠른 것도 아니거든요 그냥
예전에 신규 쓰레드 해서 래프팅 때는 단순히 할 때보다는 그리고 그게 뭐
수천번 이 되면 한 프레임에 것 역시 굉장히 더 느려질 수도 있고 그
예전에는 그런 생각도 한번 해봤어요
그
콘솔 같은 경우에는 보통 저희가 코어 수를 딱 정해 놓고 쓰잖아요 여기서
뭐 옛날에 엑스박스 트릭 3 같은 경우에는 코어가 4개 얻나
뭐 좀 5px 보고 같은 건 아니었 없겠네 뭐 이렇게 알수 있을 거고
그럼 결과적으로 내가 게임에 쓸 수 있는 그 코스는 뚫어야 됐으면 7개
라는 게 딱 나오거든요
그래서 그 생각됐던 게 뭐냐면
뭐 pc 를 비슷하게 줘 사실은 모피 씩을 앞으로 코가 64회 도모
5 만기가 되도 모르겠지만 현재 도는 게임이 뭐 미래의 굳이 그 모든
코르다 잡아 먹을 필요 없으니까 그래서 코스를 딱 정해 놓고 쓸 수 있다
그녀는 예를 들어 이 생각해봤어요
칸 어그 젝트 마다 넥스케어 엔투스 각도로 해마다 있는거예요
그러니까 어쩌면 망산 일수도 있는데 제가 아직도 시험은 안칠현 안해봤는데
될거 같애
그래서 예를 들어서 물체 하나의 래프 카운터 있는데 각 뜰에도 만나뵙게
한켠에 있는 것들 레드가 2
7 되었다며 는 7개의 인테리어가 있는거예요 그래서 그냥 그거를 뭐
그래서 카운트를 뭐 증가 감소 할 때 그냥 그 스레 대해서 축원하는
거에요 그럼 약을 걸 이유가 없잖아 그럼 낙을 안걸린 상태에서 계속 추가
감소 를 하다가 감소가 했다고 0이 될 때도 지질 않는것에 일단은 그래서
하다가 어느 순간 그 씽크 포인트라는 만드는 거에요 그럼 애플의 이 말
한 번씩 싱크를 하는 거야 보통 그런 일을 해야 되 거지 맛있어야 등을
해도 웬만해서는
그런 씽크 포인트에서 그 오브 식스 들쥐 지면서
과연 내가 아 모든 스레드의 있는 래프 카운터 0이 된 야 이거 를
확인해서 그랬다면 은 그 순간에 물체를 지워주면 결국엔 각 스페인 많은
물체는 지어 주는 거고 그 대신 웨이스 컨디션 줄이기 때문에 그거에 대한
딜레이를 줄이는 거고 저는 그것도 괜찮지 않을까 생각을
했어요 그리고 이 영 인거 를 판단하는 건 사실은 뭐 신디 나 뭐 이런거
를 도입하면 은 아마 거의 한번은 비교로 되거든 같고
왜냐하면 cpu 에서 0 을 비교하는 건 굉장히 빠른 연산 이기 때문에
어셈블리 2 수준이나 보기 교수 중에서
불어 오면은 가능하지 않을까 생각을 했어요 사실은
근데 그러면 결과적으로 한 물체에 들어가는 렉스 카운트를 몇 개까지 지원
할지는 모르겠지만 포인트 인테리어 32 로 한다면은
아 7개나 면은 뭐 7 4 28 28 바이트 도의 쓰는 거고 그런 쉬운
c 라고 하면 뭐 14 바이트 정도 뭐 처음에서 255까지 만 지원한다
코드 나쁘진 않을 것 같아요
어서 트 만약 언어는 그게 넘어갈 생각 할 수도 있고 그러면 심 전차로
해도 그러면은 4byte 가 8바이트 안의 모든 4바이트 라면이 제 1
cpu 내게 까지는 그렇게 지원할 수 있고 시피 8까지 8바이트 면할 수
있거든요
그럼 원래 인테 제로 매수 캠핑 하던거나 별 차이가 없어 같고
뭐 가능하지 않을까 이런 생각을 해봤어요 근데 문제는 각 프레임이 끝날
때 모든 오브젝트를 어떻게 뒤 질 것이라
매 들 는게 단점이기도 한데
아니면은 오브 어떤 쓰레드에서 웹 스켈터 0이 되면 은 그 오브젝트를
검사를 해 달라고
레지스트 어디엔가 에게 등록을 한 번 부분이 있겠죠 그러면 또 그렇게
크게 내릴 것 같진 않고
그런 방법이 있어요 그래서 아니 제가 방법 있는게 아니라 제가 말도
안되게
생각을 한 거야 다시 래 그래서
또 망상 인데 혹시라도 이런 생각 해보신 분이 계시거나 아니면 제가 말아
먹는게 더 엄청난 단점이 있다고 보이시는 분들
야 보이는 분들은 한번 이렇게 답을 주셨으면 좋겠어요 제가 렙 스카우트
시스템을 좋아하는데 멋있더라 얘기해서 온습도 저하는 싫으니까 메모리가 쉽
조금 더 쓰더라도 그렇게 하고 싶다는 생각이 때문에
폐 소모 예
뭐 아까 그 분에 대한 답 됐고 망상 도시 먹고 하고 싶단 말
그래서 오늘 포프 tv 는 여기서 끝내기로 하고
사실에 머스트 리딩 얘기가 나왔으니까 아마 다음 표는 정도에서는 또 멀
3d 는 얘기를 한번 할 것 같아요
제 멋에 뜰에서 별로 안 좋아하거든요 그 얘기에 대해서 조금 더 얘기를
할게 예
포프 였읍니다
