저번주 금요일 인가 뭐 길인가
비디오가 안 올라 갔다고 생각하시는 분들이 있던데
비교가 올라갔는데 유튜브 쪽에서 뭔가 프로세싱 을 못하고 있어요 비디오를
링크로 가면 되겠네요 그런데 그게 제 채널에 난 보여지고 그래서 뭐
링크를 제가 따로 검거를 보신 모든 여분 계시더라 그래서 그분들은 봤는데
그 외에 문제 원래 겐지 유튜브 채널에 이렇게 보쇼 가고 보시는 분들은
어 아예 안 뜨니까 음 뭐 보고 계시다고 해서 그걸 다시 업로드 하게
했는데 지금 여전히 프로세싱 중이어서 게 올라가지 않으려 가진 정말
모르겠어요
그래서 이 교회의 프로세스는 이 안 될까 고민을 되게 많이 했는데
비디오가 좀 밑은 이직 얘기했어요 35분
아마 길며 는 일이 프로세스의 시간이 걸리고 못해 대략 했거든요
그런게 아닐까 싶어서 음 좀 짧게 짧게 만들려고 노력을 하는데 요즘 들어
오릭스 굉장히 주절주절 말만 많아져 국회 간 두고
돈으로 쪼금 짧은 얘기를 해보려고 노력만 할게요
얼마전에 이제 또 전월 망상이 좀 있는 인간이라 어떤 게임을 만들어
보자고 망상을 하다가 이 게임은 결국 내가 만들려면 은 차익에 자체
엔진을 만드는 게 더 빠르게 했구나 라는 생각이 들었어요
그래서 이런 저런 생각을 하다가 예전에 한참 생각하다 만 그 뭐라 그러죠
데이터 로딩 세이빈 이거에 대해서 생각을 하게 됐죠 뭐
c 샵 에서 주로 많이 쓰는 언어는 뭐지 그냥 뭐 데이터 cei 제이 션
이라던가 뭐 디스 li j 션
징 여 라
d 수리해주는 뭐야 발판 층별로
모르겠다 뭐 그런거 게 문제인데 시 샵이나 잡아 등의 이제 그 모
리플렉션 시스템이 완벽하게 갖추어져 있는 언어들 언어 자체에서 rtd
아이가 진짜 완벽하게 지원되는 언어들은
그런걸 그냥 뭐 클래스 잡아다가 클래스 오브젝트 있으면 거다 저장하려고
시리얼 라이즈 해버리면 은
원에서 알아서 해결에 못자 나요 프로퍼티로 인모 그래서 저장 자하고 뭐
그거 뭐 제 2선으로 하던 xml 로 하든
바이너리 라이터로 하던 달 수가 있거든요
니시나 c 플러스 플러스 에서는 이제 어느 야채도 그것을 지원할
안하죠 원래 스펙에도 없는거고
그냥 옛날에는 뭐 그 중에서 생각하지도 않았고 어찌 국면은 뭐 성능상의
문제로 rtl 같은 경우도 이제 게임 중에서 끄는 경우가 있으니까 그
데이터를 저장할 때마다 상당히 거라 바지 등에 있어
그래서 가장 간단한 방법은
5회 전에 흔히들 그냥 바이너리로 저장 하는거 있잖아요 그냥
이래서 데이터 멤버가 인테 저하나 모씨 볼트 1 불렀 1 그리고 스트링
하나가 있으면 이제 그거를 그냥 직접 리더 하고 라이터가 함수를 만들어서
그래 첫번째 밖 첫 번째 뽑아 이트는 모인 테죠 다음 두바이 때는 숄
다음 두 번의 담보가 있으면 불렀
그리고 그 다음은 캐릭터에서 그 캐릭터가 스트링 에서 캐릭터가 몇 개
있는지 그 카운터로 이제 인테 저를 뽑아 이들 주장하고 그 바이트 수만큼
캐릭터들을 저장한다
그러면 리더를 만들 때도 똑같이 걔 첫번째 해서 뽑아 이터너티 것중
어쩌구
이제 크로스 플랫폼 개발 환경에서 이게 좀 귀찮은 부분중에 하나가 있어
게 뭐냐면 그 비겐 디안 리더를 ndi 이런 문제가 있잖아요 그렇다 pc
전용 게임은 단 새비랜드 아이가 3권이 없지만 예전에 expect 라던가
뭐 bx 프리 같이 파워 pc 쓰던 경우에는 비리는 이 아니기 때문에
그렇게 바이트 쏟아 하나가 넘어가는 건 언제나 2바이트 수압을 다시
크리가 됐거든요
근데 이제 툴은 나 pc 에서 보던 보니까 그럼 이제 최종 플랫폼이 뭐냐
에 따라 그 바이트 소아 패주고 좀 귀찮은 거였죠
그 뿐만이 아니라 이제 뭐 컴파일러 마다 그 스트럭처 를 그냥 곧바로
세이블 한다 이를 더 스트럭처 가 메모리에 있으면 이 스트럭처 가 뭐
소개 물론 4개의 그 모스티브 몇 개 있고 그러면 메모리 가져다가
그냥 메모리 카피를 해버려 되는 거거든요 바이트 스트림의
네 그것도 이제 뭐 얼라인먼트 그 규칙이 약간씩 다를수 있고 건 파일마다
그래도 귀찮아 지는 것도 있고
하지만 가장 큰 문제점은 뭐 역시 버전 문제였어요
데이터로 옛날 훈련으로 구웠는데 3 버전이 나왔을 때 과연 이 그 전에
어떤 데이터 멤버 라던가 그전에 이상대 사라진것 데이터 뭘 어떻게 해야
9분을 할 거냐
그래서 뭐
이런저런 장 단점이 있다 가지 시작 같은 경우 가면 이제 그런 문제가
없는거죠 모든 그 데이터 멤버가 이 좀
이름으로 해 하고 저장을 해놓고 이 변수 이름이 거에는 값이 거다
4 집안 점 은 뭐 버전이고 쉽고 다 쉬운데 문제는 그 거에요
아 내 모 디스크에서 데이터를 로드할 때 이걸 얼마나 빨리 읽을 수 있냐
에 그 차이가 있거든요
아까 말한 저런 csc 플라스터 처럼 그렇게 뭐 곧바로 맨 카피가 되는
경우 묘 그냥 데이터 하드 쭉 이건 다음에
의 서쪽 처럼 만들고 멤버가 삐딱 해보면 끝이 거든요
그러면 더이상 고민할 것도 없고 그냥 그거 자체로
데이터 즉 나오는 거니까 4 아까 말했듯이 그런건 버전 문제가 있고
진아씨 샵에서는
ddl int clr 전하며 는 그런거 아서 해주긴 하지만 말그대로
디스크에 여러분 걸 거야 되고
몸엔 카피 한 번 하는 것보다 여러 가지 면서 해야 되잖아요 이 이게
무슨 타이르고 무슨 일을 이면 여기서 찾아 9 도크 이런것들
또 그런것도 뭐 나름대로
뭐 1장에 딸이에요 속도와 편의성 에 그건데
저희 생각을 하다가 최근에 또 다른 생각이 든 게 뭐냐면
그 온라인 게임이 일반화되면서
그냥 하드에서 이건 데이터를 가지고 있다가 그냥 네트워크에 싸고 서버
쪽에 싸주면 또 어떠냐
그럼 그 해서는 이제 또 뭐 시킬때 문제도 있고 여러가지 문제가 있거든요
그래서 프로토콜 버퍼 라고는 많이 아실 거에요 구글에서 개발한 거고
시큐리티 문제도 굉장히 잘 잡았고
즉 네트워크 구글 내부에서 제 네트워크 패킷으로 쏠 때 데이터 형식으로
쓰는 거더라고요
그러면 그거는 그냥 클래스에서 곧바로 유추가 되는게 아니라 미리 뭐
데이터 스키나 같은거 파일을 하나 만들어 놓고 모이스트 업 제목 뭐가
들어간다
거기서부터 이제 c 코드 라던가 뭐 c # 코드 라던가 클래스 줘
그것을 만들고 그러면 서로 그 데이터를 넣어주고 이 데이터를 일거라고
많아서 읽어줄 수 있는
네모 이거이 단점은
그것 커져 일단 아무래도 네트워크 패킷이 니까 좀 크기도 작게 하려고
노력을 많이 하고 그리고 그렇게 하면서 여러 가지 뭐
압축 에 속해 이해가 그래서 아 그런 처리하는 씨가 프로세싱 시간이
아무래도 일반 그 시리얼 자의 시리얼 id 션 보다 더 걸릴 수도 있고
그런 여러가지가 있는데 뭐 최적화한 잘 하긴 했죠
4 역시 그러면서도
데이터를 읽어와 그냥 곧바로 메모리 카피할 수 있는 그런 장점
왜냐면 그 거의 또 하나 장점은 메모리 중간단계 r 오케이션 없어
되거든요
만약에 이걸 하나하나 분석하면서 아 여긴 이게 있고 적이 있고 이 꼴을
분석하게 되면 은
그만큼 템퍼링 마커로 만들어 놓고 또 열심히 돌리다가 다시 메모리 다비치
점하고 캠플 덮어버리고 이런것도 있어서
프로토 버퍼 의 단점은 그런 중간 메모리아 독해진 단계가 있다 는 거였고
메모리 rok 션이 얼마나 속도가 느린 지는 뭐 프로그램 하신 분들은 다
아실 거구요
그래서 처음 u 번에 시작할 완소 지그 거였어요 과연 내가 프로토 버프를
곧바로 게임 데이터 노드가 쓸 수가 있을까
그것도 괜찮지 않을까 약간의 뭐 성능 저하나 이런게 있지만 뭐
이왕이면 은 베이 네트워크에 데이터 패킷 폼을 따라 새로 이렇게 모 스
트 없어도 왔고 또 프로토콜 버퍼 돌리는 것도 귀찮고
모든 것을 그냥 하나의 유니폼 포맷을 한 다음에 그걸 네트워크 하고 그냥
클라이언트 쪽 과거 그냥 서로 공유할 수 없을 꺼라 생각을 되게 많이
했던 거에요 그래서 이렇게 그렇게 보다가 프로토스로 쓰는 사람도 있긴
있더라구요
보면서 아 이게 가능하구나 그 뭐야
도타 충과 아마 걔네가 그 리플레이 패킷의 다 포트 워터로 만들었다고
제가 얘기를 들었어요
확실한지 아닌지 모르겠고 그 여러 개를 어떻게 찾아봤는데
그것을 보는 순간에 어떤 사람이 그걸 추천하더라구요 캡틴 프로토 라고
이게 옛날에 프로토 고어 프로토 버퍼 만들었던 내부 글에서 개가 나와서
새로 만든 그런 모 프로토 버퍼 랑 비슷한데
이것의 장점은 중반 메모리 알고계신 이었고 그 대신 맨 카피가 곧바로
된다는거
뭐 그렇게 그래서 보면서 아 이거 게이머 얻어 게임프로그래머 들 게임
쪽을 위해서 만든 그런 플러스 코딩의 보이기 보이더라구요 괜찮구나
그러면서 뭐 시켜 이렇게 문제나 이런것도 구글에서 썼던 그런
아 기본원칙을 없고 수 없기 때문에 굉장히 안전하다 라는 얘기를 하는데
이것의 단점은 아직 비쥬얼 스튜디오에서 c 플러스 플러스 를 지원한다는
뭐예요
그 신라인 기반으로 만들었기 때문에 실내 믿는 모든 게 웃어서
그럼 op 보조 c 플러스 플러스 볼트 인간 일레븐 인가 그런것도 많이
썼는데 아직 b 듀스의 지원하는 게 있어서
비교 루트도 내부에서는 bus 들어갔고 는 컴파일하고 쓸 수가 없는게
단점 이고
누군가 포팅을 하고 있대요 그래서 그걸 좀 기다리고 있긴 한데
뭐 그거 나오면 아이 것도 괜찮겠다는 생각이 들었고 그 외에 또 구글에서
또 새로 내놓은 게 있어요 굉장히 비슷하게 캡틴 프로 타고 되게 비슷한
건데
플랩 버퍼 라고 그것도 개념은 되게 비슷하더라구요
뭐 일단 플렉스 웹페이지가 면은 장점 단점을 9분해 는게 있고 캡틴
프로토 뭐 어 이거 만든사람 블로그에 가도
아 장점 단점을 비교해 놓은 게 있어요 쭉 읽어보고 체가 했겠어 안건은
플로트 버퍼가 진짜 게임에는 제가 쓰고 싶을 때 중간 메모리 알로켄 단계
없고 쪽을 좀 생각했을 때 정말 제가 딱 봤어야 괜찮겠다는 생각이 된
것은 솔직히 캡틴 플러터 였어요
cp 를 때 문제도 있고 여러가지 플랩 버퍼는 아마 뭔가 하나가 문제가
있으니 제가 좀 기억은 안나는데
c 키를 뒤쪽에 문제였는지 뭐 하나의 문제 제가 굉장히 건 좀 아니라고
생각을 했었거든요
그 분은 좀 문제가 있다고 생각을 했고
그래서 풀 캡틴 프로토 가 좋은데 아직 c 플러스 플러스
비주얼스튜디오 기반의 c 플러스 도 지원이 안되는 관계로 아직 쓰기는 좀
무리가 있는 것 같고
아 플랩 버퍼에서 1 제가 맘에 들었던 그거 였던거 같아요
그 물론 최종 결과는 바이너리를 뽑을 수 있지만 제 기억에 플래퍼
자체에서 제이썬 파일을 읽을 수 있는 그런
라이브러리 라고 해 그냥 그걸 제공했던 것 같아요 그래서 실제 툴에서 는
그냥 제 있었는데 세이브 해놓고 시작을 제이썬 다 익은 다음에
최종적으로 게임 데이터 복을 다 플래퍼 해서 바이어를 뽑았고 c 에서
읽을 수 있지 않을까
둘은 다시 색으로 만드니까 그래서 아 것도 괜찮겠다 생각을 했죠 근데
생각을 해 보면 솔직히 캡틴 플로트 도 누군가는 시샤 포트를 만들 것
같거든요 지금 열심히 만들겠다 이야기를 들었고
내부적으로 좀 복잡하긴 한데 어떻게 나올 거고 cc 포트가 나오고
클래스가 나오기 시작하면 거기서 제이썬 빨리 뽑아 내는 건 문제가 아니기
때문에 그렇죠
일단은 조금 기다릴 거 같아요 캠핑 프론트가 좀더 완성이 될 때까지
기다릴 것 같은데
캡틴 프로토 가 완성이 돼 주면
한번 모든 데이터를 그냥 캡틴 프로토 프로토콜로 가보는 것도 나쁘지 않은
않을까란 생각이 들고
지금 당장 제가 생각했던거 게임을 만들게 된다면
뭐 네트워크를 당연히 뭐 당장 몰살 n 포토 걸스데이 어쩔 수 없이
하지만 게임 데이터라고 하냐 프로 수퍼 쓸까 아니면 아까 말한 대로 그냥
파이널 놓고서 바이너리 곧바로 읽는걸 쓸까 그거는
조금 고민이 있어요 음
그래서 뭐
제가 짧게 끝낸다 그랬죠 짧게 끝내야 될 것 같아요 이정도면 대충
줄이 줄이 말한 건 다 한거죠 정리 같은거 필요가 뭐 정리를 하려면
데이터 있는 방식에는 보통 2가지
바이너리 하고 매번 바키 하는거 아 그건 어퍼 전 업데이트나 그게 힘들고
그 다른 방법은 이제 뭐 티아고 셀러 태그를 어떻게 저장을 하고 하는거
예를 들어 시작 같은 경우 몹시 얼라이 제이 션 같은거
당연히 버전 업그레이드 나머 데이터 누락 되거나 이런거에 대한 대비도
좋고
업보 읽기도 편하고 그런 장점은 있지만 텍스트 파일에서 바위들이 도중에
파는 가능하고 언제는
아 밤에 속도가 좀 딸리는 문제가 있고 그리고 네트워크 그래서 이제
네트워크 게임 까지 생각을 해 보면 결국에는 네트워크 패킷을 뭐야 좀
작은 프로토콜이 필요한데
그럴 때 뭐 파이널을 직접 보여 상관없겠지만 역시 해킹의 문제가 있죠
그러면 그렇게 c kt 가 준비된 그런 프로토 그걸 좀 쓰는게 좋고 많이
쓰는게 골프로 더 많이 쓰고
아 뭐 그 외에 뭐 캡틴킹 포트로 그랬네요
그거하고 플렉스 돌아가는게 있지만 아직은 충분히 완성되지 못한 앞으로
특허 드리고 플랩 어선은 c kt 에 문제가 있다는 건 성이 좀 있고요
그래서 그리고 캡틴 프로토 가 나오고 좀 더 기다려야 되지 않을까 생각을
하고
스위스 태도 제가 한번 둘러보게 둘러봤는데 에
으 기억 안나요 근데 뭣 때문에 아 아 트릭스터 데이터 타입에서 이제
바이알
바이트 어레이를 내부로 지원한 하던가 그래서 게임 데이터 처럼 그냥
한꺼번에 뭐 바이트 스트림으로 작물 보내려고 할때 점들이 수태가 좀
어려웠던 매 있었던거 같아요 그래서 그걸 때문에 리스트가 별로 마음에 안
들었고 그 데이터 형식 만으로 봤을 때 에 프로토스가 좀 더 게임 쪽
음악 낫다고 생각을 했고
캡틴 프로토 가 좀 더 기다려지고 그 정도로 정이란 될것 같네요
버퍼 씁니다
