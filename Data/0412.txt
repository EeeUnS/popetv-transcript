이 아니라 세포 프 입니다 오늘은 로깅 에 대해서 얘기를 좀 해볼게요
그 프로그램 실행중에 로그 남겨놓고 이제 그걸 나중에 보는 뭐 그것을
로그를 남기는 이유가 여러가지가 있겠죠
근데 일단 음
음 좀 더 로그 얘기를 뒤 하긴 할 건데 그 전에 한 가지 짚고 넘어
거야 할 얘기는
아 이 즉 가끔 제대로 된 툴을 몸만 접 개발툴을 못 만져 본 사람중에
디버깅과 로깅을 헷갈리는 사람들이 있어요 그래서 그거는 확실히 말해 주고
가려고 해요
로그 찍는거 는 올 발의된 팁 어기는 아니에요 그냥
디버깅을 못하는 환경에서 록을 찍어서 디버깅을 하는 것뿐이지
디버깅할 수 있는 환경에서 까지 디버거 술 좀 올라서 로고 찍어가면서
프린터의 가면서
아 이루가 이거구나 그럼 다시 고쳐야지 이런건 잘못된 방식이란 거에요
왜냐하면 은 로그 메세지가 만약에 있으면 당연히 버틸 수 있지만
없는 경우에는 다시 로그에서 에 집어넣고 프로그램을 다시 실행을 시켜야
되잖아요
그리고 다시 그 버그를 집 발생시켜 야 되고 그럼 그 로고 보고 고쳐
가는 과정이 잖아요 근데 디버거 라는게 있거나 어썰트 가 있으며 는
그건 실행중에 컴퓨터 프로그래머 멈춰 버리거나 아니면 디버그 브레이크
포인터 걸렸고 디버깅을 할 수 있으니까 그거 코드를 재 컴파일 할 이유는
없는 거죠 자신은
그래서 으
이제 제가 학생들을 가르치면서 도 보지만 저는 학생들을 총 오면은
애들이 문제있으면 디버깅 하는 법을 알 켜야 브레이크 포인트 그룹 걸고
이렇게 이렇게 변수가 팔아 로깅 으로 할수있는 그게 안되죠
브레이크 퐁당 걸린 상황에서 로고를 찍을 수 있는 것은 내가 미리 정해
놓은 것만 찍는거 지
옴과 콜 스택 이라던가 무서운가 변수에 모든 값들을 레지스터 값들이
메모리 값들 이런거 찍을 수 없거든요 그래서 이제 그런 것들을 하기
위해서 있는게 디버깅 툴이 고 디버깅 가로 개막식 달라요
디버깅 툴을 쓸 줄을 몰라서 여전히 노구를 찍고 계시는 프로그래머들이
있다면 제가 예전에 프로그램이 절반은
말을 천천히 해야겠다 프로그래밍의 절반은
디버깅 이라고 말하는 비디오가 있어요 그래서 그 비디오에서 말한 것처럼
아
프로그래밍의 절반을 못하고 있는 거라고 보시면 되요 사실 그래서 일단
디버깅 가 로깅 은 다른거 라고 얘기하고 넘어가지만
이제 특히나 이제 웹 개발 하시는 분들
아 그런 분들은 이제 로깅 에 많이 의존 할 수 밖에 없는 부분이 있어요
사실은
왜냐하면 은 아
일단 웹서버를 로 칼에서 톳 어떻게 보면 개발 툴이 구려서 에 문제일수도
있는데
암
내 컴퓨터에서 서버를 돌리면서 디버깅이 가능 해야 되고 심지어는 서버 에
내 프로그램을 올려서 라이브 서버까지 안가더라도 1 q&a 서버 정도
거기서 이제 문제가 있을 때 내가 디버거를 꼽아서 디버깅을 할 수 있다면
로긴이 훨씬 더 필요가 없을 거에요 근데 제가 알고 있기로는 크게 잘되는
개발 툴들이 별로 없어요 현재의 있는 거기서 가장 편한건 은
마이크로소프트 c # asp 단내 코어 나 뭐 asp 닷넷 이거하고 애
주어 를 꼽았을 때 는 실제 라이브 도는 서버에 디버거 꼽아 같고 내
컴퓨터에 디버깅 가능하거든요
그런 경우에는 솔직히 녹인 분한 디버깅 단어의 중요하지만
진짜로 완벽한 프로드 석 서버 에 나갔을 때 심지어 탄 내내 줘 이런
좋은 툴을 쓰더라도
정말 완벽한 프로드 서버에 나갔을 때는 디버거를 꽃 풀 수 있는 사람이
거의 없어 정상 이에요 그 꼽는 것 자체가 시킬때 부딪히기 때문에 그런
경우엔 어쩔 수 없이 이제 실 서버에서 일어나는 여러 가지 문제들을 로깅
들을 보면서 이제 문제를 분석을 하거나 아니면 은 그런 문제 해결 용
로깅이 아니라 그냥 단순히 인포메이션 로깅 하는 경우도 있죠
뭐가 이렇게 일어났다 그럼 이제 로깅
에릭 투 타입이 생기는 거에요 하나는 문제 발생을 알기 위해 하는 로깅
과 다른 사람은 그냥 많은 정보를 닭은 적어두고 로그의 적어두고 어딘가
보관해 놨다가 나중에 뭔가로 써야지
이런 개념이 에요 그래서 지금
아 못할 내 쪽이 나 이제 예수 때문에 고 쪽에 들어오면은 대부분의
로긴이 사실은 문제의 겔 로깅이 생각보다 그렇게 많이 들어갈 일은 없고
있기야 있죠 그러나 정보영 로긴이 더 많아질 수 칸은 써니 높고 왜냐면
웬만한건 다 디버깅이 가능하니까 라이브 선언하기 전에 그 외에 이제 자바
서버 라던가 이런 좀 툴의 상성 관계가 좀 안좋은 그런 툴들을 보면은
로그를 엄청나게 밥을 수밖에 없어요 모든 로그를 으 음 이제 노구를 박는
건 좋은데
로고를 박은 다음에 취업 하는거에 문제가 솔직히 가장 큰 문제예요
뭐 가장 단순한 로깅을 박는 방법은 대부분 이제 뭐 잡아서 보 하시는
분들은 때 많이 봤는데 빠 일에 서버를 로깅을 하는 거죠 뭐 그게 그냥
시스템 프린트 아웃을 한 다음에 그걸 및 렉터 갖고 파일로 적거나 뭐
시작도 그렇게 해요 그럼 이제 파일의 적은데 문제는 파일이 적으면 적은
수의 용량이 커 지지 않아요 서버 감아 1년동안 돌고 있어 로브 빨 몇
기가 바이트 될 수도 있잖아요
그러면 이제 이 로그 파일을 이제 로테이션 이라는걸 많이 해요 그러니까
이제 뭐 용량이 뭇 뱅 내가 넘어갈 때마다 새로운 파일 만들고 이전
파일은 나쁘거나 뭐 이런식으로 로테이션을 하거나 아니면 매일매일
로테이션을 하거나
그래서 뭐 그 로테이션 이라는 게 있고 실제 의 녹을 로테이션을 이제
베컴을 만들었는데 그 그 예전에는 로그가 웹서버에 쌓여 가면 갈수록
용량을 더 먹기 때문에 언젠가는 용량이 넘쳐 나겠죠
그럼 이걸로 또 백업하는 거에 문제도 생겼
그래서 예전에 서버를 직접 올릴 때에는 이런거 뭐 백업하는 스크립트
만들어 놓고 별짓 다했는데
요즘은 이제 클라우드 서버를 많이 쓰기 때문에 이것을 자동으로 해줘야
된다고 생각을 누구나 하잖아요 근데 이제 제가 아마 좋은 을 썼을 때
aws 이 녹을 로테이션을
철저히 은 가능한데 생각보다 그냥 버튼 먹다 클릭으로
되게 해주는 그런 시스템 2 거의 없었다고 맞는 것 같아요
그래서 결과적으론
이 아까 말했던 파일 기반 시스템 로그 로테이션 은 카 플랫폼 각
프레임워크 모예스 빼내고 허나 자바 스프링 이나 뭐 거기 모델의 t
로그로 꼽 뜻
그러한 제 팀 가 뭐 그런거에 영향을 받을 수 밖에 없죠 그냥 빨리
생성하는 그 오직 자체가 그 로그 라이벌이 의 기본이니까
그래서 오히려 이 로깅 시스템 은 요즘 추세가 그런것도 같고
아 곧바로 소파 1 시스템이 아닌 다른 api 로 쏘는게 일반적이 되가고
있어요 되게 재미있는게
api 나이에 따른 스토리즈 있다 클라우드 스토리지 쪽으로
그래서
한때는 이제 뒤 저도 되게 많이 고민했던 부분이 고 저도 되게 힘들었던
부분인데
현재 지금 이제 만약 내주어 에 올리는 상황이 되면 은
트레이스 로 글을 쓰면 되요 트레이스 5 라는 게 뭐냐면 그냥 시스템
아웃이 랑 똑같은 거예요
프린트 라이 콘솔 프린트 날 그러면 일단 그 콘솔로 프린트가 되는데 그
뒤 딴에 이 프린트가 되는것을 어디로 트랜스포트 할거냐 파일로 옮길 거냐
아니면 여기에 a 피해를 쏠 거냐 아니면 무슨 다른 애 이 펜을 쓸 거냐
이런거를 그냥 단순하게 청 애들 이렇게 플러그인 처럼 집어넣을 수가
있어요 그러면 실제 실행되는 웹 서버 코드는 단순히 로깅을 뭐 이제
트레이스 록을 하는 거죠 뭐
단내 코에서는 로 거 자체가 아이프레임 어떻게 에서 나오니까 그걸 쓰면
되고
그럼 그렇게 로깅이 됐을 때 이제 파일을 작성할 트랜스포터 내가 적겠지만
애저 에서 앱 서비스도 쓸 때는 이제 여기다가 어 그래 나 로깅을 아빠
1 로그 하고 뭐 이거 몇이 마다 없어지는거 좋은데 나는 이것을 내주어
블라 스토리지에 놀래 라고 그냥 뭐라 그래
스위치 않아 키고 블락 스토리지 위치만 정리해주면 은 그 자동 우리
클라우드 스토리지 들어가요
그럼 그리고 그런 언제는 찾아볼 수는 있죠 문제는 찾아보는 지금
인터페이스가 되게 구려서
뭐 되게 복잡하게 찾게 해야 되지만 어쨌든 로깅 은 남고 그 로깅
들어가는것을 즉 클라우드 스토리지 이기 때문에 용량은 무한정 늘어나
거든요
늘어나게 두는 거예요 그럼 이제
너무 드러난다 그러면 또 거기에 365일 정도 지난 로고는 뭐 지워라
라는 식으로 이제 날짜를 정해 줄 수 있는 방법도 있어요
그래서 로그를 그냥 정보 용으로 마구마구 모아놓은 로그는 그렇게 하면은
훨씬 깔끔하게 처리가 되어 당연히
그럼 이제 그 다음에 문제는 실제 서버에서 어떤 문제가 발생했을 때 2루
그가 지켜야 되고 이루가 찍히는 것을 곧바로 한눈에 쉽게 볼 수 있어야
된다
이런 문제가 생기는 거죠 그래서 예전에 몇 년 전만 하더라도 이제 키바
나 뭐 l 아틱 서치 기반의
로그 취업을 해서 한눈에 보여 주게 하는 그런 이제 스택이 되게 유명
했었어요
미제 그건 또 게이설 7 되게 많이 해야 되고
저도 그거를 한때 죄 서버에 쓰려고
전 회사 있을 때는 직접 만들어 썼고 누가 만들어 줬고
지금 있는 회사에서는 모든게 클라우드 기반 이니까 아 이거 자르고
스토리지 에는 그런 서비스 작고 해보자
그래서 찾아 갔고 이제 엘라 티셔츠 같은거 더 보려고 했는데
아무래도 이제 aws 가 굉장히 대세였던 시절이다 보니까 뭐 지금도
당연히 더 제 크게 이 떠올려 있었지만 애즈원 훨씬 적었어요
aws 연고 플러그인 이런건 있는데 그 플러그인도 이제 애저 나 이런데서
보는것처럼 털이 단순하게 클릭 한번으로 할 수 있는 그런 플러그인이
아니라 되게 복잡하게 설정해줘야 되고 그 설정도 그냥 웹 서버 클라우드
포탈 에 설정이 아니라 코드 쪽에서 설정도 해야 되고 막 이런 되게
복잡한게 있었어요 그래서 아 되게 이거 맘에 안든다 라고 하고 있다가
결과적으로 저희가 모르간 냐 면 애조 자체에서 제공하는 그런 음
애플리케이션 인사이트 하고 있어요 정확히 보면은
지금 웹서버가 도는 성능 측정 이라 이런거를 위해서 만들어 놓은 그런
서버 라고 해야 그런 서비스 인데
뒤 책 그중에 이제 장점 중에 하나는 제가 로깅 으로 집어넣는 모든
메시지가 이 애플리케이션이 상태의 잎의 로 가게 할 수 있는 그런 모조리
있어요 되게 간단하게 설치가 가능하고 심지어 내가 코드의 설치한 하더라도
애저 포탈에서 이미 디플로이 n 서버 상에서 설치도 가능해요
그러면 일단 체로 그가 모두 다 여기 찍힌 찍히는 거에요 근데 문제는
모이게 로그가 뭐 91 동안만 가지고 있는 단점도 있고 몹에 컵을 알렌
못 돈을 더 내야 되고 이런거 있는데 어차피 아까 말했던 때 컵은 답을
앱스토어에 주로 가니까 상관이 없고
그럼 실시간 나은 로 그들을 이제 다 취업이 되고 검색 다 가능해요
그리고 심지어는 애가 뭐 어떤게 시간이 얼마 관련 내의 리퀘 스가
들어와서 이런 로고를 찍었고 이게 다른 db 로 출 했고 다른 api 를
호출 했는데 여기 속도가 얼마 벌려 내 이런걸 어떻게 한 눈에 보여주는
거고 이건 왠만한 찰 때까지는 공짜에요 그래서 되게 이용하게 쓰고 있지만
이제 여기서 한단계 다 더 나가면 재밌는 게 뭐 있냐 며 는 저희는 서버
쪽에 문제가 있을 때
이제 뭐 익셉션 이 나는 경우도 있지만 저희 서버는 기본적으로 이 섹션이
거의 안나요 사실은
그래서 저희 서버는 문제가 있으면
아 익셉션 일단 났다 하면 일단 그건 서버 상에 문제에요 왜냐하면 저희는
기본적으로 코딩 스탠다드 자체가 일반적인 경우에 익셉션 을 쓰지 않아요
그래서 이색적인 안다는 것은 저희가 대 미리 대처하지 못한 예외 상황이
진짜 발생했다 는 거고
그럴때 2.2 뜨면 은 그 애플리케이션이 사이트에서 r 로트 자체를
만들수가 있어요
그러면 있어 바이 새터 뜨는 순간 이메일 써라
그래서 이메일을 받아요
4 그쪽을 또 다시 얘기할 거지만 이메일 포맷 자체가 맘에 들진 않지만
지금 얘기하자 이메일 폼에서 그냥 서버 에 결정이 났어
지난 몹에 몇 분 동안의 1번이 났어 이거만 보여주고 그 실제 익셉션
임원진은 제가 에지오 에 들어가서 보긴 봐야 되요
그것처럼 단점 이라고 생각하는데
그래서 이제 그 시스템이 있기 때문에 저희도 똑같은 생각을 한 거예요
그러면 우리가 이미 이제 예측을 한 문제라 거나 아니면 실제 일어나지
말아야 하는 경우들이 있어요
뭐 이건 절대 널이 될 수 없네 나얼이 된다거나
그러면 그런 경우엔 저희는 이제 크리티컬 로브를 찍어요
로그 레벨이 즉 크리티카 아주 미친듯이 힘든 아이
괴로운 일 안 좋은 일 에라 애라는 그냐 있을 수 있는 일인데 뭐 그래도
안 좋으니 언젠가는 고체 할래
그 저희는 크리트 칼이나 면은 이거는 정말 119 상황이나 긴급 상황
이라고 생각을 하고 에러가 나면 은 5 챙 해 놓았다가 1일 주 뒤에
고치지 않은 그런 생각을 해요 근데 어쨌든 크리티카 리나 든 애라 가나
든 저희는 이메일을 받고 싶었어요
이메일을 근데 문제는 저희가 로그를 지금의 트레이스 로우가 찍히는 거
잖아요 그럼 거기에 분명히 아 뭐 이게 라 등급인 g 크리트 같은 급인
지켜요
4 그거에 맞게 알려 틀을 설정할 수 있는 방법은 없었어요
예전의 그 저희가 어떤걸 했냐면
아 그러면 어떤 걸 아트를 집어낼 수 있을까 라고 보니까
메트릭 이란 걸로 알라 털어낼 수가 있대요 매트 릭이 뭐냐면 예제가 제
서버에서 이 애플리케이션이 사이트 쏘는 거에요 않아
뭐 가장 간단한 가면 지금 남아있는 뭐 뭐 예를 들어서 저희가 u 저한테
주는 어카운트 100개로 정해져 있는데 아 지금 남아있는 6화 투수가
90개 야 이렇게 대한 가끔 싸주는 그런 ap 가 있어요 그럼 트랙을
하는거죠 지금 현재 값이 어떻게 되는지
그럼 99 10 94 주다가 이게 43 10 20 가려서 딱 엿 12
되면은
이 그래프가 보여요 거기서 서버 에서 근데 이게 10 이하로 떨어지는
순간 이메일을 싸 줘 라고 알려 틀을 정할 수가 있어요
그저 가 그거를 딱 고민 하다 보니까 아 그러면 우리가 1호 걸을 할 때
로깅을 할 때 아까 트랜스포트 가능하다 그랬잖아요 그 밑에 이 로그
메세지가 어디로 가는지는 우리가 다 플러그인을 꼬마 놓을 수 있다
그래서 로고 안에다가 2매 트릭 트래커를 집어 넣었어요
그래서 크리티컬이 날 때마다 그냥
앱플레이 사이트에 크리티카 한번 암탉 찍어 줘요 그리고 에러가 날때 마다
에라 한 번이라고 찍어 줘 그러면 이게 영에 0으로 있다가
학질 로 올라가는 순간 명을 넘어서는 순간 알버트 를 박아 놓으면 되요
아 이게 갑자기 0.5 보다 커진 순간에 우리 이 밀사 줘라
그래서 저희 알버트 시스템을 그렇게 구축을 했었어요
금 이제 이제 문제 생길 때 마다 5분 마다 문제 생길때마다 이메일을
받는건데
중요한 것은 ro 트가 있다니까 만약에 메세지가 일로 올라갔어요
에러가 날때 마다 이를 찍자 나요 근데 에 나가 떨어질 때면 0 을 찍을
방법이 솔직히 없거든 모든 로그 마다 영을 찍을수도 없고 그 일로 계속
유지가 되요 그러면 더 이상 계속 문제가 생기더라도 아 너트가 오지 않는
문제가 있었어요 그래서 이거는 그냥 뭐 이제 웹 자비 라던가
애조 펑션 같은거 이제 한 5분 마다 한 번씩 30분마다 도는 씩 돈을
한번씩 보는거라 함수를 만들어 두고 그냥 이야 에라 메트릭 영어로
떨어뜨려 아 뭐 워닝 매트 경우로 떨어뜨려
이런식으로 이제 코드가 따로 돌아 하나가 웹서버 올
금 이제 우리가 어쩌다가 에러가 딱 나왔고 1 웃다 올라갔으면 5번 뒤에
다시 0 을 찍어 주니까 어쨌든
0 보다는 높고 일보다 나지 평균이 생기잖아요 지나 5분간 에 그런 이에
계속 0이면 결국 0으로 가는거고
그래서 그런 식으로 해왔고 계속 5분마다 영어로 쏴주고
그 중간에 한번씩 에라 나 이제 크리티카 할 때마다 일로 딱 올라가면서
이 메일이 오게 만들었어요
일단 기본적으로 문제가 생길 때도 팁 계셔 노니까 좋았죠 그리고 그것
때문에
박스 팬 매일 받으니까 귀찮으니까 일단 문제 터지면 고쳐야 됐고
그런데 아까 말했듯이 여기서 문제점은
일단 이메일 자책은 야 크리티컬이 났어 라고 밖에 안보이지만 보여주는거
그리고 이제 그 다음에 생긴 문제는
좀 지저분 하잖아요 로그를 찍는데 거기다가 이제 로그
대다모 애나 크리티컬 올때마다 매트릭스 싸주고 있고 이걸 내가 해야 되지
이미 이 모든 정보가 애플리케이션이 사이트에 있는데 걔네가 썰 침 안되게
제대로 만들어 주고 그 설치 결과에 따라 r 로 트 가 나오면 되는 건데
라고 생각을 하고 있었죠 근데 최근에
이제 애플리케이션이 사이트에 프리뷰 기능으로
아아 썰 치 알버트 라는 기능이 생겼어요 그것이 또 제약을 써봤는데
잘되요
근데 저희 쪽은 앞으로 그쪽과 이동할 것 같긴 한데 이 개념 뭐냐면 썰지
쿼리를 만들 수가 있어요 원하는 대로 그 제가 쓴 썰 치커리 뭐냐면은
아 이 트레이스 로 그중에 지나 5분 동안 크리트 칼 있는게
연계의 이상 그러니까 뭐 0개 이상의 연계를 초가 0.5 이상이면 은
뭐 하나라도 있으면 그러면은 이거 날로 조건이다 라고 썰 7을 만들어두고
이걸 5분마다 음식 실행이 되게 만들 수가 있어요
애플리케이션 인사 이내에서 그리고 이 조건이 만족 이 됐을 때 이런
행동들을 하는 행동을 정할 수가 있는데
5 행동들이 많이 좋아졌어요 첫번째는 이메일을 써라 가능하고
두 번째는 이 as 앱이 있거든요
모바일의 그 앱으로 푸쉬를 살아도 되요
이사람 개정으로 그리고 세 번째가 제가 지금 굉장히 좋아하는 건데 왜 푸
글 싸라
그래서 왜 푹을 쏘게 되면 은 이거를 웹 폭을 이제 슬랙 에 연결하거나
이러면 은 슬랙 에 이제 문제가 날 때마다 메세지를 볼 수가 있는 거야
구이를 터졌어 긴급 상황이 야 야 에 라터 쏘 이런식으로
그럼 거기다가 이제 에러 메세지를 자세하게 적고 싶은데
앱인 플렉 애플리케이션인 사이트에 보면 은
거기에 있어요 그 최근 모 25개 문제 생긴거 25 개점 50개 인지 그
디저트를 이제 테이블로 넣어서 보내는 외국에 보내는 방법이 있는데 문제는
슬랙 자체에서 이 필드를
보지 않죠 슬랙 에서 보는 필드는 이미 뭐 타이틀이나 뭐 텍스트 있고 그
밑에 추가 필드는 슬랙 이 아무리 받아봐야 보이지 못하는 거예요 그래서
저는 이제 단계별로 생각하고 있는데 첫번째 단계는
그냥 이메일 쏘고 왜 푹 쌓았고 문제가 있다라고 얘기해 주자
뭐 지금 하고 비슷한 거지만 일단 최소한 아까 로그에서 매트릭스 아주는
일일이 그 짓 안해요 되니까 그걸 뺄 수 있겠다 첫번째 단계 고 두 번째
단계가 생각하는건
이 왜 푹을 보내는게 슬래브 로 직접 보내지 말고 제가 따른 서버를 하나
만들어서 아니면 따른 이제 왜 뮤 아래를 하나 만들어서 글로 받은 다음에
이제 그걸 받으면 은 거기 나온 바디에 있는 그 모 씨 제롬 애들이
있어요
뭐 이거 로그 에러 였고 여기 에러 메시지가 이거였다
그럼 이것을 제가 8 생을 해서 이거를 이제 다시 메인 텍스트 바디
텍스트의 붙이는 거죠
슬랙 이 이해하는 데 딱 하나 때 깨끗하게 만들어 슬랙 에 있는 포맷팅
룰 대로
이것을 다시 저희쪽 슬랙 웹뷰 아래를 싸주는 거에요 그러면 이제는
앞으로는 문제가 날 때마다 일단 이메일이나 이런건 와야 되고 이 메일이
온 상황에서 업 맵 에러 메세지가 뭐지 라고 재빨리 볼 수 있는 방법은
저희쪽 슬랩 방에 들어가서 꼭 이해가 멧세지 구나 야 이거 돈이 문제
기간이 각 고쳐 이렇게 빨리 끝낼 수가 있다는 거고 그럼 고치는 사람은
실제 애플리케이션이 사이트에 줘 로그인 에서 열심히 보면서 아 이게
문제였고 이런 리퀘스트 가 들어왔고 좀더 자세한 정보를 볼 수 있다는
거죠 그래서
여기 나 여기까지가 제가 지금 갈려구 하는 방향이 에요 그 로그 가지
문제가 생길 때 로 가 발생하는 거
그럴 경우에 그리고 취업과 정보를 빨리 보여주고 재빨리 대응 상황을
대응을 할 수 있는 단계까지 가는게 이거 겠구나
그래서 최근에 제가 많이 보고 생각하고 또 열심히 만들어 놓은거 기만
일이다 아키텍처 세우고 9
이것저것 실험해 보고 한 거기 때문에 되겠구나 라고 생각을 하고 있어요
음 오늘 얘기는 쓸데없이 길었는데
뭐 제 시작은 그랬어요 로그 하고 디버깅은 다른거 나 디버깅할 수 있는
걸 옥으로 하고 있다는 것 자체가
개발에 절반 버리고 있는거나 라는 생각을 하고 있고
아 모두 거친 아까 지나가는 얘기로는
어쩌 뒤로 글 쓸 수밖에 없는 환경이 라는건
아
생각보다 툴이 구려서 그런 경우가 많으니까 좋은 투로 쓰는 것이 좋다
라는 얘길 했고 세 번째는 결국엔 프로드 단계에서 썹 로고를 취업할때
모독을 로테이션 하고 파일 로그 하고 이런거 다 있지만 이제 점점 이제
클라우드로 가고 있다는 가정하에
클라우드 상황에서 라면은 아까 말했던 것처럼 에 블라 스토리지 나 이런
뭐
아마 주님의 sd 스토리지 겠죠 그런 스토리지의 그냥 쳐 박는 것만으로
로그 로테이션 해야 될 문제는 좀 좁다 라는 게 있고
아모 애저 에서는 그걸 단순히 짐을 말 그대로 트레이스 로그 에다가
콘솔로 구요
2 버튼 1 펴 주는거 스위치 하나 켜 주는 걸로 가능하고 세번째는
라이브로 그의 문제인데 라이브로 그 가 이제 실제 문제가 있을 때 생기는
로 구야 정보로 건달은 거거든요
그 문제가 있어 생기는 로그를 처리하는 방법에 대해서 결과적으론 뭐
엘라스틱 설치나 뭐 뭐 키바 나 이런거 기반으로 한 사람이 크게 기름이
정확히 보였지
키바 나는 이 비육우 여
엘라스틱 설치 기반으로 로그를 하는 게 그냥 올라 즉석 이라고 했나
저 예전에 무슨 무슨 스택 이라고 불러 썼거든요 걸을
램프 스테이 건 아니고 엘크 스택 이라고 불렀어 엘크 그렇다
엘라 틱 설치 로그 스타 시 키바 나 이렇게 세 개에서 엘크 스택 이라고
불렀고 했었는데 결과 줄 기반 엘라 티셔츠에 다쳐 없는거예요
로보스타 씨는 그냥 이 로그를 서버 에서 가져왔고 els 끝에 보내주는
뭐 이런 이런 개념이 어떤 것 같고
그럼 그런 apl 쓰거나 그러네 그런 엘크 스테 그림이 서비스하는 그런
회사들도 있어요
제가 봤는데 별로 가격 그때 성능 비 용 설치 비용 으로 봤을 땐
저한테는 정말 별로여서 쓰려고 쓰려고 하다 말았어요 가입도 돼 있어
쓰려고 하다 보니까 이상에서 모터스
이제 그 상황에서 이제 클라우드 서비스들이 제공하는 그런 기능들이 나오기
시작을 하고 으 이 애 주었 아니라면 이제 애플리케이션이 사이트 라는
그런 훌륭한 서비스가 존재해요
거기에 이제 로고를 쳐 받고 모처 라는 것도 그냥
애플리케이션이 그냥 누계 패키지 않아 깔고 이내 입을 하면 되요 그
순간부터
그러면 그 순간부터 보면 되는거고 심지어는 제가 로 칼에서 디버깅 하는
순간에도 보여요 그 애플리케이션인 사이트 그런 정보들이
그거를 쓰면 되고 그런데 그 다음 단계는
문제가 생겼을 때 알버트 를 받는 방법
제가 아까 말했던 것처럼 메트릭을 써가고 이렇게 이상하게 하는 법도 있고
작년까지는 그것 밖에 안됐어요
작년은 중반까지는 이제 로그 서 치 ro 트가 나온 상황에서 는 아주
풀잎 이지만
그거를 쓰기 시작을 하면 은 이제 이런거 쓸데 없는거 다 안하고 모든
것은 그냥 클라우드의 도는거 고제 웹서버 자체는 문제가 없는 거고 아니면
애플리케이션 인사이트는 따른 써보니까 걔네가 자체 제공하는
생각보다 꽁짜 티어가 굉장히 넓구요 굉장히 용 용량이 크고 그래서 그냥
꽁짜 티어를 열심히 있으면서 아니면 서버를 잘 분리하면 꼼짝 티어를 배울
수 있을 것도 같아요
그러면서 이제 로그 아까 rot 안아주고 알려 투 싸줄 때 이메일이나 뭐
푸쉬 노티피케이션 가능한 당연히 해야 되고 그 외에 정보를 빨리 보고
싶으면 제가 말했던 방식으로 웹 푹 연결에서 한번 왜 폭 릴레이 하는
방식으로
그렇게 해서 하면은 로그의 로그 생성이나 로그의 대응이 굉장히 좋아질 것
같아요
양이 많아서 빨리 얘기하려고 했는데 너무 빠를 빨리 얘기한 것에 죄송하긴
하네요
그 정도로 정리가 된 것 같으니까 오늘은 이만 끝 낼게요 예 뽑혔습니다
