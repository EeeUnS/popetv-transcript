음 포프 입니다 오늘은 db 쪽 얘기를 좀 해보려고 해요
이제 뭐 게임 쪽에서는 아직 그렇게 많이 안 쓰지만 요즘은 좀 싸요
모바일 게임에서 뭐 라이트 c 코스 코스 콘 라이트 쓰고 막 이래서 서버
에스 겠고
아 씨 콜 데이라 베이스만 있어요
이제 뭐 앞으로는 점점 도씨 컬러 가는 부분도 굉장히 많은데 그것은
나중에 얘기하기로 하고
제시 퀄 데이터베이스 의 마 씨 코리 락을 sql 얘기하는건 요정 10시
쿼리 라 그래요
어시 퀄 데이터베이스의 이제
데이터를 받을 때 보통 프라이머리 키를 좋잖아요 id 키에서 아이덴티티
놓고 그러면 자동으로 인설 탈때마다 버너 들려주는 오오토리 클레멘트
놓았고
이렇게 해서 거리에 프라임 lq 많이 쓰거든요 이제 이게 많이 썼는데 그
최근 들어서 이제 새로운 패턴이 많이 나왔잖아요 c qrs 라던가 이벤트
솔선 이라던가
이런거에 보면 그냥 이제 우리 디자인 패턴 쪽에서 얘기하면 리더 라이터
가 분리되는 그런 패턴이 거든요 그래서 음 메세지 큐 같은걸 이용해서
라이터는 라이트 넣고 그런 메세지가 막 나온 다음에 이게 db 를 나중에
집어 넣어 주는 거에요
그리고 믿어 할 때는 약간 비동기 가 될 수밖에 없죠
미드를 여기 해 오고 그래서
이게 장점이 뭐냐면 시코 렌은 데이터를 집어 넣을 때마다 라이트 할
때마다 낙을 거거든요 그리고 현재 이렇게 분산 c 컬 자체가 제대로
구축이 안되어 있고 지코 레오나 오래된 시스템 이고 그렇게 c 컬 하나만
이렇게 테스트에서 하나만 쓰거나 아니면 무슨 뭐
논리적으로 좀 분리를 시키죠 유저 넘버 m50 부터 첨벙 까지 이거이거
데이터베이스 뭐 몇번 부터 8 적어 데이타베이스 이런식으로
뭐 어찌보면 핵 인데 그런걸 하다보니까
문제가 뭐냐면 그 아기 너무 많이 걸려요
유아기
db 를 쓸 때마다 나기 걸리니까
어
뭐 성능 향상으로 * * 죄다 하거든요 그래서 이제 그 중에 하나가 cq
아래 쓰고 나중에 어찌 법안에 대해 노 식 쿼리 라던가 아니면 은 제대로
된 분산 시코 서버가 나오는 그걸 하겠죠 근데 문제는 언제나 문제니
거에요 만약에 이걸 여러 개로 나누었다
그러면 이것을 다시 원래대로 합치고 싶을때 있잖아요 떨어진 것 두개를
합친 다곤 아니면 처음엔 분산으로 했다가 기회가 많은 합쳐진 다거나
그러면 프라임은 프라이머리 키 라 잉
아이디어 뇨 오토 잉크의 멘다 2d 면은 이거를 머치 할 수 있는 방법이
없어요 아니 뭐 지를 하긴 하는데 이 인테 그리 티라 그러나요 그걸
유지하는 살 방법이 없어요 왜냐하면 은 이 뒤에는 db 에서는 이 파랗게
바꿔 버려요 여기서는 1234 있었죠
밑에서 1 2 3 4가 있어요 두개 합치면 번 어떻게 할 거야 그렇죠
그런 프라이머 키가 바뀌는 단점이 있어요
그래서 이게 좀 안 좋구나
그리고 c qrs 개념에서는
처음 이제 데이터를 집어 넣을때 큐에 집어넣는 거거든요
이벤트 소식이 비슷하고 뭐 반드시 그런거죠 대부분 그래요
q 에 놓으면 은 그 q 에 들어갈 때는 id 자체가 did 가 아니에요
5 탱크 맡은 안되니까 그래서
안 되니까 많이 안들어 갔으니까 안 되는 거죠 그래서 그 대신에 이제
다른 아이들 쓰거든요
뭐 스트링 아이들 쓴다거나 보통 요즘 9 이들을 많이 써요 guid 즉
그 위드가 64비트 128bit 같아요
128bit 자리 숫자 인데 이게
글로벌이 유니크 i dnt 파이어 라고 해 왔고 충돌이 왠만한 없어 뭐
있을 수 있어요 근데 아직 제가 나는거 못 봤어요
그래서 9 이드로 내면은 그냥 뭐 뭐가요
숫자 듣자 모 9434 4 - e - 오마이 필요 경력
이런식 이런 패턴이 구이 되거든요 그래서 이제 그거를 놓았고 하면은 9
이들을 했고 db 에 넣으면 어떻게 하면 프라이머리 키가 구이가 되는
거에요 뭐 스트링으로 제공할 수도 있고 9위 들도 있어욤 isk 아니
mssql 에서는 sqlite 에서는 없고
그럼 스팅어 써야겠죠 프라임에 프라이머리 키를 스트링으로 잡아두고 그거를
연산을 하는 거에요
물론 그러면 사람들이 얘기하기는 아디가 스트링을 넣으면 너무 드리지 않냐
급하면 키스 로 쓰면 너무 드리지 않냐
별로 아니라 생각보다 그거 로 인해 오늘 성능 저하는 10% 미만으로
알고 있어요
그래서 그걸로 놓고 그러면 나중에 뭐지 한테도 쉽잖아요 9 이득에 aaa
bbb 었으면 합칠 때 aa 비율이 들어가니까 문제가 없거든요
그러면 나중에 시 퀄 서버가 아니고 따른 걸리더라도 그걸 키로 쓰면
되니까 문제는 없어요 제가 쫌 전에 성능 저하가 덜 없다 라고 말씀
드렸잖아요 물론 커는 제대로 인덱스 걸고 물론 아이디로 들어가는것은 까
프라이멀 k 좋아한다는 인덱스 얼리기 때문에 그것은 빠르지만 스트림
컴퓨팅 드릴 수 있다
그것도 뭐 제가 볼때는 내부적으로 최적화가 되는것 같아요
뭐 헤지 그걸로 인해서 이해 쉬를 인테리어로 뽑은 나를 비교할 수도
있겠고 아니면 수치인 컴퓨터에 수를 해도 실제 생각보다 그렇게 내리지
않았어요 그래서 그걸로는 성능 저하는 10% 밖에 안 돼요 사실
물론 10% 때문에 뭐 어쩌고 저쩌고 어쩌고 해서 10% 가 넘들이 다
못하겠다
그러나 라이트 할 때나 걸리는 것보다는 지 qrs 통해서 그런 식으로 9
위드 배치해 버리는게 제가 볼 때는 훨씬 빨라요 를 디벨라 카테나 전체를
걸어야 되니까
브라이트 할 때마다 리드는 상관없고
여기서 오는게 다른 성적 하나가 있어 되게 재미있는게 따른 성능 조화가
있어요
이게 대체 왜냐면 그
db 에 데이터를 때 이 2 3 4 5
이렇게 좋잖아요 그러면 db 데이터 구조가 그 2 아이디 순서로 있잖아요
그거 순서대로
디스 가르칠 때도 올라 근데 9 이드가 들어가며 는 말에 aac cc 가
있는데
bbb 가 들어오자 나요 그러면 비를 중간에 놓고 c1 카피 하거든요
그럼 이거 보통 생각하는 그 어레이 같은거 중간에
뭐 삽입할 때 뒤에 거다 이 뒤로 밀어야 되니까
그러면 그게 이제 5 애니 달하는 문제 있잖아요 그 문제가 똑같이 생겨요
문제시 콜 서버는 디스크에 써야 되니까 굉장히 들으시죠
그래서 이거를 거기서 오는 성능 저하가 전에 그래프로 공개 있는데 굉장히
높아요 모호한
몇 10% 가 되어 진짜 그걸로 그 대신 그러면
이걸 어떻게 아냐
그래서 제가 저도 고민을 많이 했어요 그러다가 최근에 발견한 것과 뭐냐면
여전히 10% 5 & 만으로 할 수 있게 하는 방법이 있더라구요
이 아이디어가 뭐냐면 돼 간단해요 프라이머리 키
이거는 여전히
구이 들었어요 그럼 아까 말했던 그런 데이터 충돌의 문제가 없어요
그 대신에 실제 db 에 넣을때 아이덴티티 라는 섹션이 따로 있거든요
그게 이제 i 예전에는 id 를 숫자로 해서 프라이머리 키 와 아이 등
티랑 을 같이 있었어요 근데 이제 그 아이를 텐가
맞을 거에요 네 이제 그 대신에 그 이드는 tk 로 써요 프라임을 기록
그리고 그 다른 필드 라 추가하는 거에요 예를 들어서 뭐라고 그럴까
인덱스 id 뭐 그런 식으로 이름을 넣은 다음에 아니면 무슨 뭐 오더
id 그 순서를 정한 대로 모두 id
그걸 얘네 방식으로 쓰는 거예요 그러면
gdb 는 언제나 그 그 순서를 늘 때 1234 우리가 그 숫자 있잖아요
그것들은 순서를 놓고 대신 프라이머리 키는 아까 스트링으로 보는 거에요
그죠
실제 db 를 집어 넣을때 쓰셔서 그대로 들어 가고 계신 프라우 케언즈
자국이 되기 때문에 나중에 이거를 다른걸로 뭐지 하거나 합칠 때
아니었냐 마이그레이션할 때 그때는 그냥
2 아까 ide 섹션 잇죠
뭐 제가 오더 와이드 라고 했던 그걸 왜 싹 무시하고 요
이 데이터 안 뽑고 다시 있어 타 보면 되는 거야 그럼 프라이머리 키는
갈 아 연재는 유니크 하니까 충돌이 안나고 아이디는 역사 새로워 지는
거죠
그다지 에 데이터 마이그레이션 할 때는 순수하게
그냥 id 섹션 탕 무시하고 숫자 무시하고 그냥 pk 와 극우 이드
그거와 이제 나머지 데이터가 그건 스스로 보면 되는 거더라구요
그러면은 그래서 이제 제가 벤치마크 나온거 봤는데 여전히 10% 정도의
오보에 수밖에 없어 써서
보면서 아 이런 꼼수가 있구나
제가 볼때는 음 모르겠어요 과연 이게 뒤쪽에서 고추를 지 모르겠는데 머구
이들을 id 와 pk 를 같이 넣을 때 어떻게 될지 모르겠는데
아 제 생각에는 좀 가장 깔끔한 것 같아요 이 술 탈 때 으 이 id
섹션 세로 그냥 인테 got 코멘트 냅두고 프라임을 키는 9위 들어가고
그러면은 아 성능도 잡을 수 있고 10% 정도 저하나 상관없으니까
말 그대로 메세지 큐에 받은 다음에 라이트 하는 방식으로 라이터 하는 뭐
드레드 라고 하죠 그건 언제나 하나만 있게 하고
위드는 뭐 몇 백 개가 되도 상관이 없으니까 뭐 락으로 안하고 그 생각해
볼 때 아 이러면 정말 db 성능은 빨리 잡을 수 있겠구나 생각이
들더라구요 그래서
근데 이거 의 단점은 음 실시간으로
라이터 자면 리드해야 하는 경우 있잖아요 거기에는 좀 어려워요
중간에 이벤트를 가로 쳐박고 잡느라
그래서 제가 최근에 이렇게 봤던 그런 꼼수 중에 아참 괜찮은 방법이라는
생각을 있어서 소개를 드렸고
음 뽑혔습니다
