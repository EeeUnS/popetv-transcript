이 아니라 세포 핍니다 음
최근에 이제 제 비디오의 달린 댓글 중에
음 그런 댓글이 있었어요 제
요즘 포프 님이 너무
관리자로 만 가는게 아닌가 걱정이 된다고
그 얘기를 듣고 이제 그 같은 거기다 댓글을 남겼는데
그거에 대한 답변을 좀 해 볼 필요가 있을 것 같은 비디오를 만들어요
이 생각을 오랫동안 해왔고 사실 이제 언제나 비디오로 만들어지 생각을
했는데 뭐 좋은 기회가 생각이 든 거죠 제가 한참 이제
미드 프로그램을 하고 있을 때 그냥 무소 2 3년 전인 것 같아요
150 밀리언 달러 짜리 프로젝트 하면서
그때 이제 회사의 다 보내줘서 아키텍트 이제 마스터 클래스 라는 코스의
불려 갔어요 되게 유명한 코스 고 실제 되게 유명한 분이 진행하는 코스에
어
4 보면서 뭐 그 사람하고 동의하는 것도 있었고 당연히 동의 안하는 것도
있었지만 일단 그 사람의 자기를 굉장히 잘하는 거고 그 사람이 말하는
것에는 거짓이 없다는 것은 확실히 알아요
그 사람이 했던 말 중에 네 저도 코딩을 되게 좋아하는 스타 이었고 그
때도 굉장히 많은 코딩을 하고 있었어요
팀내 들은 프로그램의 15명 관리 하면서도
이제 또 이제 제가 안하면 못나가는 것들이 있기 때문에 코딩 열심히 하고
그랬는데 그때 이제 그 아키텍트가 했던 말이 그 거였어요
그 강사가 아키텍트 는
코딩을 하지 말아야 된다 라는 말 딱 했어요
약 듣는 순간 것 통해 파악되는 거에요 무슨 개소리 g
뭐 그대가 될수밖에 없어요 왜냐하면 은 제가 이제 말로만 혀로만
프로그램이 하는 사람중에 굉장히 문제가 많은 이제 씨니어 급등을 많이
봤거든요
말로는 되게 열심히 8 보람은 하다못해 보면 어디서 많이 제 주어들은
책에서 주어들은 그런 지식 같고 이제 막 열심히 말만 하는 거죠
똑같은 의미로 제가 그래서 책소개 만하는 강연 들을 되게 안 좋아해요
그만큼 개 신뢰가 없다 는 거니까
그래서 그렇게 딱 집 거부감을 닭 들었는데
1 그분이 그거에 대해서 15분 정도로 설명을 했어요
내 쇼윈도 설명한 마지막 순간에는 그 부분에 의도가 뭔지 알았고 그
그분의 말하고 동의를 하게 되죠
2분이 누구냐면 이제
이름이 뭐더라 주발 로우 인가 라고 해서
마이크로 서비스를 처음 만든 사람이 어떤 의미에서 마이콜 서비스 개념을
처음 않는 사람이고 그래서 그 마이크로 서비스의 필요한 언어 를 처음으로
이제 개발을 한 사람이라고 보여 맞아요
그리고 그 언어 굉장히 유명했고 사실은 단내 s 를 대체할 언어 였는데
이제 마소가 내부적으로는 그걸 쓰면서
이제 에 쥬얼을 팔아 먹기 위해 애저 가 마이크 업에서 적당 하잖아요
일부러 그 언어를 이제 잘 안 쓰고 있는 그러니까 잘 밀지 않고 있죠
일부러
내부적으로 애드온은 다국어로 들고 있을거라 생각을 해요 그 wcf 란
언어의 요
그래서 그거에 굉장히 크게 참여했고 그 분야의 최고의 권위자 기도해요
그리고 wcf 를 안 해보신 분들이 더 많을 거 같은데 이거 를 해보시면
이게 차세대 언어라는 예의 제가 미자 돼요 그냥 저희가 지금까지 짰던
그런 언어의 그 단계를 넘어서 그냥 코드를 짜면 이루 칼에서 돌기도 하고
마이크로 서비스 돌기도 하고
* 대로 다 따로 할게 없는 그런 이상한 언어를 만들어 놓았고 디버깅 도
굉장히 괜찮고 그 마이크로 서비스 길이가 네 이제 디펜드 c 트래킹 돋아
105
되게 신개념 을 만들어 왔어요 익셉션 핸들링도 굉장히 잘해요 너고
그래서 그런 훌륭한 언어로만 정도 사람인데 뭐 잠시 얘기가 딴데로 했고
이 사람이 아키텍트 는 코딩을 하지 말아야 한다고 했던 얘기는 이
거였어요
니가 아키텍트 면
니가 프로덕션 그니깐 라이브 서버에 올라가는 코드를 이가 짜면 안된다
단 이가 해야 될 일은 뭐냐면 새로운 개념이나 이런게 나왔을 때 어느
정도 코딩을 안하면 은 이제 이해를 못하는 부분들이 있어요 왜냐하면
문서 1 보고 아무리 2개 소리를 하지만 색감 오는 안되는게 되게
많거든요 어느 문서 등 간의
그럼 그런 것들을 충분히 알 때까지는 이가 코딩을 해야 된다 그런데
코딩이 턱선에 나가는 그런 코딩이 아니라 이해를 위해서 이가 따로
코딩하고
데드라인을 맞춰 하는 코딩 도 아니고 니가 이런 새로운 테크놀러지 나
새로운 패러다임이 나 이런 걸 이해하게 코딩을 하고
단위가 코딩을 멈춰야 되는 때는
니가 이제 충분히 알았고 누가 너한테 일을 시키면
모든 코딩을 넣은지 할 수 있을 정도의 이해가 되는 멈추란 얘길 했어요
이제 그 게 사실이거든요 훌륭한 아키텍처의 는 이제 내가
어떤걸 어떻게 구조 잡고 어떻게 클래스를 만들고 그 실제 내부 구현을
어떤 로직으로 돌려야 되고 어떤 컨퍼런스 껴 넣을지 까지 완벽하게
100% 가 나올 때 그게 훌륭한 아키드 가할 수 있는 일이에요
그래서 그 정도 수준의 이해력이 되면은 거기서 이제 코드로 옮기는 것을
단순하게 이제 머리에 있는것 시간으로 옮기는 작업이 전부에요
그러면 어떤 의미에서 뭐냐면
이미 모든 설계 디자인 끝났고 이지 자이는 조립할 사람들만 있으면 되는
거죠 그럼 이제 그 강숙 강의하시는 분이 만 말했던 것은
너는 설계를 끝내고 모든걸 기반을 잡고 그 블루프린트 만들어지면
시니어들이 들어가서 그 내부에 클래스 딴 만들고
그루 클래스 다 만들어놓고 api 지정 다 해주고 뭐 시간에 제가 만들고
그럼 그 밑에 있는 코드 몸 피들이 들어가서 그 함수 하나하나 들어가는거
에 기능만 만드는게 올바른 아키텍쳐 다
그리고 그게 실제 큰 회사가 유일하게 그 계속 뻗어나갈 수 있는 방법이다
왜냐하면 그 정도의 설계를 쓰는 사람이 별로 없으니까 얘기 없어요
그 얘기를 듣고 나서는 이제 동일 했죠
왜냐하면 제가 그당시 회사를 돌릴 때도 제가 코딩하는 양이 많아지면
재미 테면 15명 애들이 실수를 하는 일이 더 많아져요 왜냐하면 은 제가
관리를 더 많이 하는 애들이 이상하게 방향 가는거 보고 잡고 그거 방향
아니야 이렇게 가 이거 확실하지 않은 스펙이 아파서 찾아 이런식으로 이제
실수를 할 일을 많이 줄여주는 데 제가 코딩을 하면 그 코딩 하는거
하나의 성능은 다른 개발자 대 보다 10배 이상의 빨리 나오는 것 같긴
해요 그러니까 뭐 저정도 급 때는 사람이 똑같이 나오는 거고
흔히 말하는 이제 회사에 있는 평균 애들보다 10배가 빨리 나오는 건
사실이에요
그러나 밑에 15명이 있으면 내가 열 배가 나온 순간 ad 2배씩
내려지면 은 그님이 드려진 거거든요
그래서 그렇게 회사가 성장하면 할수록 아 정말 위해서 큰 그림을 보고
애들이 잘 못보던 야한거 나가는 것을 잡아 줄 수 있는 사람이
그거를 못 할 수 있는 시간이 사라지게 시작을 하면 은 정말 플래터 더
산으로 가는 것을 깨달았어요
그래서 극이 그 유에 이제 제가 흔히 하는 얘기가 거에요 음 지금 있는
실리콘 밸리에서 에서도 그렇고 뭐 제가 지금 운영하던 회사에서 그렇고 그
전에 다음의 다했던 게임의 3도 그렇고
아 저는 코딩 하는거 되게 좋아해요 그리고 실제 코딩을 많이 하지만
언제나 제가 매니저 않다는 얘기가
내가 코딩을 할 때라 안 할 때나 전체 팀 퍼포먼스를 생각하니까 이
효율성을 생각을 해보라고 어느 열심히 않냐고
그럼 이제 언제나 메이저 들은 얘기가 니가 코딩을 할 때가 전적으로
회사가 훨씬 잘 돈 되요
아니고 코딩은 틀 할때가 그러나 이제 회사라는 게 가끔 굉장히 중요한
컴포넌트가 있어요
아 정말 1 1% 에 프로그래머 들 정도만 할 수 있는 부분들이 있어요
그리고 그게 실수가 됐을 때 그 실수를 용납할 수 없는 일은
가끔 그런 밀리지 라든가 이런게 있어요 그럼 그런건데 제가 들어가야 되고
그럼 이제 제가 들어가서 뭐 좋은 자는 경우도 그 뼈를 여러분 자꾸 하고
있는 경우도 있지만
그럼 이제 그거 잡고 열심히 하다보면 은 이제 그일은 끝나요
할 수 있는 거에 이제 주어진 환경에 주어진 이 소스에서 가장 최선의
방법이라고 할 수 있을 정도로 끝내기 끝내요
그러고 이제
다시 딱 그거 끝내고 신부가 그랬다고 딱 돌아와서 좀 해야지 라고 생각을
하는데 그 순간에
잘못 가고 방향이 조금 잘못 잡히니까 효율적인 이니까
저는 이제 2
뭐라고 얘기해야 될까
생산성과 효율성을 되게 중요하거든요 이제 효율적이지 못해 가고 있는
부분들이 있어요
이 거리 요만큼만 잡아주며 는 실제 훨씬 효율적으로 일을 끝낼 수 있고
훨씬 들린 되게 끝낼 수 있는데 이게 제가 신경을 못쓴 순간 얻어
틀어지는 경우가 있는 거죠 그러면 그걸 이제 보면서 모시는 거에요 아
이것도 망가져 보다
그래서 언제나 제가 릴리스 힘든 일 있을 때마다 그 얘길 해요 아 나는
정말 코딩 안하는 것이 나은 것 같다 고 점점
그래서 그런 의미에서
아키텍트가 아키텍트 급 에게 좀 있다는 그러니까 직급이 있다는거 자체가
회사가 적당히 크다는 얘기 거든요
아키텍트 급 아니면 cto 끝까 에 가는 사람들은
진짜 코딩을 그러니까 제품에 들어가는 코딩을 반드시 하는 거 아닌 것
같아요
이제 문제는 뭐 필요할 때 해야 언제라도 들어갈 수 있는 정도의 실력은
있어야 되지만 그 언제라도 올바른 대답을 줄 수 있는게 이 애로 이해도
있어야 되죠
4
이제 그분은 제가 생각할때 제 걱정을 하는 남겼던 것 같아요 제가 사람과
얘기도 많이 하고 뭐 이런 얘기도 많이 하니까
예 4 약간 이해가 안돼 떵 에 제가 봤던 이제 제대로된 아키텍트 급
재래 시티 5급 뜰을
다 그렇게 모든것을 머릿속엔 프로그램을 할 수 있을 정도로 이 일을 하고
있거든요
자기들이 쓰고 있는 기술 권이라도 제품군이 라던가
그럼 이제 그 사람들이 점은 코딩을 아는 것에서 문제를 잡은 참은 적이
없어 그냥
그게 안되는 상황에서 말만 하는 사람들은 문제가 말았지
근데 그래도 박희태 뜨겁 에 있는 사람들은
그정도 문제가 많은 사람들 좀 저건 심지어 가끔은 그런 애들이 있어 독
cto 급은 뭐 개막해 인데 사실을
왜냐면 cto 는 순수하게 그냥
기술자 라기보다는 말도 안되게 이제 약만 잘 파는 사람도 있기 때문에
그래서 보면서 그 분이 이렇게 0 까 이제 걱정을 말씀해주신 건데
걱정하는 말을 들으면서 제가 느낀 건 뭐냐면
한국에서 gt 언 아키텍트 컵 되고 있는 사람들은
실제 기술을 이해 못할 정도로
못하는 상황에서 걸 하는 건가 난 이제 지금 생각 쓰기 시작했어요 물론
전부다 그런건 아니겠죠 당연히 제가 알고 계시는 어떤 ms mvp 분 한
분 도시 태운 데 그 5 베이스 보컬 득을 볼 때마다 2분은 정말
훌륭하게 숫자나 생각을 하거든요 근데 그분이 뭐 코딩을 이것도 풀어야지
정확히 모르겠지만 뭐
그에 비해 또 제가 따로 전해 들었던 어떤 cto 는 코딩을 거의 안
한다고 뭐 맞더라구요
그래서 말하는 것들을 면은 그냥 애들 약은 시키는 것만 좋아하는 것 같고
자기가 뭘 알고 있는것 같지도 않고 그래서 구독해 버틸 수도 있는 것
같은데 그런 생각이 들었어요 그래서 저는 기본적으로 코딩 하는거 되게
좋아하고
저는 뭔가 새로운 고 재미있는 게 있으면 제가 먼저 코딩을 해요 그
다음에 알고 재미있다 해보자 넘어갔고 는 스타일이에요
근데 문제는 갖고 올 때 저는 온갖 이제 문제가 될 수 있는 거죠
찾으려고 노력을 해요
예전에 한번 비디오 만들 때 무슨 db 잉크 엡손 얘기할 때도 아직은 쓸
때가 아니라는 얘기 했던 것도 그렇고
예전에 무스 내적 펑션 이 비슷한 얘기 할 때도 그런 얘기 어떤것도 다
그런 제 짬짬이 제가 따로 따로 가는 코딩 에서 나온 거예요
그걸 이제 회사
업무라는 상관이 없는 거였거든요 단지 제가 먼저 이런거 찾고 더 좋은걸
찾아내서 다음 방향으로 진행이 되니까 회사 방향이 잡히고 그대로의
따라가고 있는 거죠 그래서
결과는 지금 저희 회사 프로그램들이
저희 회사 코드 이제 스탠더드 라던가 라이브를 되게 좋아요 따른 회사에
다니다가 노래들 보면 다 아 아 이 여기만큼 코드가 잘 돼 여기 있고
깔끔한 대로 못봤던 얘기를 많이 하거든요
이해해 주시고
그래서
뭐 요약은 해야될것 같은데 일단 제대로 된 이제 제대로 돌아가는 테크
회사라면 은
그리고 규모가 이제 뭐 시티 운명의 진짜일까 프로그래머 2명 있는 이런
회사가 아니고 1
그래 프로그램과 대여섯 명의 있는 회사라면 은
시 t1 은 원칙상 으로 아니면 이제 아키텍트 도 마찬가지고 원칙상 으로
이제
실제 서버에 올라가는 실제 제품으로 나오는 코드를 더 라는 녕하세요
그리고 그 사람들은
이제 뭔가 새로운 걸 있어 7 해야되고
그리고 그 사람들이 뭔가 회사에서 뭔가 라는 결정이 났을 때 이 사람들
결정일 수도 있고 다른 쪽 약점일 수도 있을 때 이 사람들은 이 시스템에
정확히 어떻게 돌아갈지 완벽하게 청사 저 머리속에 안 그려지면
이를 제대로 못하고 있는 거예요 그러면 그걸 이해하기 위해서 그 관련해
스택을 뒤 지구 뭐 하고
1 해야겠죠
그래서 그렇게 생각을 하고 있어요
어
이게 이제 뭐 그분이 제 댓글을 봤을 거라고 생각을 하는데 이미 댓글을
남긴 왔으니까
그거에 대한 이제 추가설명 되었으면 좋겠고
그리고 이제 시티 원아 뭐 딱히 테크로 이제 파시는 빠지시는 분들 중에
코딩을 내가 이제 실제 서버에 들어가는 코딩을 지금 이렇게 줄이고 인데
괜찮을 거라고 생각하시는 분들이 있으면 그 걱정보다는
모든 게 이해가 될 정도의 지금 이해력 있네요
그림이 나오냐 보니 걸 지시했고 100% 까지 아니라 95% 정도 이건
된다 라고 확신을 가질 수 있냐
그거를 좀 더 신경을 써 주시길 바라고
그에 비해 이제 또 저녁도 나쁜 쪽으로 보면은 안하는 act1 아키텍트
알았으니까 코딩 전에 몰라요 밑에 드리 아 살 거야 내가 그냥 나가서
접대 말하는데
라고 생각하시는 분들은
그 밑에 사람들의 존경을 못 받을 거예요 예 이제
그게 회사의 이제 직원들이 자주 떠나고 이런 것 중에 하나가 잘하는
애들이
자기 윗 상사가 자기보다 실력이 없을 때가 되게 많아요
그 회사의 유지를 위해서도 본인이 그런 내가 이 분야에서는 아직 최고다
라는 것을 가지고 있는게 좋아요 그럼 그것 때문에라도 좋은 엔지니어들은
남아 있더라고요 그래서
뭐 cto 가 코딩을 해야 되는지 아키텍트 코딩을 해야 되는지 그런
부분에 대해서 제가 생각했던거
그리고 아까 말했던 주에 또 일이 뭐지 주발 출발로 올린건 나 이렇게
마켓 내가 잘못하고 있는 거야 이제 주발 5위 맞는거 같아요
그 사람 그분 얘기와 제가 보 본 것들을 정리해 줘 얘기를 했어요
아 끝내야지 뽑혔습니다
