예 안녕하세요 고픕니다 음 오늘은 오랜만에 c # 쪽 특히 이제 엔티티
프레임워크 쪽에 대해서 얘기를 하려고 그래요 뭐 어찌 보면은 그것보다는
약간 다른 코딩 스탠다드 여길 수도 있고
음 어쨌든 지 웹 쪽에서 제호 아래 m 쓰시는분들 그 예전의 비디오 만든
적이 있죠
overlay on 10 맵핑 이었나
오브젝트 관계 매핑 그거를 쓰는 사람들이 아마 좀 더 귀담아 들으면
좋으니 인것 같아요
음 언젠가 한번 따로 비디오를 만들 수도 있지만 아니면 지금 말해 버릴까
아 시샵 같은데 보면은 특히 as 비단 되시라고 해 아저씨 #2 아니라
mbc 패턴 쓰시는 분들이나 아니면 뭐 dto 패턴 쓰시는 분들이 보통
아 그 클래스를 만들고 거기에 프로퍼티를 놓칠 때 그 위에 애트리뷰트를
받는 경우들이 있어요
음
1 개념을 잡고 들어 가는게 좋겠다 개념을 잡으면
이제 클래스를 통해서 로직을 웃는게 아니라 순수하게 데이터를 눈은 경우가
있어요
뭐 그걸 굳이
뭐
g 쪽에서 본다면 포코 이런 개념일 수도 있고 목 퓨어 보였지
뭐 순수하게 각 타입인 것 뭐 pd 오라고 부분 경우도 있었고 피워
데이터 오브젝트 라고
아 한마디로 함수는 없이 데이터를 만 보여주기 위해서 뭐 c 에서는
스트럭 틀을 맞는 경우가 있었고 뭐지 샵에 있는 스트랩 터 클래스가 되게
많이 다른 개념이기 때문에 뭣이 샵에서는 클래스를 많이 만들죠 자바는
그런 객 구문이 없으니까 그냥 클래스 겠고
그럼 이거는 말 그대로 데이터를 주고 받기 위해서 만든 오브젝트가 전
보거든요 근데 웹 쪽에서 보면 그런 오브젝트를 쓸 일이 되게 많아요
사실은 물론 이제 웹 쪽에서 5
이 데이터를 순수하게 제이썬 스트링으로 넘겨줘 같고 그 제이썬 스트링을
손으로 한땀한땀 8 생 하시는 분들도 있지만
그거는 실수를 굉장히 야기할 수 있는 제 그런 방식이고 그것보다는
그 탓 뭐 예 제탄 내쪽으로 쓰니까 닷넷 이라고 할게요 따른 비슷한 것
있어요
좀 이만큼 좋진 않지만 따른 언어에도 뭐 닷넷 같은 경우에 제이썬 단 네
이런 벌써 갖고
제이썬 파일이 들어오는 순간 그 웹 퀘스트 같은걸로 자동으로 그게
오브젝트로 변환이 되게 설정이 가능하죠 기본 설정 이렇게 돼 있죠 사실
그러면은 코드에서는 언제나 오브젝트를 당할 것 뿐인데 실제 뭐 html
html 아니다 http 리퀘스트 통해서 왔다갔다 할 때는 그 채 이 썬
텍스트로 왔다갔다하게 되는 거죠 그래서
웹 쪽을 보면 은 그런 데이터를 주고받는 이런
경계가 여러개 있어요 첫 번째는 가장 흔히 하는게
퍼블릭 그러니 깍 공개되어 있는 인터넷하고 제 서버 사이에 데이터를 주고
될 때가 있죠
그럼 그게 보통 두 가지인데 하나는 내가 api 를 받을 때 그니까 그
순수하게 데이터만 받고 데이터만 js 전선 줄 때가 있고 또 하나는 이제
뭐 mbc 패턴 쓰시는 분들은 제가 컨트롤러에서 데이터를 모델을 던져주고
듀 모델이라고 많이 하죠
왜냐 mbc 가 비우 비우 갖고 있기 때문에 그 규모 데를 가져다가 이제
html 템플릿 랭귀지 지 샵에서는 왜 이적 5
뭐 타임리프 가 타임리프 인가
이런거를 쓰는 것도 있고 그 잡아 쪽에서 핸들을 썼었고 그런걸 통해서
데이터를 받아 꼭 그 데이터를 어떻게 지키면 보여줄 지 결정하는 bung
따로 있죠
그럼 그 사이에 주고받는 것도 이제 아 듀 모델이라고 하고 api 아까
저의 api 데이터만 주고 받는건 은 참 이름을 제가 붙이기가 뭐한데
저는 개인적으로는 데이터 트랜스포머 오브젝트 라고 해서 디큐브 라고
불렀는데 제가 다음의 설명을 dt 오라 헷갈리기 때문에 일단은 뭐 api
의 바디 정도나 뭐 그런 식으로 얘기 할게 리퀘스트 바디 뭐 리스폰스
바디 이런식으로
그럼 이제 그게 퍼블리크 것 좋아하고 주고 받는거
금 컨트롤러는 이 데이터를 이제 가져오기 위해서
아 저희 내부에 있는 db 를 직접 끌거나 여러 가지를 해야 되잖아요
그러면 그 db 를 긁는 과정 아니면 마이크로 서비스라면 그 서비스의
데이터를 가져오는 과정이 있어요
그러면
뭐 orm 을 쓰신 다는 가정하에
데이터베이스를 의 모양을 그대로 보여주는 오브젝트를 서비스 위 땅까지
반환하는 것은 저는 잘못된 일이라고 봐요
뭐 5월 m 써 보신 분들은 알겠지만 그 데이터를 위해서 잘못 변형 했을
때
뒤 딴 에서 이제 세이브 을 했을 때 이게 데이터 적용된 이상한 집들도
하고 그래서 결과적으로 은 그런 서비스 레벤 아까 db 를 직접 들르는
일은 컨트롤에서 적어야 되고 사실은 간의 서비스가 나 있는 거예요 그
서비스가 마이크로 서비스가 돼서 다른 서버가 됐던 넥은 야한 서보 안에
있는 db 를 은 는 서비스 든
뭐 예전에 도메인 들이 분 쪽 하시는 분들은 이걸 이제 서비스
리포 패턴 이라고도 많이 했을텐데 아 저는 리포 패턴은 별로 신경을 안
쓰고 서비스 패턴은 신경을 쓰는 편이에요
그러면 컨트롤러 데이터를 가져오는데 가 실제 는 서비스 에서 가져오는 데
그 서비스가 l 난 데이터는 서비스 위 폼 5
db 자체 데이터가 아니라 그 중간에 데이터를 전송하기 위한 오브젝트
해야 한다
그래 dt 오라고 해요 그러면 그의 tt 오고
그럼 낚아서 비싸 에 들어가면 db 를 그때 db 를 정말 sql 쿼리
해 갔고 거기서 또한 담았던 따오는 것도 있지만 예전에 한번 orm 을
숫자는 비디오에서 말했듯이
어떤 경우에는 아 이제 orm 을 쓰는게 낮고 어떤 경우에는 예전
방식대로 그렇게 쿼리 쓰고 뭐 스토어드 프로시져 쓰고 이런 경우가 있어요
그런데 요즘 든 애플리케이션 프로그램에서는 충분히 or m 으로 커버
가능한 게 많기 때문에 orm 을 한다고 과정을 하면은 그 데이터베이스를
연동하는 연결하는 읽어오는 그 객체가 또 오브젝트로 되어 있겠죠 그럼
지금 제가 얘기한 게 퍼블릭 2에서 컨트롤러 들어오는 테이터 그렇게 뷰
모델이 든 아님 아까 말해 a paid 스포츠 q 퀘스트 든
그리고 지금 말했던 컨트롤러는 서비스 들어간 dt 오든 그리고 그 밑에
로 들어가는 에 데이터베이스 하고 직접 일러 오는 or m
아 시샵 쪽에서는 astm 에 쪽에서는 엔티티 프레임워크 이렇게 3가지의
데이터 타입이 있어요
2 데이터 타입은 기본적으로 모두가 다 순수하게 오브젝트 데이터를
표현하는 게 전부에요
여기에 함수가 들어가면 은 굉장히 헷갈려 지고
물론 이 역의 함수를 추가 해야 될 일이 있는데 그것은 아마 다음이나 다
다음 비디오 쯤에서 이제 뭐 얘기를 하던 갈게요
아까 먹기 전에 저건 와야겠다 장 큰 말이요
그거를 제가 어떻게 그 짓을 하는지 설명을 드리면 될 것 같고
다음 거에서 그러면 이제 이 데이터를 주고 받을 때 음
데이터가 잘못 오는 것들 뭐 데이터가 비어 있다거나 비어 있으면 안되는데
이런걸 잡아주는 로직이 많이 필요하거든요
4 jsp 닷넷 같은 경우에는 그 필드명 퍼블릭 인 트 막 이렇게
되어있는데 삘 들면 위에 제가 애트리뷰트를 밥을 수가 있어요 hp 단내
자체도 지원해 주 이벤트도 있고 제가 쪽 커스텀 액티비티를 받을 수도
있어요 그럼 이게 뭐하는거냐
그럼 그 예치 비치의 만약에 미 콰이엇 일들을 받았다
그럼 이 콰이어트 셀들을 받으며 는 이게
써 쪽파 블릿 1호 들어오는 이바디 라면은 그 필드가 없을 경우에 않아서
에러 메세지를 만들어 주고 모이 이 필드가 없다라고 곧바로 에러를 판
해줘요
제가 직접 코드에서 컨트롤 안에서 코드 짤 필요가 없는 거예요
자정을 이제 밸리데이션 해주는 로직을 중간에 껴 갈 수가 있고 굉장히
많은 밸리데이션 로직은 있어요 뭐 이게 우편 뭐냐 이게 전화번호 냐
모임에 일이냐 이런건 있지만 개인적으로 따로 만들고 싶어하는 것들은
컨트롤 땅에서 코드 한땀한땀 짜면서 검사할 수도 있지만 밸리데이션 엣지
비틀 만든 다음에 그 클래스를 만들어서 자동으로 실행되게 한 다음에
메시지를 반한 법이 있죠 그래서 그런 애 취 빗질을 되게 많이 봐요
특히 퍼블릭 에서 들어오는 데이터는 왜냐하면 은 펍 에게 들어오는
데이터는 제가 제 코드 안에서 뭐 피해를 해서 어떻게 검사를 할 수가
없는 거잖아요
이미 데이터가 누구나 바꿀 수 있는거니까 그래서 그런 부분은 문제가
있어서 그것만이 박아요
그럼 이제 그 다음에는 아까 말한 dto 써비스 안에서 음 올라오는거
서비스 단에서
아
뭐지 그 컨트롤러 레벨 올라오는거 이거는 그냥 솔직히 qa 문제 만으로
다 잡을 순 있어요 그런데 당연히
액티비티를 박아서 델리 데 션을 해줄 수 있다면 제가 직접 밸리데이션
프로그램 로직을 이제 실행을 시켜야 되죠 왜냐면 내가 만든 서비스 니까
음 아까 말했던 잠깐만 이물질 마시고
으 아까 말했던 이제
컨트롤러 쪽 한 쪽 악은 다른게 그거는 굉장히 정형화된 그 hp 리퀘스트
브리즈번 쓰기 땜에 건 알아서 해주고
그리고 심지어는 거기서는 아까 mbc 같은 경우에는
2 박은애 츄 비트도 있잖아요 그게 자바스크립트 단에서 뽐 밸리데이션
까지 돌아 줘요 자동으로 긋한 4 코어 닷넷 모여 쭉 자동 기능인데 이
흡사한 데코 asp 단 네 네 어쨌든 날에 서비스에서 컨트롤 넣을 때는
제가 밸리데이션 을 돌릴 로직은 없지만 그 직접 만들어야 되지만 실제
그걸 안 만들더라도 애트리뷰트를 박아 주는 것만으로도 및 어빌리티 가
도왔고 끝 많이 나아지긴 해요
i 여기서 나오는 dto 에서는 이 일대는 반드시 있구나
이 삘 드는 없구나 널이 될 수 있겠구나
아 뭐 이런 부분들 네이즈 이건 예전에 제가 뭐 널 관련 비디오를 만든
적이 있어요 널이 란 무엇인가 뭐 이런거 아니면 덜 채 킹 대해서 얘기한
적도 있고 그리고 코딩 스탠다드 에서 너를 우리는 어쨌든 최대 없는 코딩
스타들 지향한다는 얘기도 했었고 그 부분은 따로 보시면 될거 같고 그
비디오를
포프 tv 서치 엔진 가져갔고 검색하면 나와요
그러고 그러나 어쨌든 위더 비리 때문에 좋다 여기까진 좋아요
다 좋은 얘긴데 이 마지막에 제 엔티티 프레임워크 들어갈 때도 그런 애
7 밑을 받을 수가 있어요
뭐 약간 다른 애트리뷰트 지만 박으면 똑같이 되어 어떻게 되냐면 이게
되게 재미있는게 되게 훌륭한 거기도 한계
뭐 그런 엣지 빛으로 박은 다음에 이건 리 콰이어 두고 뭐 모으고 모으고
이런 바가 두 면은
ndt 프레임워크에서 이제 sql 뭐 마이그레이션 이라고 하죠 그
마이그레이션 스크립트를 만들어 주잖아요
2 내가 원래 있던 모델을 새로 만들고 이제 뭐 마이그레이션을 만들어 줘
그러면 테이블을 만드는 이제 그런 sql 만들어주고
즉 로또 자동으로 적용 해주고 dbf 파일 서버에 올라가는 순간 그리고
그 다음 걸을 해석 수정을 하면 은 요만큼 이수정 됐다고 해서 그거에
대한 더 쿼리를 만들어 줘서 db 꽂고 실행할때 알아서 또 이제 요 dv
스키마를 업데이트 해주고 이런 개념이 있어요
그럼 그런걸 해줄 때 그 길들을 제대로 읽어서
실제로 곳 필자를 만들어줘요 만들어 주는 것들이 있어요 전부다 아니에요
아직은 as 비단 내 코어는 아직 완성이 좀 덜 됐고 asp 탈레스는
되게 잘 돼 있고 그러면 이제 감이 콰이어 들을 넣으면 은 이제 뭐 서버
딸에서 지가 알아서 아 이거는 난 너 리야 sql 은 이건 널이 들어갈
수 없어 이런 식으로 만들어 줘요
구르고 또 재미있는게
이 상황에서 이게 난 널 뭐 넣을 이런게 있잖아요 그럼 이게 널려 불로
들어갔는데 못 난 너 리거나 뭐 이런건 중요한게 아니고 어쨌든 간에
데이터를 제가 집어 넣을 때가 있어요 sql 쿼리의 데이터를 집어 넣을때
그럼 예를 들어서 이 게리 콰이어 듣길 되요 스트링 이고
근데 거기에 제가 아무 스팅 도 대입을 안 했어요 그러면은 오브젝트에서
널이 잖아요 근데 그걸 세이브 하려고 하면 은지가 된 레이 션 한 다음에
거기서 에라 를 뽑아 줘 아 이거는
널이 되면 안되네 필드 내기가 너를 로써 이루고 이제 라를 던져줘 요
그게 지금 뭐 당연히 서버 들어갔을 때 sql 서버 들어갔을 때 거기서도
난 너 린덴 얼이 들어왔을까 이라 가능하겠지만 클라이언트 단 그래서
결과적으로 엔티티 프레임워크 가도는 cpu 단 에서도 이제 그 그런 델리
대신해줄 수 있다고 알고 있어요 제가 그냥 쓰기만 했고 정확히 이제
ix 기만의 거의 클라이언트 그 로즈 끌 수 있다 킬 수 있다 이것도
보긴 봤는데
그거는 이제 sql 제너레이션 쪽 아인 같 갖고 제 그 데이터 밸리데이션
쯤은 정확히 지금 sql 서버 따 도는지 이제 cpu 다 에 들어오지
확실치는 않아요
좀 더 봐야겠다 4 결과적으로 재미있는것은 뭐냐면 이 벨뷰 타입 이라는
것 때문에 되게 여기서
이상한 짓을 많이 할 수가 있어요 그래서 오늘 말하려고 하는 주제는
사실은 이 걸수도 있는데 앞의 까지는 그냥 이런저런 정보를 전달했다 면
뒤에 부터는 베스트 프랙티스를 고 하죠
이게 뭐냐면 예를 들어 제 오브젝트가 있다고 생각을 하고 그 오브젝트에
벨류 타입이 있다고 생각을 해요 필드로 그게 뭐냐면 인 트
뭐 이넘 스트럭 트 이런거 근데 뭐 스트럭 틀을 5 하려면 울컥하는 누누
투치 나니까 있던 건 제외하고
일단 인 트 가 들어 있다고 생각해봐요 인트를 해갖고 2 인 트 에 이제
모를 넣으면 좋을까 반드시 인 트 가 들어가야 되는 것
음 키 키 를 cm 로 된다고 생각을 해봐요 사람의 0 cm 인 사람은
없으니까 그러는 키가 들어갔는데 그렇게 인 트 하이트 이렇게 나와서
아니면 타이트 cm 확실하게 넣어 놨는데 그 위 담이 콰이어 드 빌드를
박았어요
그럼 어떻게 될까요
전혀 작동을 하네요 뭐 서버 상에 스킬을 만들어질 때는 이제 이게 널이
일 순 없다 라고 바가 주는데
어차피 시샵 언어에서 인 트 가 널이 낼 수가 없어요 벨르 타입이기
때문에 널이 없어요 그래서 이 오브젝트 만드는 순간 엔티티 프레임워크 에
들어가는 그 오브젝트를 하나 만들어요
새로운 이제 데이터 루키 위해서 그럼 기본적으로 하이트 가 0 으로
들어가게 되요
기본값이 들어가니까 그리고 내가 엇 키를 집어넣는 걸 까먹었어
그쵸 키를 집어 먹는 걸 까먹고 세이블 했으면 그게 사실은 제가 원하는
것은 야동 키를 안노 써 퍽이나 야 되고 탑 퍽이나 줘야 되는데 그게
아니라 오히려 영이 들어가 버리니까 값은 있으니까 그리고 저희는 문제가
있다는걸 모르고 넘어가게 되요
그 데이터가 안들어 가는게 좋은 거잖아요 그래서
벨류 타이파 고리 콰이어 들을 쓰는것은
아 뭐 일단 ndt 프레임워크 자체에서는 난 널 이거 들어가는거 하나는
도움이 되지만 그 외엔 도움이 안 되는 거예요
밸리데이션 제대로 작동을 못해요 어차피 그래서 저희가 베스트 프랙티스 로
이제 쓰고 있는게 저도 그렇고 이제 못한게 이체가 그러면 글로 아에
베스트 프랙티스 5 쓰고 있는 거고 그런 집이 단 의 일단은 엔티티
프레임워크 단 에인트 값이 들어가고
아무 아니면 다른 밸류 깝 이넘도 그 중에 하나죠
그게 들어갈 때
그것은 반드시 그리고 일이 쿼드 필드에 이때 반드시 퀘스천 마크 를
붙이게 돼 있어요
그래서 인 트 퀘스천 인 트 물음표 마크 를 붙이면 그게 널 어 볼타입
이 되는 거잖아요
널이 될 수도 있고 값이 될 수도 있고 그걸 왜 하냐면 은 이렇게 할
경우에는 제가 아까 새로운 오브젝트를 만들고
실제 날 나이를 늦지 않으면 언론 아마 있기 때문에 세이브를 할 때
디베이스 틀을 할 때죠
에러가 나고 뻗어 버려요 그래서 혹 실수로 곧바로 찰 수가 있어요
제가 요 부분이 이제 코드를 제가 짜면서 사람들 코드 리브 보면서 이렇게
들어오면은 야 이거 니 쿼드 에어쿠션 맛 가이코 하신 마크 달아 으로
그러면 이제 애들이 이해 못하는 경우가 있고 코아 션 마크를 달아
놓았는데 애들이 그거를 이제
규 모 델 단으로 올릴 때 아니면 dto 를 올릴 때 걸 퀘스천 마크로
그대로 패스를 하더라구요
사실 그럴 필요는 없거든요 그래서 그 부분 같은 경우도 이제 아까 dt
5로 할 때 dt 을 할 때 또 그래서 그 어느
의미가 없잖아요 어쩌네 우리 서버 에서는 반드시 인 트 값이 있어야
되는건데
옥화 션 마크로 부터 와 보겐 어린 자인지 체크하게 되는 이상한 일도
해야 되고 그래서 그런 경우엔 널 체크 하지 말라고 이거는
db 이런 문제 때문에 있는 거지 db 에는 반드시 그 값이 들어갈
수밖에 없다고 안 들어갈 뻑이 나니까 예
그래서 그런 약간 꼼수 아니 꼼수를 쓰고 있어요
그런게 있고 어째 be 얘기가 나옴 김에 그러면 아까 제일 처음
이야기했던 또 컨트롤로 에 들어오는거 퍼블릭 해서 컨트롤로 들어오는
데이터까지 얘기를 해서
베스트 프랙티스를 아더 만드는 게 좋을 것 같아요
일단 그 sbr 4코어 단에서
음
컨트롤러 함수를 만들 때 매개변수로 포스트 바디를 받아 올 수가 있죠
그럼 그 건은 이제 매개 변수 앞에 풀어 논 밭 이라고 해서 각진 이과로
no 같고 이제 오브젝트 이제 클래스를 내면은 지각의 제 2선으로 들어
오더 엑셈 물로 들어오던
지가 알아서 dc 얼 라 이 즈 해서 예
17 나 이제 디지털 라이즈를 해서 이제 오브젝트로 던져주세요
그리고 그 외에 그 마우 트 있잖아 유아 레 보면 이렇게 각 / 돼 있고
이름 들어가 있는 라우트 그라우트 에 들어오는 데이터도 이제 매개변수로
받을 수가 있어요 그럼 라우터의 놓고 이제 그게 스트링 받는 경우도 있고
인트를 받는 경우도 있고 심지어는 음 뭐 이넘을 바랄 수도 있어요
스트링을 이 놈 으로 바꿔 지게 저희는 보통 그렇게 많이 써요
그러면 이제 매개변수의 부터 이넘이 들어가는게 있고 이누도 벨류 타입
이잖아요
그리고 오브젝트가 들어가는게 있어요 그러면 컨트롤로 젤 위해서 해야 될
일이 보통은
아 모델 이제 이 데이터 고온 모델 오브젝트가 밸리 단지 안될 이에대한
gasp 단 4곳에 이미 판단 해 주거든요
그러면 제일 처음에 이렇게 모델 다이스 led 를 호출하면 되요 그러면
이게 밸리 드 하지 않다면 그 순간에 이미 얘는 으 아 뭐 데이터의
이상이 있거나 라우트 이상이 있는 거예요 이넘 인데 그 이념에 맞는 값이
없는게 들어온 거야 우리가 이 넘으로
뭐
5 동서남북 이거만 오는데 갑자기 말도 안되게 저쪽 이런게 들어왔을 때
이름의 찾을 수가 없으니까 스트링을 이름으로 컨버터 할 때 그 모델이 인
별이라 내라 가나요 그러면 뭐 그냥 모델이 밸리 드 하지 않아 라고
돌려줘 되고 아니면 그 실제 에러메세지를 제네레이션 해야 우리 털어 줘도
되고 그런 방식이 있어
그러면 지금 말했던 것은 이유 알에 패러 m 에 들어와서 매개변수로 받는
이의 넘은 이 쓰인 밸리 드 아이스 밸리 들을 호출하면 모델이 습열 리드
이게 아체 대로 안 들었을 때는 이미 인 * 리더라고 담아요
재미있는 것은 뭐냐면
아까 말했던 이 포스트 바디 받는거 거니까 오브젝트를 받는 거죠
그 안에 보면은 제가 좀전에 엔티티 프레임워크 얘기할 때 말했던 그
문제가 똑같이 있어요
예를 들어서 거기에 인 트 가 있고 빅콰이어 드가 있었다
그럼 그 값이 안 들어오는 순간 그 바디 밸리데이션 에서는 이게 인 달리
들을 못 잡아요
그냥 기본값으로 이제 들어와요
재미 있죠 그래서 그런 문제가 있었어요 언제나 그래서
htp 잔에서 뷰 모델을 반응 할 때도
아 그렇게 똑같은 방식으로 하고 있어요 그러니까 이 겜이 커야 느낄 드고
그게 실제 머리 퀘스트로 들어오거나 이제 미스 포스로 나가야 될 때
컨트롤러 단에서
어
그럴 때는 전 언제나 코션 마크의 다 인 트 코아 션 있는 코아 션
이런식으로 해왔고
그룹이 코에서 일들을 위해 박정 리퀴드 시드가 필요할 경우 말
그래서 어찌보면 약간 5 대충 동작하는 원리를 제가 추측을 하며 는
이해는 되어 왜냐하면 은 그 오브젝트를 디스 lig 할 때 보통 오브젝트
일단 만들고 그 비서 맞는 다음에 거기서 이제 하나하나 필드를 찾았고 그
프로퍼티 명의 맞는걸 새로운 값을 대입해 주는 방식이 수밖에 없거든요
다 퍼블릭 시리즈의 만하고 이제 컨스트럭터 도 퍼블릭 하게 돼야 되고
그러면 은 벨르 타임이 밸류가 있으니까
단지 끌 훑어보면서 이젠 어린이 않냐는 것만으로도 어 내가 새로운 5세트
만들었네 이 값이 아직 안 들어왔어
그래 인델리 더하거나 이 판단이 가능한데 그 게 아 니 라
이제
벨류 타입 까지 정말 판단을 하려면 은 이 밸리를 초 이 값으로 해놓고
이찌 슬러지 하는 동안에
하나하나 이 프로퍼티가 아 실제 새로운 값이 들어오니 안한 여러 이제
어딘가 기록을 해 놨다가 인 * 리더 라고 얘기해 줘야 되잖아요
그게 제대로 구현이 안 된게 아닐까 아니면 제가
e 문제가 있었고 이런 식으로 가게 시작한게
단 내 코 한 1점 염
1.12 띄었던 것 같으니까 지금 2.0 2.2 나오니까 여기서는 고쳐줄
수도 있는 부분이 사실은 그건 제가 좀 더 확인을 해 봐야 되는데 제가
체인지 리스트에도 본 적은 없어요 그래서 한번쯤은 확인해 보시고 제가
말한 것처럼 이제 api 나 이제 mbc 에서 규 모 델
아니면 api 이제 리 스피커 에스터 이런것 들어올 때 dt 5에 이제
벨르 타입이 있고 아니면 몹이 모델이라고 할 수 있고요
급유 모델의 이제 어 벨르 타입을 이제 실제 패스 안 했을 때 제
2선으로 비어서 보냈을 때 그래도 모델임 * 리드 모델 벨리 데이트
스케이트가 뜬다면 은 제가 말한 것처럼 코아 션 마크 다가 콕
널 업 울로 만든 다음에 약간 좀 판단해야 되는 귀찮은 일들이 있어요
근데 재밌는건 은 모든 컨트롤로 위해서 모델 벨 이들을 확인하고 이 스펠
이들을 확인하고 임 * 리드할 경을 미터는 해버리면 은 그 이후에 다른
코드에서는
그 아까 인 특화 션 마크 로 돼 있는 것도 있잖아요 그거를 불러올 때
너를 체크할 필요가 없어요 반드시 값이 있으니까
그래서 저는
실제 널 널 잊
이렇게 하면 되겠구나 저는 언제나 그래서 이 보통 프로그램 할 때 규칙이
뭐냐면
바운드 리가 바뀌는 상황 외부에서 내부로 들어오는 상황에서 모든
밸리데이션 하고
벨릿 1 잘못된 경우에 다 비쳐 내버리고 뭐 에르메스 1 주던 말듯
그 이유에는 모든 데이터가 옳다고 가정을 하고 그 데이터 체크를 하지
않는게 원칙이 요 스트링 도 마찬가지고 모든 게 마찬가지
왜냐하면 은 그렇게 하지 않으면 함수에서 무슨 매개변수 봤는데 이게 다
너 릴 수도 있다는 판단 하에 이제 막 널 체크하고 건 어릴 때 몰
반하지
막 이런 문제들이 있어요 그럼 모든 남색 널 체크 하기 시작을 하면 은
위고는 좀 말이 안되는 것 같은 그런 거죠 예를 들어서 실제 생활에서
그런 말이 안되거든요
내가 이제 차를 몰면서 도로를 좌회전을 했어요 근데 거기에 도로가 갑자기
업고서 공허한 곳이 있다는 판단 하에
그럴 경우에 차를 뒤로 뺀다는 생각을 하고 운전해야 하는 이런거 있잖아요
도로는 막혀 있거나 개 뚫려 있으면 뚫려 있는게 정상이라고 생각을 하기
때문에
뭐 당연히 도로 공사를 할 때 이 섹션을 있겠지만 그런 경우에도 앞에
바리케이드 쳐놓고 나 이러니까 갑자기 달리다가 도로가 중간에 사라질 수
있다는 가정을 하고 운전을 할 수가 있나 뭐 이런 생각을 하면은
역시 그런 목 가정 이라고 하잖아요 프로그래머 이 값은 여기까지 오면
반드시 올바르다
이런 가정을 세우고 복잡한 여러 가지 매개 변수를 생각하지 않게 가
그런 식으로 이제 코딩을 짜야 지만 실제 위더 밀리지도 높아지고 코드를
좀더 깔끔하게 유지할 수도 있어요 그리고 만약에 누군가 어떤 실수 할 때
한 눈에 보이기도 하고 근데 그게 아니라 매개변수의 얻어 10억대
들어오는 8개 중에 하나가 너 릴 수 있어 너 릴 때마다 얘는 이렇게
처리해야 되고 재는 저렇게 처리해야 돼 이런 식으로 생각을 하다 보면은
함수를 호출할 때마다 아주 죽어나는 거죠 그래서 제가 이제
가끔 즉 한국 분들이나 아니면 이제
si 쪽을 여기도 하는 사람도 있긴 있으니까 제가 한국 분들 보다 많이
알지 못하는데 그런 사람들 코드를 보면 그렇게 널 체크 떡칠을 한 코드가
되게 많이 보일 때가 있어요 그 사람이 주인이 얻은 씨니어 드 인터
미디어 칸 의
그런 사람들 이제 코드를 보고 이 사람들하고 일을 하다 보면 이 사람들은
버그 잡는데 확실히 시간이 굉장히 많이 걸리더라구요
왜냐하면 은 함수 1 호출할 때마다 막 그 판단 해야 될게 8 배로 등
거야 그러면 옛날에
뭐 그럼 뭐 속담에 쌀 한톨 주고 내일 두 톨 주 가다가 초가삼간
날려먹은 그런 속담이 있듯이 그런 식으로 함수 몇개 타고 들어가면 은
이제
법 디버깅을 못해요 그 그런 문제가 있어요 근데 좀 더 되게 단순한 게
좋은 거다 라고 말한거 라도 이제 막 말한 거와 도 이제 b 막상 통하는
얘기고
오늘은 어차피 또 기술 얘기하니까 말이 주저리 길었는데
대충 정리를 하면은
데이터를 주고받는 그런 경계가 한 3개 정도가 있다고 보심 맞아요 퍼블릭
에서 컨트롤러 들어올 때 그렇게 컨트롤러의 서비스 더 내려갈 때 서비스
다해서 뭐 db 쪽 긁을 때 그리고 거기서 이제 데이터를 주고 받을 때
dto 를 만들자
아니면 오브젝트 앗 분리가 되어야 된다 이런 얘기를 했었고
그루 9 아 그 외에 이제 뭐 아까 말 ntd 프레임워크에서 벨르 테이블
저장할 때 배추의 비트를 잘 이용 하려면 은
벨르 타입은 리커 여드 가 들어가는 전제하에 퀘스천 막을 봐야 되고
단위 콰이어 드빌 드는데 오브젝트 생성 하는 순간 기본값을 받는다면
그러진 않아도 돼요
까 프로퍼티 자체의 기본값 을 제공한다는 까
그러면 리코 헤드 밴드 6화 이어 드고 디폴트 값 디스가 상관이 없는데
그런 상황이 아예 아니라면 은 유저가 프로그래머 가치도 데이터 넣어주는
상황이라면 훨씬 마크 줘야 되고 그러면 자동으로 밸리데이션 해주고 다
되요
그리고 아까 말했던 컨트롤러에서 이퍼블릭 에서 컨트롤러 들어올 때도 그런
엣지 비틀 잘 이용하면 자바스크립트 달에서 도 그렇고
아 모 씨 쪄 컨트롤로 들어와서도 이제 모델 밸리데이션 을 할수가 있는데
그건 정말 단순하게 모델 esl 있 하나로 되는거니까
그걸 잘 이용할 내면은 아까 말했던 밸리 타입의 역시 질문 퀘스천 마크
지금 물음표 질문 2 아니네요
물음표를 박자 얘기가 가장 이기심이 에요
아 참 쓸데없는 얘길 많이 했구나 끝낼게요 그에게 핵심이 보프 였읍니다
