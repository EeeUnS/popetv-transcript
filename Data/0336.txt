얘네가 세포 핍니다 오늘은 그 모르지
이넘 이라고 하나요 10 거요 2인 유머 레이터 인어 인 유머 레이터
아니고 그 프로그램이 언어 중에 그 이 놈 이란 타입 있는게 있어요
뭐 이놈 이놈 그놈 이름이 아니라 뭐라 그러지 열거형 이 맞을 거에요
그래서
열광이 있는 타입이 있는 언어가 있고 없는 그 타입이 없는 언어가 있죠
그래서 뭐 굉장히 많은 스크립터 언어들이 없는 것 같고 사실은 형이 있는
언어들을 꽤 많은거 같고 이런 생각이 들어요
도보 이넘이 뭔지는 다들 알 테니까 제가 자세히 설명할 필요가 없을 것
같고 뭐 그냥 아주 간단하게 설명하면 이넘은
어 정 순대 사실은 프로그래밍 중에 이제 보통 매직넘버 쓰지 말라
그러잖아요 그래서 그런 식으로 이름을 대입할 수 있는 방식이 되기도 하고
그거 더 중요한 것은 아 몇 가지 선택할 수 있는 옵션이 있는 경우가
있잖아요
예를 들어 는 뭐 방향이라고 그러면
동서남북 4개 밖에 없다고 가정하면 은 뭐 놀스 사우스 이스트 해서
찍어내기 잖아요 그럼 그거를
e 넘 이란 형식의 정해주고 그대 중에 하나만 이렇게 쓸게 강제하는 그런
뭐 뭐라 그럴까
그런 역할을 하는거죠 그래서 선택할 수 있는 옵션 중에 하나
이런 개념으로 이넘을 쓰는게 정상적인 사용 법이고 그런게 생각보다
프로그램에서 쓸 경우가 꽤 많아요
네 이제 그걸 한 단계 더 넘어가서 이제 이넘을 어차피 숫자 형이니까
이걸 비트 플래그 로써 갖고 비트 플레이 넘을 쓰게 해 주신 해주는
언어들 도 있어요 실제 그런 언어에서 지원하는 거 보면은 그 이넘 에서
애먹고 뭐 여기 이 이넘이 플랙 의 설정이 됐냐 라고 보수 게까지 해주는
것도 있죠
지속적인 좀 그런거 에 가까운데 뭐
어찌 보면 되게 편한게 이유가 어찌 보면 이제 코드 한 보고서는 이제
이놈 1 이는 타 향만 보고서는 좀 쓰
약간 실수를 할 수 있는 부분이라서 0 코딩 스탠다드 가 좀 잘 들어와야
만 가능한 부분이고
근데 그게 아니라 그러 이넘은 좋은거예요 전 되게 좋다고 생각을 해요
근데 이넘이 없는 언어들이 있어요 왜 저는 왜 굳이 않았을까 생각을 많이
하는데 대표적인 모델을 4 언어를 하나 찍어서 얜 그렇고 스크립트 언어
중에 그런게 있는데 이놈이 없을 경우에 얘네들은 어떻게 아냐
그러면 그 숫자도 쓴다거나 0 1 2 3 4
아니면은 스트링을 썼어요 스트링 하면 약간 말 이스트 웨스트 뭐 노스
사우스 이란 식으로
내게 좀 되게 애매한 게 이럼
뭐 스트링으로 써왔고 뭐 하는거 자체가 컴파일 시에 강제가 안되잖아요
제가 예를 들어서
웨스트 를 썼는데 뭐 한쪽에서는 소문자로 떠올려 쓰고 한쪽에서 대문자로
떠올려 쓴다거나 아니면 뭐 타이포를 만들어서 오타를 만들어서 캐릭터
하나가 틀려진다 거나
하면은 솔직히 컴파일 도중에 이넘이 있었다면 잡아줄 수 있는 그런
여러가지 문제점들이 잖아요 아 이런거 좀 이상하다 라고
그게 없기 때문에 스트링 비교를 하다가 오 락 매스 타고 애쓸 비교 인데
달라
왜냐면 한테 목적 1 소문자 니까 이러고 넘어 가게 되거나 이런 단점들이
있죠 그래서 저는
알고 이 똑같은 얘기가 이넘이 있는 언어 에서 나오는 문제에요 특히
사람들이 스트링을 패스 하기 시작하면서 이걸로 어떤 뭐 아이덴티티 파이어
같이 쓰려고 한다거나 그런 경우에는 문제가 생기죠 그래서 그런 경우에는
반드시 이놈을 쓰라고 권해 주고 싶구요 사실은 그래서 이 넘은 층보다
당연히 먼저 써야 되는 거고
그래서 이 놈이 뭐 여기서 얘기가 끝나는 비디오 짧아 지니까
이 이넘이 이제 제이썬 으로 갈 때 어떻게 되냐 이런 문제도 있어요
왜냐하면 제가 아까 말했듯이 이 넘은 웬만한 언어에서는 기본적으로
아 숫자의 요 인테 저 때문에 그래서 얘 도시 샵에서 e 넘 타입으로 뭐
퍼팅 하나 만들어두고
그걸 제 1선 단 내수로 12월 라이즈 를 해버리면 은
기본 동작이 그걸 이인태 저로 철퇴 해서 처리해서
그냥 제이썬 파에는 숫자로 너 버려요 그러니까 아까 들 아까 되면서 아까
예를 든 방향에서 뭐 놀스 가영 건이었다 면은 놀스 를 코드 했었는데
제이썬 파일도 시리얼 라이즈 해 버리면 그 0이 되 버려요
그럼 뭐 저쪽에서 도 제이슨을 받아온 내가
영이 놀수 로 지정이 되어 있으면 이게 놀수 로 올라 가겠지만
여기의 단점은 이제 제이썬 빠의 하나만 보는 것만으로는 이게 뭔 짓인지
알 수가 없다는 거죠 그래서 음
제이썬 닷넷 같은 경우 예 cdr 라이즈 세팅을 바꿀 수가 있어요 이놈을
어떻게 처리할 거야 그래서 저는 이제 제가 아는 그니까
sp 단 네코 asp 닷넷 이런 프로이트 에서는
글로벌하게 세팅을 아이젠 오버라이드 해볼래요 이넘은 무조건 스트링으로
쓰고 일거라고
그래서 이 넘은 언제나 스트링으로 하고 아니면 그게 아니라 그 프로퍼티
하나마다 그걸 스트링으로 바꾸고 싶어하는 사람도 있잖아요 어떤거 숫자만
뜨고 싶고 이거는 아모 스트링으로 바꾸고 싶다
특정인 엄말 그런 경우에는 그 프로 포트가 있는 데다가 위에 액티비티를
부쳐도 되요
뭐 이름이 적힌 버텨라 스트링이 넌 컨버터 1 이넘 스크린 컴퓨터 하나
그런 애 출입이 텐데 그걸 달아 주면 되죠 그래서 그런 뭐 또 있는데 뭐
스 콘솔 프로그램이 라던가 그냥 애플리케이션 프로그램에서 제 순간엔 써야
된다면 그걸 글로벌하게 세팅을 5 벌어야 하는 방법이 있나 모르겠어요
없지 않나 싶은데
아담 내신 아담의 코어에서 이렇게 해서 비탄의 거에서 하는 분은 이제
자체 도는 웹 서버 자체가 제 있어 같네요 쓰잖아요 그 게 일선
clien 라이즈 할 때 그거 세팅을 바꿔 주는 법이 있다는 거죠 그럼
그거를 저는 무조건 바꿔주고 요 스트링 이런 컨버터 록 그리고 예전에
한번 뭐라 그럴까
에포크 타임 utc 를 쓰자 라고 했을때 이제 fti 그들이 왜 포치
라고 얘기했는데 올바른 발음을 에포크 해요 그래서 에포크 타임을 쓰는
경우에도
이제 그걸 이제 제 2선으로 갈 때 어떻게 된지 얘기한 적이 있었죠
이거는 뭐 어떻게 딱히 표준이라고 할 수 있지만 이 왜 굳이 이걸 쓸까
제대로 읽기 도 어렵고 계산하지 않은 알 수도 없고 그래서 오히려 그
국제 표준 타입 이소 타입으로 해왔고 쓴 옵션이 있다고 했죠
너 그거 또 이제 제이썬 내에서 제가 또 키는 옵션중에 하나요
무조건 데이트 타임을 처리하는 것은 이소 타입으로 저희 해라 그게 1
그 두번째가 스트링을 단 반드시 아 이 놈은 반드시 스트링으로 해라
악으로 세번째 가도 있는게
넣을 값이 있을 경우 미 널 값을 이제 제 있어 오브젝트 자체에서 에너
리라고 쓰게 해주는 옵션이 있고 아니면 은 그것을 iff 자체를 없애버린
옵션이 있고 저는 프로포즈 ft 릴 없애버린 옵션을 써요 왜냐하면 제이썬
파일 자체가 뭐 스키마가 있거나 그런 스트럭처 가 있는 언어가 안 아
뭐랄까 표 뽀 메시 라고 할 수 없잖아요
그럼 없는건 없는게 당연한거고 있는건 있는게 당연한 거고
나중에 스캐너가 바뀔 때도 뭐 자유자재로 추가하고 삭제하기 왜 있는거죠
생각을 하기 때문에
없는 것은 그냥 업소 상관없다는 생각으로 하는 너를 빼버리고
그렇게 그 다음에 오는 문제는 차
티커 는 참 중구난방 인데 kce 문제가 있죠 대소문자 문제
그래서 흔히 이제 옛날의 가장 많이 썼던 케이싱 이 못한 언더 스코어
있는거죠 밑줄 넣는거 그게 이제 스네이크 처럼 생겼다고 해서 스네이크
케이싱 이라고 많이 해요
그러면 이제 뭐 뭐
두닷 후 얻으면 2 다 넣으면 쳤다 마다 소문자로 쓰고 밑줄 붓고 두
번째는 소문자로 쓰고 이걸 이제 이름으로 썼었죠
그런데 스네이크 캐싱 이고 크게 최근에 지원 하기 시작했어요 제 있어 난
며 있어서 예전에 모 제이썬 에서 또한 있었던 거고 아니면 이제 언제나
제가 헷갈리는 건데
파스칼 케이싱과 아 카메라케이스 이 있을 거에요
카메 kl 승은 아마 첫 워드는 소문자로 시작하고 두 번째 워드는
대문자로 시작하는 데 중간에 뭐 다른 특수기 없어요 두 언어 사이의 그냥
두어도 딱 붙어있고 빈칸 도 그리스도 없이 단 두 번째 워드 만 대문자로
시작을 한다고
파스칼 케이싱 은 첫번째가 모든 언어가 대문자로 시작하는 거죠 그래서
시샵 쪽을 많이 쓴 사람은 당연히 파스카 케이싱을 선호 할 거고 그
제이썬 단 네 기본도 파스카 개신 이에요
근데 이 제국을 쪽을 이제 그 쪽에 이제 매콤 애니메이션을 따라 하시는
분들은 분명 2
아 제 생각에는 카멜 케이싱 중에 아까울 것 같고
구르고 이제 제가 어디서 얻는지 잘 모르겠지만 스네이크 개시 글 쓰는
사람도 있고 그래서 가장 많이 쓰는 현재 카멜 케이싱 이 아닌가 싶은데
4 제이썬 단 넷은 카멜 케이싱 하고 파스칼 캐싱을
읽어올 때는 어차피 대소문자 차이기 때문에 같이 잘 읽어야 아무 문제없이
읽어봐요
단 이제 이 오브젝트를 제이썬 5 쓸 때 이제 파스칼 로슨 약함에 캐싱
쓰네 그 문제겠죠
그래도 제가 지금 한 가지 딱 맘에 안드는 것은 제이슨 안내 구현 중에
어차피 이 세가지 캐싱 이 있으면 읽어올 때 만큼은 샜다
다 읽을 수 있게 해주면 되지 않을까 생각을 해요 사실은
카메라를 든 파스칼이 던 중간에 언더 스코어가 있든
번도 습관 그냥 리우 가고 읽어보면 되는거잖아요
그러면 카메 캐싱 하고 뭐 크게 다르게 써요
어차피 카메 k 씨가 파스카 케이싱 읽어 볼 때 대소문자 무시 올리고
오는 걸 테니까
그래서 읽어올 때 만큼 색다 해줄 수 있잖아 생각이 들거든요 자동으로
근데 그거를 아직 안 해주고 있다는 게 좀 아쉬운 다모 고쳐 지겠죠 정말
네 이제 제이썬 파일을 쓸 때는 어떤 케이싱 을 써야 되는 지에 대해서는
아직 아무런 아무런 아무런 협약이 없어요
저 개인적으로는 그냥 파스타 케이싱을 좀 더 좋아하고 프로퍼티는 무조건
대문자로 시작한다 라는 생각을 되게 강의 갖고 있기 때문에
음 왜냐 프로퍼티는 퍼블릭 한거니까 퍼블릭 한거는 대문자로 시작하는게
되게 강원을 저는 저 그런 코딩 스타이너 데는 파스카 케이시 생각하지만
이건 별로 중요한 문제는 아닌 것 같아요 그래서 오늘 이제 했던 얘기는
뭐 스트링 보다 이넘을 쓰는 얘기 였어요
이제 스트링으로 실수를 할 수가 있으니까
4 이제 이넘을 쓰면서 부터 이제 뭐 제이썬 넘어갈 때 뭐 스트링으로
바꾸자
또 했고 그 제가 j 선을 이제 할 때 특히 제일 쏟아내 섰을 때 설정
아는게 아까 이넘을 스팀으로 반드시 바꾸는거 그러 데이트 타임 오브젝트는
이것도 표준 전혀 없죠 제이썬 쪽에서
뭐 에포크 쓰는데 그건 예전에 말했듯이 그냥 무조건 저는 있오 포맷으로
했고 시간하고 타인 전 둘 다 나은 걸 좋아하기 때문에 그걸 쓰는게
좋다고 생각을 하고
또 안하겠습니다 그 로케이션 문제들 뭐 그런거 있었고 그리고 넣을까 처리
하는거 그거 이정도 인데 뭐 여기까지가 오늘 내용의 전부 9
정말 또 뭐랄까 제이썬 단 랜만에 설정이 거 같긴 한데 정말 웃기고
기괴한 세팅해 나도 있어요
타입 그가 이제 제이썬 파일에 들어가 있으면 이제 있어니 있는 데이터가
어떤 형인 지 전혀 알 수가 없거든요
그 변수 0 2 그래서 어떤 경우에는 특히 이제 뭐 어레이 같은걸
집었는데 그 어레 안에 들어가는 오브젝트가 형이 다룰 수가 있잖아요 그죠
상속을 받았기 때문에 그런 경우에는 제이썬 을 만들어 나와봐야 얘를 어떤
영어로 읽어야 될지 손수 어떻게 코딩을 짜 주거나 아니면 손수 컨버터를
만들어 주지 않는 이상은
조금 어려워요 그 그래서 이런 경우에 어떻게 하냐 라는 고민도 되게
많은데 제가 저는 개인적으로 안쓰는 옵션이 옛날 했었는데 이제 안 써요
좀 내부의 형이 들어 가는게 싫어서 그 형을 같이 저장할 수 있는 방법이
있어요 제 있었는데 에서 시리얼 ig 할 때
그러면 실제 그 각 섹션 마다 이게 어떤 형인 제가 나오거든요
그럼 제 있었는데 그걸 잃고 그 디스 lig 할 때 그거 형으로 기술
라이즈 해갖고 어레이 에 넣어 주거나 그래요 그래서 만약에 다양성이
필요한 사람들 중에
아
그런 내부의 형이 밖으로 드러나는 게 크게 꺼림직한 지 않은 사람들은 아
해도 해도 상관이 없고 없을 것 같은데 저는 개인적으로 내부의 쓴 형
이라던가 내부의 쓰는 데이터 타입 내부의 쓰면 api 내부의 쓴 id
기타등등 외부의 드러나며 는
아 뭐라 그럴까 음
보아 메 모 아주 중요한 문제가 아닌데
보완적으로 안 좋다고 생각해요 그 실제 뭐 os 프
예전에 얘기했던 그 이렇게 보안 지켜야 되는거 보아 스프 탑텐 해봐도
내부에 있는 데이터의 정보를 알려 주지 말라 그러거든요 뭐냐면 그 정보를
보고 나서
뭐 여러가지 방법이 있는데 뭐 이 데이터가
이제 어떤지 어떤 형식으로 만들어 지는지 개수를 할 수도 있고 아니면
그런 5
뭐랄까 2 이런 그런 서비스의 만약에 운좋게 뭐 적군 좋게 라는 걷지만
접근에서 뭔가를 쳤을 때 그것을 좀 더 빨리 파악할 수 있는 방법이 될
수 있고 뭐 기타 여러가지 이전 추측을 할 수 있는 그런 아이디어를
준다는 거죠
그에 비해 그런게 전혀 없으면 궁금해 지도 않잖아요 어떤 주어진 떡밥이
없으니까 그래서 오히려 떡밥이 더 많은 따른 웹사이트를 가게 해 준다는
그런 장점도 있는 것 같은데
그래서 개인적으로는 그런 뭐라 그럴까 타입의 들어가는 걸 좋아하지 않아요
오히려 그것보다는 만약에
음 제 1선 안내서 그냥 타입을 직접 노출하는 게 아니라 타임 맵핑을
노출할 수 있다면 그러니까 예를 들어서 내가 이제 실제 이 코드의 쓰는
타입은 이건데 그 타입의 이름을 그대로 가져다 쓰는게 아니라 그 타입을
뭐 예를 들어서 뭐 뭐 근로와 다 더 전부다 저쩌고 어쩌고 저쩌고 다 뭐
뭐 유저 이렇게 돼 있는 타입이라면 앞에 거다 뛰고 그냥 아 유저라는
것은 유저라고 불었으면 좋겠어
그러니까 이제 제가 이름을 뭐 쇼트 난 그런 이름을 이제 매핑을 해주는
거죠 그게 이제 클래스 위에다가 액티비티를 할 수도 있을 거고 그런
식으로 다른 차례 그 타입이 들어가고 그 타입 의 일거 같고
아 거기에 출원해 하고 읽어올 수 있다면 그것은 좀 써 볼만 할 것
같아요
네 지금 말하고 나니까 그런 게 이미 있지 않을까 생각도 갑자기 들었어요
그래서 한번
비디오를 녹화를 마치고 뭐 확인을 해 봐야 했는데 그게 있다 며 는
저희가 이제 다형성 때문에 겪었던
그런 제이썬 그 시리얼 라이즈 하는거 에 대한 문제를 많이 극복을 할 수
있겠죠
그래서 그렇게 된다면 어 그냥 지금처럼 이거 해결하기 위해서 좀 이상한
꼼수 쓰는데
그런 짓을 안 하고 할 수 있지 않을까 그런 생각도 지금 되네요
그래서 빛 욕구 확인해 봐야겠다
소 늘은 하나는 한 3분 저까지 가 하고 싶었던 말이 어떤 것 같고 그
뒤에 3부는 또 헛소리 했고
에 뽑혔습니다
