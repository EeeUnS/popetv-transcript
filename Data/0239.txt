오랜만에 다시 ace 얘기 좀 해볼게요 그렇지 너는 지금 이대로 c 샵에
있는 ac 근데
지프 퍼레이즈 다르진 않을 거라고 봐요 전에 몇 번 말씀을 드렸고
j 싱크가 웨 뭐냐 그러면 은 예전 같은 경우에는 뭐라 그럴까
어떤 특정한 이를 비동기로 처리하려면 그 일마다 스레드를 하나를 만들고
했거든요
그러니까 제가 만약 cpu 에 코어가 되게 가 달려있는데 쓰레드가
하드웨어 스레드가 4개 줘
여기서 뭐 여러가지를 동 피도 온게 로 하는 거에요 그러면
비동기 일마다 쓰레드 하나씩 뽑아 같고 그 예를 들어서 예전 같은게 좀
잘못 만든 네트워크 시스템 보면은 컬렉션 1 열릴 때마다 스레드를 하나
만들어 돌렸 거 든 요 커넥션이 뺏기면 쓰레드가 되고
200개의 스레드를 학 하드웨어 네 개의 쓰레드가 처리 해야 되니까
1 25개 시철이 라는 건데 계속 바꿔야 되요
메모리 위 주소 바뀌고 바뀌고 이러면서 컨텍스트 스위치 때문에 제 속도
저하가 20% 30% 일어나 오거든요
이거를 했던 게 제 트레드 개발이 요 기반 이었고 그 다음에 나온
방법중에 태스크 기반 이라고 해서 이렇게 어떻게 하 스레드가 얘기가 있을
거고
잡을 비동기 가 잡을 100대 해야 되며 는 25개 잡을 만드는데 걸
스레드로 만드는게 아니라 태스크 라는 논리적인 단위로 만들어서 그
25개를 각 쓰레드 받아 주는 거죠 그래서 하나씩 하수처리 하는거
이런식으로 아니면 뭐 이슬을 그 애가 뭐랄까
아니면 이걸 조금 조금씩 않아서 처리 하더라도 이 스레드를 바꾸지 않기
때문에 그에 대한 비용을 내지 않는거 이런것에 태스크 시스템 이라고
했어요 그래서 이제 cina 씽크 코드라는 거 있잖아요 웨이신 큰 거
oa 테 넣고 이게 이런 태스크 기반 을 탱크 시스템 기반으로 돌아가는
거예요
보온을 하려는 얘기에는 그게 중요한게 아니지만 어쨌든 hoa 트가
스레드를 만드는 것보다는 속도가 좀 성능이 빠르다 낭비하는 시간이 없어서
그 정도로 이해해주시면 좋고
음 최근에 그냥 h 잉크가 과연 그걸 또 왜 서버를 좀 자다가 최근의 웹
서버 프로그램을 짜다가 어
ac 크자 바르는게 맞는건가 과연 레이싱카 빠른 건가 왜냐하면 a 싱크
하는거 에 대한 오버헤드 도 없진 않거든요 그냥 h&m 거 없이 수는
것보다 백 좀 자료를 찾아봤어요
그래서 결과적으로 뭐냐면 이렇게 생각하시면 되더라구요 예를 들어서 그 제
웹서버에
그 이 지극 이걸 처리해줄 수 있는 그 태스크 수가 예를 들어서
배 깨라고 할게요 그렇죠
그러면
그 커넥션 200개가 들어올 때 약간 리크 스 가 100개가 들어올
동안은
ac 싱크로 쓰나 ac 글 안 쓰나 거의 속도가 비슷해 비슷해요
근데 그 다음부터 가전 있어줘요 100개를 넘어가는 순간 부터는 어떤
시기를 가려면
예시 크로스 쓴다면 은 200개를 가지고 진행할 게
교환을 하면서 계속 되는거니까 100개가 많고 이벤트가 들어왔으면 그냥
무작정 기다리는 게 아니라 200개 실행 하다가 잠깐 멈추고 따는 거
100 개 좀 실행 하다가 잠깐 멈추고 따는 거 좀 실행 하다가 이런
식으로 왔다갔다 해요 그래서 결과적으로는 하나하나에 잡은 빨리 안 끝날
수 있지만 모든 사람에게 너무 느리게 끝나질 않네요
그러니까 이제 웹에서 이미지 스트링 받는 것만 봐도 이미지 그렇게 쫙
보이기 시작하며 나은가 오는구나 사람이 기다리지만 이미지가 25g 보지도
않은 채 시작도 않은 이제 5초 10초 기다리면 짜증을 내자 나요 그래서
그런거라 좀 가까워
근데 그 것만이 문제가 아닌 그 또 하나 재밌는 게 뭐냐면
a 싱글 않은 경우에는 결과적으로 뒤에 있거나 페기 끝낼 때까지 기다려야
되는 거잖아요
그럼 200개가 끝나면 모든 게 동일한 시간에 끝난다면 으니까
1 실행을 하시면 똑같다면 은 스무스하게 끝나요 기다리는 시간만 길어지고
내 재밌는 게 뭐냐면
이렇게 하다가 이제 1 중간에 있는 지금 작동하고 있는 하나가 있잖아요
그게 다른거에 비해 100배 시간이 걸리나
그럼 이 뒤에 딜레이는 엄청나게 길어져 그래서
그 자비가 가지고 있는 음
태스크 주소 태스크 드레드 프레임의 테스코 수보다
이 퀘스트가 많지 않다면 h 잉크를 않아 핵심을 하지 않나
성상 이런걸 자가 없다고 보고 코드 뭐 가독성이 라던가
오버헤드 줄이는 종묘에서 의식을 안쓰는 역시 한 거예요
그런데 이거를 나중에 스케일 시켜서 갑자기 노드가 몰릴 때 갑자기 하나가
박 스파이크 되면서 엄청 시간 걸릴 때 뒤에 지막 일본이 분식 기다리는
일이 없게 해야 되면
그러니까 이거는 그래프 이렇게 올라가다가 까 이렇게 가다가 갑자기 이렇게
올라가 버려야 의식을 안 쓰냐
근데 예식을 쓰면 그래도 그래프가 되게 완만하게 올라가서 어느정도 유지가
되죠
그게 이제 그 피크가 없기 때문에 일어서
그런 뭐라 그럴까 음
스케일러 빛 이라 그렇죠 단 어느 순간 로드가 왔을 때 모든 사람이
잠깐씩 느려질 수 있어도 한 명이 마
뭐 엄청나게 오래 기대하다 타이머 때는 일이 없게 하는 그런거를 하기
위해서는
으
a 씨가 나은것 같더라구요 그래서 요즘 나오는 그런 베스트 프랙티스 a
싱크를 많이 써라 라고 하는 얘기가 그것도 관련이 좀 있는것 같아요
으
그래서 저도 이제 고민을 하다가 2심 코우타 바꾸게 바꿔야 되겠구나
생각은 하고 있어요
그런데
으 르
좀
그렇죠 웹 이라는 것은 아무래도 이제 어떤 일이 일어날 지금 하는
것이니까
제가 이제 컨트롤 못하는 거니까 그래서 이제 아 뭐라 그럴까
웹 쪽에선 a 체크 말씀이 맞는것 같고 게임 쪽에서는 으
후지 a 싱크 가만히 필요한 경우가 많지 않은거 같아요 그냥 게임 쪽은
대부분 내가 다 컨트롤 되는 임파워먼트 9 안되는 거라고 제 파일
시스템의 네트워크 시스템 좋으니까 이 쪽 뺀 5 그는 그렇게 이 징가 그
얘기가 있지 않을 것 같고 그냥 새로운 거기 때문에 써 보겠다는 자세 좀
버리는게 좋을 것 같아요 제가 한 번에 나오더니 퀘스트 가까이 a 싱크
차별 깨고 그 a 씽크 작업에서 이제 기대되는 대상국 네트워크가 됐든
파일 됐든 그거에 대한
제가 최소한의 그 이 속도가 얼마나 라는 그런 확신이 있고 그 정해져
있다면
콘솔 쪽은 특히나 그렇죠 구제에 이 순간은 필요가 없는것 같아요 그래서
그런 얘기를 하고 싶었고
음 하나 할게 더 있었어요
예 a 시크 이제 시세를 쓰다보면 은
a 시크 보이드를 쓰지 말라 그래요 저도 한번 썼다가 난리가 났었는데
이 싱크대는 반드시 예언한 알수록 반드시 태스크가 들어와야 되요
ace 급 오일을 쓰면 은 이게 나중에 까
o 에이트 가 안될 거야 아마 태스크가 태스크 아니 오 보이 들면 그래서
오이 태가 안 되면서
이게 나중에 컨텍 싹 지워버리고 나중에 쓰려고 할 때 에러 나거든요
익셉션
써 a 씽크 뒤에 그 뭐라 그럴까
보이드 들어가면 일단 무조건 잘못된 거라고 보시고 예외는 이게 이벤트
핸들러 이때만 되요
이벤트 들로 이때는 뭐 여러가지 이유가 있는데 철우 애국가 먹었는데
어쨌든 a 그가 태스크를 받지 않고 왠만한 이벤트 핸들러에서
그리고 hev 드 아 척의 지금 정확히 위치한 수도가 먹었어요 읽은 뒤에
까먹었어요 1 찾은 전에 읽어서 근데 어쨌든 예외는
그렇게 말 기억해 주시면 될것 같아 이벤트 핸들러가 아닌 이상은 주고
대신 그 뒤에는 보이드 건물 안 된다 무조건 태스크가 입니다
그보 윗 여기면 그냥 테스크 가 와야 되고 보이 0이 아니면 태스크 하고
각과 로 열고 실제 미팅 되는 반한 0
집어 넣어야 되고 그 정도로만 음 기억해 주면 될 거 같고
이게 제가 마지막 한 마디만 더 하죠
예전에 한번 c 샵 의 기본 동작에 잘못되고 있다는 얘길 한 적이
있잖아요
2 ac 잉크 보이더라 그래요 또 a 싱크 보이드 는 기본적으로 컴파일
에러가 나요 정상이라고 봐요
그리고 이 그러면 이제 이벤트 핸들러 쓰는 사람들은 아 나는 이게 올바른
뭔가요
여기서 h 그 보겠소 되는데 그러면 거기서 어떤 다른 키워드를 써 같고
그 디폴트 babu 를 오버라이드 해서 이건 되는거 이런식으로 바꿔야
되거든요 근데 이제 이 싱크에 깊은 걸을 닭 사람이 어떻게 딱 제품을 다
공부하고 못써요 보인다 를 쓰는 거지 사실은 왜 컴파일 되고 내 컴퓨터
에 나오는 저 작동을 해 그 목회 하고 넘어갔는데
이제 프로덕션 임파워먼트 하면 거기서 문제가 생기고 디버깅이 어려워 지는
거죠
그런거를 막기 위해 이제 언어가 기본 동작에 좋아야 된다는 얘기를 예전
다른 비디오 되서 했죠 근데 c 자부 때도 좋았는데 이렇게 망가진 게
있었고 h 컴페어 있어 망가진 거라 저에게 했고 지금 생각한 a 싱크
보이듯 오만가지 뭐예요
기본적 레이 시급 5 이들은 컴파일러 수준에서 신택스 중에서 안되게
막아버리고
그걸 o 라이드 하기 위해서 일단은 키워드를 써서 오버라이드 를 했어야만
이게 제대로된 좀더 실수가 저번 코드를 만들 수 있는 거죠 그래서
개인적으로 좀 아쉬운 부분 으 그 정도로 하고 오늘 비디오는 마치 끼로
굉장히 많은 얘기 했구나
25 이드의 성능 ac 그랬을까 안 쓸까
기본 동작 그리고 애심 보이더라
어 그정도 뽑혔습니다
