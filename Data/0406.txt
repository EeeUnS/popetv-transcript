이 안녕하세요 풉니다 음 최근에 버그 이야기했던 게 되게 인기가 많았어요
그 외 게임 쪽 버거도 그랬지만 무슨 하드웨어 스퀘어 4 버그 이런거 듯
보시면 사람들이
아 이런 심바 깐 얘기를 하는구나
그러면 그거를 정말 고치기 위해 개발자들은 이런 고생을 했구나 개고생을
했구나 뭐 이런 생각을 하셨던 것 같아요
음 원래 그 당연히 하드웨어 사는
이제 왕림 이시기 때문에 그 분이 만들어 놓으면 어떻게 된 맞춰 가야
되는 게 저희의 일이죠
예를 들어서 최근에 있던 그 인텔의 목 스펙트라 그런것도 하드웨어 자체의
문제를 현재 이제 os 단에서 열심히 배치하고 있잖아요
뭐 그럼 문제 뭐 뭐 그 분들이 이제 왕이고 저희가 따라 가는 걸 수도
있고 아니면 우리는 이런 문제를 아무리 그 사람들 때문에 문제가 생겨
써도
우리는 착한 사람들이니까 서로서로 돕고 살아야 돼
이런 개념일 수도 있겠지만 솔직히 에게 면 제가 욕 안먹게 사는 거죠
제가 만든 게임이 어떤 콘솔에서 드럽게 느리게 돌아가며 는 콘솔 욕을
하는 사람보다는 제목을 하는 사람이 많을 거고 뭐 그러면 저도 이제 뭐
도움이 못 복하고 그래서 그런거라고 생각을 해요
그런 의미에서 이제
제가 거기에 최근에 달렸던 이제 개발자의 거짓말 버그 이야기
거기서 즉 어떤 이제 하드웨어 제조사 얘기를 하면서 이렇게 얘기를 쭉
했었어요
미제 그 하드웨어 사이 제 얘기를 보고 사람들이 과
대단하다 학 된다면 고소한 당해야 이런 얘기 하는데 무슨 고 30 물고
도장 해요 우리가 비밀이 있지 근데 그 하드웨어 4 의 그때 얘기는
사실은 컨퍼런스 여기서도 나왔던 걸로 기억을 하기 때문에 공개돼 있는
얘기일 수도 있어요 저기 뭐 그럼 뭐 중요하지 않고 그래서 그런 오늘은
또 이제 그런 약간 하드웨어 제조사에
삽질이 라는 거에 대해서 조금 얘기를 해보려고 해요
아 뭐 이미 알고 있는 얘기들은 좀 많이 빼고 비디오가 좀 너무 길어
지는 것 같으니까 짧게 한 두가지만 얘기를 할게요
이 두 제조회사는 가트너 잘 수도 있고 아닐 수도 있어요
아 제가 이름을 곧바로 박히게 되게 애매한 것 같아요
이제 이 두 제조 에서는 유명한 할 수도 있고 아닐 수도 있어요
그래서 쉴드를 쳐야지 어떤 일이 있었냐 며 는
둘다 이제 핸들 일들 기기의 요
이제 핸드헬드 게임기 그래서 제가 둘다 작업을 해 봤고 그래서 얼마전에
커멘트 에서도 새로운 걸 집 하고 싶으시다는 데 임베디드 시스템 해보세요
라고 하지만 저는 그거 다 2배 본 사람이에요 콘솔 한다 이미 되기
때문에
그래서 한 콘솔은 되게 재밌었던 게 뭐냐면
이제 이 콘솔에 하드웨어 자체로 지원하는 기능들이 있어야 되요
그래픽을 할 때 그래야만 하드웨어 가속을 더 빨라 지니까
이 하드웨어는 그래서 이제 삼각형 같은것이 화면이 이렇게 있다고 생각을
해봐요
그러면 삼각형을 그릴 때 삼각형이
이 경계 밖으로 나가는 경우가 있잖아요 그럼 하드웨어적으로 생각한
잘라주는 기능들이 있어요 사실은 그럴 걸 이제 클리퍼 라고 해요
짧은 다해서 클릭 그럼 이제 삼각형이 아까 이렇게 경기가 이렇게 사각형이
이렇게 못 나갔다 던가 이렇게 되면은
이걸 잘라서 얘를 없애버리고 여기서 새로운 지오메트리 만들어 갔고 그
지음 엣지를 보여줘야 돼요 저한테
그러지 않으면 삼각형을 이제 화면에 그리고 웨스트 라이즈 할 때 메모리
이상으로 받고 넘어가서 이거 어케 쌓여 순간 이제 하드웨어 제어 뻑
있나요
그래서 이걸 막으려고 삼각형 클리퍼를 만들어 놨어요
그런데 작동을 안해 버그가 있던거 작동 1 2 주니라 정확히 보이지
기억을 기억이 안나는데
작동을 암에 그래서 삼각형에 나가서 그려주면 무조건 뻑이 났어요 그래서
아
그래 또 하드웨어 법을 했구나 출시가 바빠 꾸나
이제 뭐 어쨌든간에 고객들은 날 욕할 땐 2 내가 고쳐야지
계속 하드웨어 클리퍼를 저희가 만들었어요 직접
4 재미 썩는 이게 이제 힘들 뜨기 2기 잖아요
그러면 cpu 성능이 이렇게 좋지가 않아요
이제 하드웨어의 클리퍼를 만들었는데
뭐 하하 소프트웨어 클리퍼 줘 삼각형 클리퍼를 이제 소프트웨어 에서
만들었는데 삼각형 어디인지 보고 이제 아 삼각형이 경계 밖으로 나가면
새로 이제 지원했지만 들고 새로 만들고 이런식으로
아
만들었는데
너무 드렸어요
아니 cpu 가 달리는데 그 카드에서 가속 해줘야 되는 기능을 얼마나
얼마나 내리게 써
너무 드렸어요 특히 느려지는 이제 이유가 두 가지가 있었지만 두어 가지가
있죠 뭐 c 코드를 썼는데 어셈블리가 제대로 안 나왔거나 아니면 이게
메모리를 해서 접근 해야 되는건데
메모리를 접근할 때마다 메모리 캐쉬 에 자꾸 만들어 가요
근데 이건 한번 쓰고 버릴 건데 캐쉬에 집어넣고 뭐 하는 연산 이번 무드
링 거야
아 그러면 이 캐쉬 를 그리고 이제 뭐 곱셈 이런거 할때 일반적인 cpu
로 곱셈을 하면은
뭐 한번에 플롯 하나만 뭐 꼭 고 파거나 이런게 되지만 그 하드웨어는 한
번에
이제 뭐 플러드 값을 그 숲 전 값을
곱셈을 정확히 바뀐 지 기억이 안나지만
뭐한 16개를 1권의 할 수 있다던가
이런 카드와 달려 있었어요 그리고 그걸 슬램 어셈블 있어야 됐고 그래서
결과 셈을 있었어요
어셈블리 쓰는데 또 e 하드웨어의 레지스터가 엄청 많아요
뭐 저희 지금 1 민 30일 쓰는 것처럼 5
레지스터 32개 이런게 아니라 레지스터가 백 몇 개가 있었어요
그러면 코드를 1주 딸 때마다 이 레지스터의 니고 옮기고 적어 이거
옮기고
아이 벡터 프로세서 이렇게 강물을 업하고 그럼 캐쉬는 겜이 싸니 캐쉬는
이제 안 들어가니까 그렇게 섀도 빨라졌고 어셈블리의 최적으로 짜고 있고
그럼 이제 그 막 백 몇 개 된 레지스터 레지스터 하나당 또 에
32bit 도 아니고 막 벡터 레지스트 약 꽃 막 내내 줄짜리 막 이렇고
는 32비트 그럼 그거 이렇게 우리 표로 만들어 두고
아 이거는 지금 여기서 1번에서 썼고 쭉 그 꾹
이번에 썼고 3 보낼 수 없고 이렇게 아 그 이제 다시 다 채워 러니까
4번에서 다시 재활용하고 있고
이거를 진짜 손으로 다 트래킹 하면서
클리퍼를 짰던 기억이 있어요 이제
그래서 결과적으론 하드웨어 자체가 뻑이 나는 문제를 소프트웨어로 고쳤고
성공적으로 게임을 했죠 그리고 재미있는것은
이게 저희 만의 문제는 아니었을 거라고 생각을 해요
그 하드웨어 서 이제 밀리 스 하는 모든 게임은 다 이지 되었겠죠
하드웨어 4 갈아입을 주지 않았고 나중에 나올 수도 있지만 저희가 이제
초창기에 만들 때는 없었어요
그런걸 했던 기억이 있어요 그래서 아 이제 게임 개발자가 부서 어셈블리의
코딩 할 이유가 있나요 라고 얘기할 때
있더라구요 이트 라구요 뭐 pc 에서 오는 거면 은 당연히 좀
들어가겠지만
있더라구요 그래서 그때
약간만 알고있다 샘 분리를 제대로 이제 요 해보게 된 계기이기도 한데
4 재미있는 것은 어셈블리 워낙 먹는거 자체는 간단하기 때문에
그거를 만드는건 어렵지 않아요 그 원래 한줄 갖고 돼야 되는 그 코드를
이제 어셈블러 모습들이 될 수도 있거든요
그럼 고 50 술자리 코드를 이제 만들면서 중간에 길을 잃지 않게
조심하는 게 중요한 거죠 그래서 그런 일을 했었고 그 첫번째 이야기
뭐
저번 편에 얘기했던 하드웨어 삽질 보다는 조금 임팩트가 드라 줘
두번째 이야기 이거는 또
역시 핸드헬드 기기 휴대용 기기 인데 이거 되게 씬 밖에 딴 게 뭐냐면
이 때 이 게임을 만들 때 어
[음악]
플랫폼 6 개 용으로 제가 렌더링 엔진은 포팅 해주는 그렇고 얘긴가 때
길 수도 있어 4개에서 6개 다인데 기억이 잘 안나요
포팅 해줄텐데
어 이거는
딴거 를 먼저하고 이거 이기기를 제일 마지막에 받았어요
그렇다 받았는데 렌더링을 다 준비하고
렌더링 코드 다 만들고 뭔 시간이 걸릴 거 아니에요 그래 엄마 이제 하고
하고 삼각형을 다 끼워 써 상 학교도 뭐 괜찮아 고요 괜찮구나
그 이제 정삼각형을 뛰어 썼거든요 그게 왜 중요한지는
보다 중에 사각형을 띄었던 거다 4 캐멀 떼어서 정사각형을 아 괜찮어
좋아하죠
그래서 이제 매쉬 만드는 것 하고 띄었어요 뛰었는데
정사각형을 띄울 때는 멀쩡해 보이는 게
메쉬를 찍어서 띄운 이까 화면이 옆으로 누워있어 옆으로 누워있어
뭐야 이건 내가 뭘 더 잘 못한것 열심히 고민하다가 삼각형을 그려 보자
생각해 정상 게임이 이렇게 그래야 되잖아요 화면에 찍고 나니까 이때 실제
삼각형으로 바꾸니까 옆으로 누워있어
옆으로 그래서 호두의 모직 게임은 이렇게 자꾸 하는건데
이렇게 보고 하라는 건가 뭐 이런 고민을 하다가 이제 문서를 좀 더
자세히 드셨어요
정확히 내가 어떻게 되는건지 뭐 근데 1호 차였는데
이유가 정말 씀 박해 써요 이유가
보통 기기로 이렇게 들고 있으면 x 가 좌우로 가져 y 가 위한 회로가
줘
이 기기는 x 가 br 해줄까
y 가 좌우로 가 보면서
애들은 뭐 한 거지 왜 이딴걸 만든 것이라고 고민을 할 수 밖에 없었죠
그래서 그냥 열심히 이제 곰이나 같은 생각은 원래는 얘 내가 오락기 를
길게 만들려고 했던 게 아닐까 라는 생각을 했어요
그러면 xy 가 되고 뭐 요렇게 오락 하려고 했는데 나중에 무슨
이유에선지 이제 아 풀 가는 것인 좋은거 같애
그 옆으로 바뀌었던 것 같아요 그런데 그 상황에서 이제 하드웨어 자체는
이미 xy 를 스펙이 나왔을 거 아니에요 화면 크기가
뭔데 api ask 이렇게 만들었구나
그걸 유지하는 걸 그냥 갔던거 같아요 그래서 이미 따른 플랫폼에서는
모두다 간단하게 이제 x 가 좌우 y 가 위아래 이렇게 해갖고 모든걸
그리고 있었는데 이 플랫폼 하나 때문에 x 를 여기 와 일을 이렇게 할
순 없잖아요 그래서 마지막에 모든거 다 그려 두고
화면을 그리기 전에 한 번 회전을 시키는 코 들렀어요
그러니까 뭐 소리 미즈 갔다가 다시 한번 그리는 그런 패스를 눌 수 밖에
없었죠
이 기계가 그때 작업했던 길이 가장 느린 길이었어요
gpu 도 가장 딸리는 기계 없고 그럼에도 불구하고 그 하드웨어의 이제
좀 삽질을 막기위해 그럴 수 밖에 없었고
그 뒤에 이제 뭐 그래서 뭐
시간상으로 제가 볼때는 1mm 2mm 정도의 이제 1 밀리 세컨드 2
밀리 세컨드 정도의 이제
성능저하 4 있었지만 뭐 어쩔 수 없죠 뭐 그렇지 않고 이거 기준으로
만들고 다른 것을 고치게 너무 일이 많아지고 그것도 올바른 방법 또
아닌거 같고
그래서
그랬던 기억이 있어요 뭐 이외에 또
지금 말한 하드웨어 자체의 이제 또
따른 문제도 있었어요 사실은 그래서 이 하드웨어는 제가 보면서 아 이거
참
주먹구구 로 만들었구나 라는 생각을 하드웨어 있는데 그걸 이제 뭐라고
얘기 좀 어떤건지 말할 순 없고 흠이 자꾸만 이렇게 하드웨어가 왜 이꼴이
나는야 이제 라는 얘기를 해야 되요 사실은 그쵸
그럼 일단 일어 이꼴이 안나는 하드웨어 어떤건지는 말씀을 드릴 수 있어요
이제 게임 하드웨어 중에 마소 x 박스는 제가 말했던 문제 중에 아무
것도 봤어요 때까지
그럼 이 차이가 뭐냐 를 전대 잃고 열심히 고민했거든요
뭐 cpu 아키텍처 가 틀린 야 뭐 틀릴 수도 있고 같을 수도 있죠
아 근데 결과적으로 차이는 뭐냐면은
넌 제가 이제 동료한테 들은 얘기인데
마이크로소프트는 기반 자체가 소프트웨어 개발 로 시작한 회사에요
그래서 무슨 짓을 하고 무슨 이제 하드웨어를 만들던 간의
따른 하드웨어 제조사에 비해 소프트웨어 이제 지원이 굉장히 잘 되어
있어요 그리고 개발자들이 어떻게 개발을 하고 어떤 이제 있게 일반적인
컨벤션 이고 상식이고 개발자들 한테 그런걸 이해를 잘해요
그래서 뭐 x y 좌표를 잡는거 라던가 뭐 예전에 제가 말했던 이 3d
좌표 잡는거 라던가 이런거 에서 고민을 많이 하고 잘하는 것 같고 실제
라이브에서 포트도 좋고 디버그 툴 2 보통 게이 게임 이래 처음 콘솔이
나올때 같이 나와요
따른 하드웨어 제조사는 콘솔이 처음 나올때 디버그 툴 같은거 잘 없구요
한 6개월 대부터 나오기 시작을 해요 그 더 마소 는 확실하게 그게 잘
되어있는 회사고
그 외에 따른 이제 콘솔 개발사 중에서
아니면 게임 하드웨어 개발사 중에서
정작 소프트웨어 개발 자체가 중심이 되고 있는 회사는 많지 않아요
이 사람들은 말 예전부터 이제 카드 웨어를 열심히 잘 맞는 사람들이에요
그러면 하드웨어로 만들 때 하드웨어 제 성능을 높일 수 있는 굉장히 많은
노하우가 있고 그걸 이제 하드웨어를 잘 제작을 할 수 있고 카드의 엔진
이어져 사실은 그 소프트웨어 엔지니어가 아니라 그리고 소프트웨어 엔지니어
들도 별로 없고 그래서 해당
그럼 걔네들이 중 api 에는
일단 되게
아씨 c 스타일의 apl 훨씬 많이 줘
이제 마이크로소프트는 c 스타일도 있지만 싶을 스타일 되게 많이 주고
이런 반면에 그냥 다른 하드웨어 제 의사들은 보통 그냥 c 스타일의
무조건 포인터로 바르는 그런 이제 a 폐를 많이 주기도 하고
하드웨어에서 정말 막 내가 알지 않아도 되는 하드웨어 들 충분히 중간
단계에서 총 능 져 안하고 api 로 함수
이제 씩은 애처럼 멋있게 만들 수 있는 함수 조차도 하드웨어를 더라구요
디버거 툴도 잘 없고 디버그 틀에 도 쓸데없는 것들 한눈에 딱 보일 수
있게 리포트를 뽑아주는 게 아니라 자 이게 모든 c 그날이 약으로 시그날
1000개 주고
아청 게 내가 보면서 약 뭐 해야 되지 이런 고민하고
그래서 그런 차 인것 같아요 그래서 뭐
소프트웨어 개발자 입장에서 당연히 개발하기 쉬운 플랫폼이 저야 좋죠 근데
요즘은 그렇지 않지만 예전 처럼 어느 하드웨어로 갈렸다 성능차이가 뭐
엄청 나고 그 성능 차이 저하 되는게 게임은 못할 정도의 문제였다면
뭐 하드웨어 제어 4 님들 한테 맞습니다 가야 되는 게 맞고
그리구 이제는 이제 마소가 사실은 게임 어깨를 뛰어들고 게임 코 속에
뛰어들고 이 많은 걸 되게 많이 바꿔 놨어요
그래서 마소가 정말 게임 업계에서 바꾼게 뭐가 있냐면
예전에는 사람들이 말도 안되는 그런 id 있었어요
막 정말 사용하기 불편하고 디버깅 되게 구리고 이런 것들 썼는데 이제는
이제
마소가 비주얼 스튜디오로 완벽하게 미 기 시작했고 게임 쪽에서
나중에 원래 이제 코드 뭐 에디팅 은 비주얼 스튜디오에 해서 스튜디오에서
해도 이제 아이 디버깅 자체는 따른 id 에서 했던 경우도 많은데 이젠
웬만한 콘솔 회사들이 다 비쥬얼 스튜디오에서 디버깅이 되게 바꿔 버렸어
그만큼 이제 아 이런 개발 툴의 좋음 이 얼마나 개발 툴에 따라 얼마나
성능 퍼포먼스 화자 성능이 아니라 저희들 퍼포먼스가 차이가 나고
얼마나 게임을 빠르게 만들 수 있는지가 증명이 됐기 때문에
그리고 게임 더 복잡해 졌고 이제 그만 이 따라갔어요 그런 식으로 그리고
예전에는 뭐 gpu 툴이 라던가 이런 것도 거의 없던 콘솔 들에서 이제는
쓸 수 있는 툴 들이 나오고 있고 그거 이제 처음 나올때부터 만들려고
노력을 좀 더 하고
그런 것들을 보면서 아 그리고 또 이제
예전 같은 경우는 콘솔 0으로 게임이 개발하며 는 pc 에서는 못 돌려
거 든요
요즘은 나 이제 pc 에 돌릴 수 있게
점점 나오고 있죠 예를 들어서 개발을 뭐 예를 들죠 닌텐도 스위 청으로
1 개발을 하고 있다
그러면 인체도 스위치 콘솔에서 당연히 돌려야 되지만 개발 킷 해서 pc
에서 돌 빨리빨리 돌려보면서 테스트도 가능하게
뭐 이런식의 개념도 많이 나오고 있고 그래서 뭐 마소가 이제 들어와서
이제 생태계를 많이 변화 시켜 준 것도 좋고
그리고 마소 오는 아니지만 clam 잇죠 클랜 이라고 하는 그 lem
기반의 컴파일러 그것도 이제 많이 앗 울어 와서 그게 들어왔기 때문에
사실은 또 비주얼스튜디오 쪽으로 옮길 수 있는 것도 있었어요 따는 플랫폼
들도
그래서
뭐 오늘은 또 버그 이야기 일환으로 삽질 했던것을
그 얘길 했네요 음 특정지역의 살아 얘기 안 했으니까 욕먹을 일은 없겠지
이런 일도 많아요 새로운 콘솔 잡을 때마다 굉장히 신기한 것들 많아요
예 뽑혔습니다
