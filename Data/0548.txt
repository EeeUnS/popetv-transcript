[음악]
w
안녕하세요 포프 입니다 이 비디오를
보고 무슨 얘기지 제목을 보고 무슨
얘기 잡고 오신 분들이 있을것 같아요
가끔 우리 프로그래밍 쪽에 있다보면
은 그런 이렇게 깐 뭐 그런 말
하시는 분들이 있어요 모공 아기
중요한 게 아니고 코딩이 중요한 게
아니고 입문하기 사실은 도 중요하다
어그 볼 때마다 저는 실제 인문학 또
있고 처음 나온 학교가 더 때였으니까
그리고 공학도 했죠 양쪽을 다 해본
입장으로서는 아 그거는 괜히 쓸데없이
분란을 일으키는 것 같구요 제
기준에서 쪽 올바르게 설명할 수 있는
방법은요
컴퓨터 분야나 모임 문학분야 나 일을
잘하는 사람들의 사고 방식은 과학적
사고방식 플러스 수학적 사고 방식이
둘 다 들어가 있습니다
그래 수학 문제를 푸는게 아니라 실제
수리적 사고방식이 모든 자 라는거 에
자기 자란 사람들의 속해 있어요
골에서 그 제목이 나오는건데 이
비디오의 제목이 개발자가 문서 정리
하는 것만 봐도 요 이 개발자가 실제
괜찮은 프로그래머 인지 아닌지를 볼
수가 있구요 실재 대학생이 어떤 뭐
리포트 라던가 그런거 에서 ms 워드
라던가 액수도 온리 p 이런걸로
문서를 정리해 왔을 때 그 문서를
어떻게 작성 했느냐 만 보는
것만으로도 이 사람이
programmer's 자지를 어느
정도이며 도 어느정도 판단이
가능합니다 그래서 만약에 여기서 말한
것 중에 안하고 계시는게 있다면요
한번 쭉 곰곰히 생각을 해보시고 그냥
내가 문서 이런 기능 있음 올라서
이런 거야 라는 억울함 있으시다면
빨리 고치세요 그게 뭐냐면 은 문서를
정리할 때 ms 워드 hwp 정리할
때 뭐 그냥 평문을 적는게 아니라
보통 뭐 헤딩 트 말고 이런걸 합니다
뭐 헤딩 1 헤딩이 헤딩 3 헤딩 4
그렇게 폰트 크게 달라지고 뭐 볼드
채 달라지고 이렇게 되죠 그럼 문서가
잘됬다 보면요 저는 클릭을 한번 mr
그 위에 클릭을 해 보고
u5 폰트 헤딩 원이 실제 워드 에서
지원하는 스타일 헤딩 원으로 되어
있는지 아니면 그 문서 작성자가 곡
엄마 선택을 해서 폰트를 바꾸고
볼드체 를 바꾸고 폰트크기 만 일
2박 바꿔 줬는지 그걸 봅니다 그거
하나 보는 것만으로 이 사람은 일
잘하는 사람 못하는 점이 꽤 나옵니다
자
만약에 내가 헤디 뭐니 내 문서에
5개가 있어요 지금은 내가 헤딩 원이
앞 폰트가 16 이 되면 좋겠어요
폰트 크기가 16 으로 바꿔 났어
나중에 내가 그걸 알고 좀 큰 것
같애 14 로 바꾸고 싶어 그리고
폰트 자체도 무슨 굴림체 에서 분
서체로 바꾸고 싶어 왜 멋졌던 그러고
싶어 그런 경우에 이것을 하나씩
하나씩 까서 바꿔야 되죠
하지만 그러지 않고 워드 에서
지원하는 스타일 중에 헤딩 원 헤딩
원으로 다 바꿔 놓으면 은 모든 헤딩
원은 똑같은 스타일 똑같은 폰트
사이즈 똑같은 폰트를 사용하게 되어
있거든요 그거를 미리 제대로 사용해
봤다면 그 스타일 을 바꾸는 것만으로
모든 게 다 바뀝니다
이게 개발하고 무슨 상관이 있냐 며
뇨 있냐구요 두가지 세 가지 네가지
까지도 가는데 몇가지 생각나는건
말씀드릴께요 이게 첫 번째 말하면
코드 중복 입니다 사실 어떤 스타일을
이 텍스트의 적용하는 건데 그
스타일을 다 벗고 되는 거야 1 1
그리고 1 바꿀 때마다 내가 따로따로
바꾸는 거예요 그러다 가끔은 마우스
잘못 클릭하 기도하고 숫자 1번
입력하게 돼요 그러면 어느순간
헤딩하는 시 보고 언어가 14 가
되버리는 거야 그럼 버그가 생겼죠
원래부터 스타일로 만들어 놓고 스타일
1 은 바꿨다면 그 복 없이 다
고쳐지는 거죠 그리고 시간 낭비라는
부분도 있죠 내가 헤딩이 50개
60개 70개 가 되면은 스타일의 가
바꾸는 걸로 모든 끝나지만 그게 아닌
경우에는 헤딩으로 안해놓고 하나씩
했다면 그걸 뭐 바꾼 으로 시간이 더
걸리죠 그래서 속도 라는 부분도
있어요 그 요건은 그런 코드 중복
관리 시간 이런거 고 그 외에 또
하나의 여기가 사람들이 잘 생각
못하는게 않아 있는 것 같은데 2
깨 바로 인주 액션이라는 거에요
포인터의 포인터 사실 이게 뭐냐면 은
포인터 라는 개념은 요
이제 프로그래밍에서 메모리 어디에
가면 데이터가 있어야 되요 내 그
데이터가 있는게 아니라 메모리 어디에
가면 거기에 따른 쪽지가 있는 거야
나 니 메모리 여기 얻고 저쪽에 있어
다른 위치에 있어 가서 파 한마디로
곧바로 가는게 아니라 한 번 우회해서
가죠 그래서 인 줄 액션 이라고
합니다 이거와 똑같은 거예요 스타일
얘는 딱 볼 때 폰트크기 너무 작업
16으로 곧바로 바꿔야지 굉장히
직관적이고 직접적 이 줘 근데 그게
아냐 나 이뻐 특히 받고 싶어 내
스타일 헤딩 원이라고 이렇게 헤딩
원으로 가서 거기서 폰트 크게 바꿔
해 줘 인재육성 개념의 의 포인터
개념 이에요
자 그럼 포인터가 뭐가 중요한 이룰
수 있어요 자의 똑같은 개념이
엄밀하게 말하면 개체 지향 에 가서
요 추상화 일반 와 로 가는 겁니다
추상화 일반 왜 필요해요 물론 오피
이상한 사람들은 이상하게 소리 하는
사람들은 엉뚱한 얘기 하지만
결과적으로 공통된 로즈의 공통된
데이터를 하나로 묶어서 하나로
관리자는 겁니다 그렇기 때문에 아까
말했던 코드 중복과 똑같은 얘기에요
그걸 하고 있는 겁니다 개체 지향
설계 하면 무슨 이상한 디자인 패턴
배우고 별로 이상하지 다 하시는데
결과적으로는 이런 공통적인 무언가를
찾아서 그것을 공통으로 뽑아서 그걸
하나로 합치고 이것을 공유하는게
방법이다 사실일까 그게 가장 기출 저
높이 요
그거랑 똑같은 거예요 근데 문서에서
이미 그것을 못하는데 코딩 해서 그걸
할 수 있다 굉장히 의심스럽고 그래서
그것의 안됩니다 그러신 분들 자
그러면 이게 정말 대처 장의 끝나는
얘기 까 아닙니다 지금 말하는 방식이
과학적 사고방식이 굉장히 기도합니다
그리고 지금은 이 돌고 있는 머신
론이 바로 과학적 사고방식을 굉장히
강하게 서포트하고 바뀌는 과정 이구요
인간의 사고 방식 자체도 굉장히 과학
좋자고 방지 에 가깝습니다 그거를
어느 정도까지 할 수 있느냐 남이
굉장히 단순한 수준에서 멈추는 야 좀
더 고차원적인 논리 추론 까지 간의
차이 뿐이에요
무슨 얘기 라고 있냐면 요 사람은
일반화를 하는 동물입니다 오늘도 해가
동쪽에 햇던 4 어제 동쪽에 떴는데
그렇게 동쪽에 있었는데 해는 동쪽에서
떠나 보다 이게 일반적인 사람의 추운
방식입니다 나중에 그걸 뭐 과학에서
배우고 천문학에 서로 배우고 이런거
게 있겠지만 그게 없었을 때 내가
처음 보는 데이트할 때 처음 봤을땐
그렇네 두번째 때 저런 4 세번째
전에 5 데이터 1 2 3번이 같은것
같은데 그럼 이건 이렇게 도는 게
아닐까 그리고 가정을 배우죠 그리고
그 가정이 틀리다고 죽는 때까지는
짐이 될 때까지는 그냥 믿습니다
사람들이 보통 이런 것도 있잖아요
어떤 불의의 사람들의 싫어하는 경우도
있잖아요 사람을 다 잘 지낼 수
없으니까 그럴 때 보통 보는게
그겁니다 내가 뭔가 문제가 있을 때
이란 사람 있어요 필요한 사람
만나는데 a 가 가지고 있던 보였던
어떤 행동이나 말투 중에 비슷한 게
있어요 뭔가 경계가 되지만 사람은
선입관을 가지고 보면 한데 라고 또
찰 지내다가 또 못하던 술을 맞았어
싫어하는 사람 않는데 a 하고 b
하고 보여줬던 그 비슷한 패턴이 또
뭔가 있어 그러면 그게 반복되다 보면
어느 순간 이런 식으로 말하는 사람
요런식으로 뭔가 표현한 사람을 그냥
일단 피하 줘 웬만해서는 잘 가까이
안가죠 뭐 아예 안 보는 사람도 있고
아니면 적당히 멀리서만 보는 사람
수요 조심하면서 크게 바로크 겁니다
패턴을 통해서 어떤 일반적인 가설을
만들고 그 가설이 정확히 어떻게 돕는
지르 난 몰라
그의 머신 러닝 요 참고로 말하면
일단 믿고 가다가 내가 틀리다고 주면
2대까지 이렇게 할게 왜냐면 다른
소주 매니 달아 나의 감정을 아껴야
하니까 이런 얘기입니다
지금 말했던 이 문서 작업도 마찬가지
물론 그런 기능이 없다고 스타일 같은
기능이 없다고 생각할 수 있어요 문서
처음 작성할 때 ms 워드 처음
작성할 때 저도 그런 거 몰랐어요
폰트가 바꾸면 되지 바꾸면 되지
이러고 있었어요 그러다가 본서가
길어지니까 박 한번 보 스타일 바꿀
때마다 바꿀 게 엄청 많아 지는 거야
그때 누군가 옆에 있는 어떤 사람이야
크고
이 스타일을 사용하면 한 번에 대해
라고 말해줘서 깨달았죠 하지만 정말
똑똑한 사람들은 아 뭔가 좋은 방법이
있지 않을까
내가 이거 루베 반복하고 있어야 되지
그리고 뭐 이런 생각을 하게 되는
거예요 그 생각을 딱 하는 순간 이제
그런 방법을 찾아보다가 이런 기능이
있네 검색 찾아보면 나오는 거고 내가
이 기능인지 검사하거나 누군가 나를
가르쳐 주지 않으면 모르는 거죠
아니면 이 기능을 처음 만든 사람도
있을거 아닙니까
그 사람은 우리가 보통 생각하는
수학에서 무슨 이론을 만들고 가설을
만들고 검증해 나가는 이런 훌륭한
대단한 사람들 중에 한 명이 거죠
하지만 프로그램 오는 뭐 그렇게 천재
수학자 는 아니어도 어느 정도까지는
가설을 세우고 검정하고 어느 정도까지
일반화를 해서 공통 몸을 만들고 코트
중복을 없어서 코드 유지보수가
가능하게 만들 수 있는 사람이어야
합니다
그거는 중 이어 때부터 어느 정도
성향으로 보여요 그리고 인터미디어트
될 때쯤에는 이미 결정이 납니다 이
사람은 평생 안 될 사람이 사람은
가능성 있는 사람이 사람은 이미
올바르게 가고 있는 사람 3가지 정도
그렇기 때문에 내가 주니어 로서
작성하는 문서 그리고 아니면 내 같이
장애 뭐 취업하기 위해 제출하는
문서에서 그럼 문서 포맷 을 그거
하나 하나가 본인한테 안좋아 보일 수
있는 부분들이 사실은 있어요 그래서
혹시라도 아직 직장에 안 들었거나
주니어 이신데 이런 스타일링에 라던가
공통되는 그런 기능을 잘 안쓰시는
분들 남들은 나한테 일을 안 하고
있어도 이미 누군가는 나한테 이미
안좋게 보고 있을 수 있습니다
그 생각을 잘 하세요 그런 게 중요한
겁니다
그래서 지금 가주 간단하게 ms
워드나 이런걸로 설명을 드리면서
프로그램은 어떻게 연결되는지를 얘기
했을 뿐이에요 사고방식 결과적으로는
우리가 말하는 수학적인 사고방지
과학적인 사고 방식이 일반화 능력
그리고 인주 액션 포인터 랑 다
관련이 있는 얘기다
여기서 한가지 더 나아가면 은
유용성에 부분도 사실은 나옵니다
문서를 어떤 헤딩으로 박아주면 요
거기서 목차를 그냥 뽑을 수 있습니다
스타일 원스타일 투 아니 헤딩 헤딩
더 가져다가 목차를 예쁘게 꾸미면
되요 그러면 그 데이터가 이미
존재하니까 그거를 따로 처리해서
목차를 만드는게 는 굉장히 간편합니다
하지만 그러지 않았다면 목차를 한땀
한다 폰 수 만들겠죠 그 여기서
말하는 건 뭐냐면 은
문서에서 폰트 크기가 크다고 그게
무조건 헤딩이 라고 판단할 순 없어요
왜냐하면 그냥 다른거 폰트로 클 수도
있으니까 그러면은 내가 머리속에서
원했던 건 헤딩 온 헤딩 토 헤딩
쓰리 인데 실제 내가 하고 있는
작업은 그거에 특화된 작업을 하고
있는게 아니라 일반화된 작업을 하고
있는 겁니다 그래서 얘는 특정적 이지
않고 a 가 될 수도 있고 비가 될
수도 있어요
하지만 일 잘하시는 분들은 기본적으로
모든 것을 특정 줘 잉 걸 좋아합니다
왜냐하면 그래야 커뮤니케이션 에도
문제가 없어요 똑같은 그 트레이트
라고 하죠 똑같은 뭐 이렇게 보여지는
현상 비슷한 습관 그런가보다 이런
것들이 있어요 하지만 뭔가 레 특정
적으로 얘기 아지 하지 않는 사람은
일단 프로그래밍 하면 굉장히 힘들기도
하고 컴퓨터는 특정 되는 걸
좋아하니까 그리고 협업을 할 때는
특정 적으로 얘기하지만 미숙함이 계신
없으니까 그 습관들이 있다보면 은
이거는 헤딩 그럼 헤딩으로 곧바로
해야 돼 이런 식으로 개념을 갑니다
그리고 언어 습관이 라던가 아니면 뭐
변수명을 지울때 있고 또 언어 습관이
줘 함수명 을 질 때 아니면 코드
로직을 짤 때도 특정 적으로 짜는 야
아니면 오만가지 를 의미하는 뭔가를
짜는 야도 여기서 결정이 되는거죠
측정 적으로 이렇게 짜 벌여 복
하면은 짜 벌여 타면 보는 순가
이것은 그거 하는거 한번에 나옵니다
그래서 함수 이름 잃는 순간 변수
이름이 있는 순간 이게 뭐 하는지
알게 되는데 국회 아니라 그냥 함수
이름 같은거 할때 2 썸띵 뭔가를
해라 이런 죽었거나 아니면 은 어떤
동사를 썼는데 그 동사가 뭐한 대어
소까지 를 의미할 수 있는 동사 할
그런 경우에는 되게 애매해 지는 거죠
글읽는 사람도 코드 있는 사람도 그런
식으로 특정 저 지 않아서 문제가
생기는 경우도 있습니다
그거는 뭐 여러가지 이유가 있겠지만
그런 어 어 저니 습관 프로그램
습관을 가지시는 분들은 대부분 자기
실력에 없고요 그 실력이 없다는 것을
숨기고 싶어서 특정적인 용어를 피하는
경우들을 많이 봤습니다
왜냐면 은 상대방 헷갈리면 은 내가
뭘 잘못했는지 모르거든
그냥 이해가 좀 못 글을 잘못 소켓
이러는 거지 내가 잘못하고 있다는
것을 모르고 드 그런 것들이 있습니다
그래서 그런 것들 몇가지 말씀을
드렸구요
얘기가 너무 산으로 가는 것 같으니까
그러니 쯤 끌게 요 결과적으로 하고
싶었던 얘기는 그 문서를 문서를 작성
하는거 그 때 가장 쉽게 보는것은
헤딩 같은거 그런 헤딩 이나 스타일을
잘 사용하는 것만으로도 좋게 않거나
아니겠다 그거를 사용을 못 하면 은
내 프로그램이 실력에 아니 타는
증거가 될 수 있고요 그리고 진짜
내가 프로그램이 실력이 좋은데 그
거만한 하고 있는 거라면 하세요 괜히
억울하게 내 실력보다 못볼 이유는
없잖아
근데
대학교를 졸업을 했고 그 상황에서 이
문서를 못하고 있는 사람이라면 이미
굉장히 될 수 있는 겁니다 사실
스타일링 제대로 못하고 이 사람아
스타일 못 그러나 베딩 원투쓰리
그리고 업계의 이미 있어서 한 1년
정도가 지난 메이커로 못하고 있다 며
는 그거는 본인이 못하고 있는 겁니다
실적이 없는 겁니다 그리고 실력을
높이려면 은 자세를 뜯어고쳐 될겁니다
g 그때까지 이걸 안 고치고 있다는
것 자체가 뭉개는 스타일은 얘기에요
그럼 그거 를 빼놓고 내가 뭐 책 몇
번인데 뛰어나 진다 고로 우진 않을
겁니다 그냥 내가 실제 문서라고 단순
작업이 자네 어떻게 보면은 그런 단순
작업에서 조차 보이는 자세가 있습니다
그거를 못하는데 복잡한 작업에서
뭔가를 찰 수 있다
슈퍼 천재가 아닌이상 풀거나 하고
보니 천재 일 확률은 슈퍼 천재
확률은 0.1% 미만 이기 때문에 뭐
그거 에 목숨을 걸지 마십시오
그렇게 말씀 드릴게요 보겠습니다
