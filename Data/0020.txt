to a
으
안녕하세요 포크 입니다 제가 쓰는 c 플러스 플러스 일레븐 의 기능 중
하나로 스태틱 어썰트 라는게 있어요 스타일의 어쩌다 뭐냐면
음 어썰트 라는 것은 좀 많이 써 보셨을 것 같은데
실행 도중에 어떤 조건을 검색을 해보고 그 조건이 충족하지 못하면 그
디버그 브레이크를 내는 거 거든요 그러니까 디버깅 중에 만 나오는 그런
지동 이점에 체크하는 그런 에러메세지
그런거예요 이제 저희 게임 만드는 사람들 입장에서는 뭐 아
익셉션 같은거 예외 같은걸 이제 핸들링을 잘 안해요 저희는 왜냐하면 은
성능상의 문제도 있고 그래서 그 실제 개발 도중의 충분히 에러를 많이
잡기 위해서 없어 틀을 상당히 많이 쓰는데
이제 여태까지 있다 없어 태의 문제점은
아 실행도 생에 만 벌써 틀을 확인할 수 있다는거
근데 그 외에도 컴파일 도중에 확인할 수 있는 없을 때가 상당히 많거든요
뭐 예를 들면 은 아
무슨 스트럭처 가 구조체 1 만들었고 그 구조체를 이제 뭐 하드에서
읽어보고 쓰고 이러한데
그 전에 있던 데이터의 뭐 구조체가 뭐 오바이트 였다 바이트가 다섯
개였다
근데 이게 나중에 늘어나면 문제가 생기는 경우에는
간단히 그냥 컴파일 도중에 아 그 바이트 수가 오바이트 인지 확인 해서
그 구조체 바이트 수가 그게 아닌 경우에는 컴파일 에러 자체가 나오게 할
수 있는 그런 방법이 바로 스태틱의 없어 태 요
사용하는 법은 사실 없지 않아요 어썰트 같은 경우에는 뭐 어썰트 라고
쓰고 뭐 조건 쓰고 이렇게 하는거 있잖아요 근데 스태프가 없어 트는 그냥
말 그대로 똑같이 었을 대신 스태프 버스만 쓰면 되요 근데 컴파일 시간에
판단할 수 없는 그런 조건이라면 은 컴파일 도중에 에러가 나와서 이번
스텝업 쓴 쓸 수도 없다 라고 얘기해 줄 거고요
아 그런게 아니라면 에스테틱 어썰트 는 그런 문제가 없으면 그냥 패스가
되는거고 문제가 있으면 은 그런 컴파일에 를 주는 거죠
개인적으론 되게 좋아하는 이유가 실행 cs 넣었어 짜는
뭐 문제는 없는데 실제 그 코드를 실행하게 전에는 절대 모르거든요 그
어썰트 를 어썰트 가 발생하는 것이 아닌지
근데 에스테틱 없어 태 장점은
아
코드를 반드시 실행하지 않아도 그 코다 컴파일 될 때 발생이 되기 때문에
상당히 많은 에러를 미리 잡을 수 있다는 장점이 있어요
전 stx 들이 상당히 많이 쓰고 있고요 아씨 플러스 퍼 11에서
지원하기 전에는 뭐 이상한 꼼수 를 갖고 비슷하게 흉내 내서 쓰기도
했었어요
이제는 다행히 그럴 필요가 없으니까 아 스 텍스트를 많이 쓰면 좋아요
그리고 정말 괜찮은 프로그래머는 제가 봤을때는 어썰트 하고 스티커 세트를
굉장히 많이 쓰더라구요 왜냐하면 은
버그 잡기 가 빠르니까 아 그래서 혹시라도 스티커 세트를 안 쓰셨던
분들은 이제 비쥬얼 스티드 비주얼 스튜디오 2010 1 부터 지원 라던가
2010 2011 년부터 2010 부터 지원 하던가 그렇죠
그거는 열심히 써 주셔야 할 것 같아요 뭐 2012에서 당연히 지금 지원
하니까
예 뽑혔습니다
to a 으
으 으
으
으
w2
으 으
으
